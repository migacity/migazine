{"version":3,"file":"vivliostyle.js","sources":["../src/vivliostyle/constants.ts","../src/vivliostyle/logging.ts","../src/vivliostyle/plugin.ts","../src/vivliostyle/profile.ts","../src/vivliostyle/base.ts","../src/vivliostyle/cfi.ts","../src/vivliostyle/exprs.ts","../src/vivliostyle/css.ts","../src/vivliostyle/geometry-util.ts","../src/vivliostyle/css-prop.ts","../src/vivliostyle/counters.ts","../src/vivliostyle/css-tokenizer.ts","../src/vivliostyle/task.ts","../src/vivliostyle/task-util.ts","../src/vivliostyle/assets.ts","../src/vivliostyle/net.ts","../src/vivliostyle/css-parser.ts","../src/vivliostyle/matchers.ts","../src/vivliostyle/break.ts","../src/vivliostyle/types.ts","../src/vivliostyle/diff.ts","../src/vivliostyle/vtree.ts","../src/vivliostyle/css-cascade.ts","../src/vivliostyle/css-logical-util.ts","../src/vivliostyle/sizing.ts","../src/vivliostyle/page-floats.ts","../src/vivliostyle/footnotes.ts","../src/vivliostyle/display.ts","../src/vivliostyle/layout-helper.ts","../src/vivliostyle/break-position.ts","../src/vivliostyle/layout-processor.ts","../src/vivliostyle/layout-retryers.ts","../src/vivliostyle/layout-util.ts","../src/vivliostyle/shared.ts","../src/vivliostyle/text-polyfill.ts","../src/vivliostyle/pseudo-element.ts","../src/vivliostyle/layout.ts","../src/vivliostyle/repetitive-element.ts","../src/vivliostyle/table.ts","../src/vivliostyle/math-util.ts","../src/vivliostyle/columns.ts","../src/vivliostyle/css-validator.ts","../src/vivliostyle/css-styler.ts","../src/vivliostyle/font.ts","../src/vivliostyle/page-master.ts","../src/vivliostyle/css-page.ts","../src/vivliostyle/scripts.ts","../src/vivliostyle/urls.ts","../src/vivliostyle/vgen.ts","../src/vivliostyle/xml-doc.ts","../src/vivliostyle/ops.ts","../src/vivliostyle/sha1.ts","../src/vivliostyle/toc.ts","../src/vivliostyle/epub.ts","../src/vivliostyle/adaptive-viewer.ts","../src/vivliostyle/core-viewer.ts","../src/vivliostyle/print.ts"],"sourcesContent":["/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n * @param atFirst If true, the function is registered at the first of the hook array.\n */\nexport function registerHook(\n  name: string,\n  fn: (...p1) => any,\n  atFirst?: boolean,\n): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    if (atFirst) {\n      hooksForName.unshift(fn);\n    } else {\n      hooksForName.push(fn);\n    }\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\nexport function asString(v: any): string | null {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap: { [key: string]: string[] } = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  return CSS.supports(prefix + prop, \"unset\");\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n    case \"template\":\n    case \"ua-list-item-count\":\n    case \"x-first-pseudo\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = [prefix + prop];\n      propNameMap[prop] = prefixed;\n      return prefixed;\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  const elemStyle = (elem as HTMLElement)?.style;\n  if (!elemStyle) {\n    return;\n  }\n  if (prop.startsWith(\"--\")) {\n    elemStyle.setProperty(prop, value || \" \");\n    return;\n  }\n  const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n  if (!prefixedPropertyNames) {\n    return;\n  }\n  for (const prefixed of prefixedPropertyNames) {\n    switch (prefixed) {\n      case \"-webkit-text-combine\": // for Safari\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n        break;\n      case \"text-combine-upright\":\n        switch (value) {\n          case \"all\":\n            // workaround for Chrome 93 bug https://crbug.com/1242755\n            elemStyle.setProperty(\"text-indent\", \"0\");\n            break;\n        }\n        break;\n    }\n    elemStyle.setProperty(prefixed, value);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /** @override */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set: { [key: string]: boolean } = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      if (!list.includes(listener)) {\n        list.push(listener);\n      }\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /** @override */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /** @override */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /** @override */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      const movedNode = elem.ownerDocument.getElementById(this.id);\n      if (movedNode) {\n        pos.node = movedNode;\n      } else {\n        Logging.logger.warn(\"E_CFI_ID_MISMATCH:\", this.id);\n      }\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /** @override */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit?.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit?.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit?.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n    case \"lh\":\n    case \"rlh\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRootFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit?.toLowerCase()) {\n    case \"rem\":\n    case \"rlh\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  lh: 20,\n  rlh: 20,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n      return !CSS.supports(\"font-size\", \"1q\");\n    case \"lh\":\n      return !CSS.supports(\"line-height\", \"1lh\");\n    case \"rem\":\n    case \"rlh\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  rootLineHeight: number | null = null;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    if (unit == \"lh\" || unit == \"rlh\") {\n      // FIXME: \"lh\" unit is incorrect, treated same as \"rlh\"\n      return this.rootLineHeight;\n    }\n\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = scope && this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /** @override */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    if (this.scope) {\n      context.storeVal(this.scope, this.key, result);\n    }\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"!\";\n  }\n\n  override evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"-\";\n  }\n\n  override evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"&&\";\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"||\";\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"<\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"<=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \">\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \">=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"==\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"!=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"+\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" - \";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"*\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"/\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"%\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit?.toLowerCase() ?? \"\";\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  override isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  override evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  override evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  visitValues(values: Val[]): Val[] {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n    return null;\n  }\n\n  visitEmpty(empty: Val): Val {\n    return null;\n  }\n\n  visitSlash(slash: Val): Val {\n    return null;\n  }\n\n  visitStr(str: Str): Val {\n    return null;\n  }\n\n  visitIdent(ident: Ident): Val {\n    return null;\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    return null;\n  }\n\n  visitNum(num: Num): Val {\n    return null;\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitHexColor(color: HexColor): Val {\n    return null;\n  }\n\n  visitURL(url: URL): Val {\n    return null;\n  }\n\n  visitURange(urange: URange): Val {\n    return null;\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  visitCommaList(list: CommaList): Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  visitFunc(func: Func): Val {\n    this.visitValues(func.values);\n    return null;\n  }\n\n  visitExpr(expr: Expr): Val {\n    return null;\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  error: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  override visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (this.error) {\n        return [];\n      }\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  override visitEmpty(empty: Val): Val {\n    return empty;\n  }\n\n  override visitStr(str: Str): Val {\n    return str;\n  }\n\n  override visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  override visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  override visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  override visitNum(num: Num): Val {\n    return num;\n  }\n\n  override visitInt(num: Int): Val {\n    return num;\n  }\n\n  override visitHexColor(color: HexColor): Val {\n    return color;\n  }\n\n  override visitURL(url: URL): Val {\n    return url;\n  }\n\n  override visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  override visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  override visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  override visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  override visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /** @override */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return null;\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: Visitor): Val {\n    return this;\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable: { [key: string]: Ident } = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitIdent(this);\n  }\n\n  override isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit?.toLowerCase() ?? \"\"; // units are case-insensitive in CSS\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitNumeric(this);\n  }\n\n  override isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitNum(this);\n  }\n\n  override isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class HexColor extends Val {\n  constructor(public hex: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    buf.append(this.hex);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitHexColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0]?.appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i]?.appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitSpaceList(this);\n  }\n\n  override isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  override toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (\n      this.expr instanceof Exprs.Const ||\n      this.expr instanceof Exprs.Numeric\n    ) {\n      this.expr.appendTo(buf, 0);\n    } else {\n      buf.append(\"-epubx-expr(\");\n      this.expr.appendTo(buf, 0);\n      buf.append(\")\");\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitExpr(this);\n  }\n\n  override isExpr(): boolean {\n    return true;\n  }\n}\n\n/**\n * Custom property value, may be arbitrary token\n */\nexport class AnyToken extends Val {\n  constructor(public text: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.text || \" \");\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  clip: getName(\"clip\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  discard: getName(\"discard\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  flow_root: getName(\"flow-root\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  grid: getName(\"grid\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  initial: getName(\"initial\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  keep: getName(\"keep\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  revert: getName(\"revert\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  unset: getName(\"unset\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  \"line-height\": 2,\n  color: 3,\n};\n\nexport function isDefaultingValue(value: Val): boolean {\n  return (\n    value === ident.inherit ||\n    value === ident.initial ||\n    value === ident.revert ||\n    value === ident.unset\n  );\n}\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n\nexport function isCustomPropName(name: string): boolean {\n  return name?.length > 2 && name.startsWith(\"--\");\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /** @override */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /** @override */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /** @override */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /** @override */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /** @override */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"] as CssCascade.CascadeValue;\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\n      \"counter-increment\"\n    ] as CssCascade.CascadeValue;\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(\n    expr: Exprs.Val,\n    val: string,\n    document: Document,\n  ) {\n    if (expr instanceof Exprs.Native) {\n      const ex = expr as Exprs.Native;\n      if (ex.str == \"viv-leader\") {\n        const node = document.createElementNS(Base.NS.XHTML, \"span\");\n        node.textContent = val;\n        node.setAttribute(\"data-viv-leader\", expr.key);\n        node.setAttribute(\"data-viv-leader-value\", val);\n        return node;\n      }\n    }\n\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElementNS(Base.NS.XHTML, \"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /** @override */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"data-vivliostyle-id\") ||\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\n/** */\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code === 0 || (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  CDO,\n  CDC,\n  UNKNOWN,\n  INVALID,\n  LAST = 54,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n\n  toString(): string {\n    switch (this.type) {\n      case TokenType.O_PAR:\n        return \"(\";\n      case TokenType.C_PAR:\n        return \")\";\n      case TokenType.O_BRC:\n        return \"{\";\n      case TokenType.C_BRC:\n        return \"}\";\n      case TokenType.O_BRK:\n        return \"[\";\n      case TokenType.C_BRK:\n        return \"]\";\n      case TokenType.COMMA:\n        return \",\";\n      case TokenType.SEMICOL:\n        return \";\";\n      case TokenType.COLON:\n        return \":\";\n      case TokenType.SLASH:\n        return \"/\";\n      case TokenType.PERCENT:\n        return \"%\";\n      case TokenType.QMARK:\n        return \"?\";\n      case TokenType.PLUS:\n        return \"+\";\n      case TokenType.MINUS:\n        return \"-\";\n      case TokenType.BAR_BAR:\n        return \"||\";\n      case TokenType.AMP_AMP:\n        return \"&&\";\n      case TokenType.BANG:\n        return \"!\";\n      case TokenType.DOLLAR:\n        return \"$\";\n      case TokenType.HAT:\n        return \"^\";\n      case TokenType.BAR:\n        return \"|\";\n      case TokenType.TILDE:\n        return \"~\";\n      case TokenType.STAR:\n        return \"*\";\n      case TokenType.GT:\n        return \">\";\n      case TokenType.LT:\n        return \"<\";\n      case TokenType.EQ:\n        return \"=\";\n      case TokenType.BANG_EQ:\n        return \"!=\";\n      case TokenType.DOLLAR_EQ:\n        return \"$=\";\n      case TokenType.HAT_EQ:\n        return \"^=\";\n      case TokenType.BAR_EQ:\n        return \"|=\";\n      case TokenType.TILDE_EQ:\n        return \"~=\";\n      case TokenType.STAR_EQ:\n        return \"*=\";\n      case TokenType.GT_EQ:\n        return \">=\";\n      case TokenType.LT_EQ:\n        return \"<=\";\n      case TokenType.EQ_EQ:\n        return \"==\";\n      case TokenType.COL_COL:\n        return \"::\";\n      case TokenType.CDO:\n        return \"<!--\";\n      case TokenType.CDC:\n        return \"-->\";\n      case TokenType.NUMERIC:\n        return this.num.toString() + this.text;\n      case TokenType.NUM:\n      case TokenType.INT:\n        return this.num.toString();\n      case TokenType.AT:\n        return \"@\" + this.text;\n      case TokenType.HASH:\n        return \"#\" + this.text;\n      case TokenType.FUNC:\n        return this.text + \"(\";\n      case TokenType.CLASS:\n        return \".\" + this.text;\n      case TokenType.EOF:\n        return \"/*EOF*/\";\n      default:\n        return this.text;\n    }\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n  CDO,\n  CDC,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.CDC,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.CDO,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      throw new Error(\"F_CSSTOK_INTERNAL\");\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenText = input.substring(tokenPosition, position);\n          if (isNaN(charCode)) {\n            // unclosed comment `/***[EOF]`, unclosed string `\"**[EOF]`\n            tokenType = TokenType.EOF;\n          } else {\n            // invalid, e.g, `.` in `:nth-child([.])` (Issue #597)\n            tokenType = TokenType.INVALID;\n          }\n          actions = actionsNormal;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^(\\bu\\+[?0-9a-f]+(-[?0-9a-f]+)?|,|\\s+|\\/\\*([^*]|\\*[^/])*\\*\\/)+[;}]/i.test(\n                input.substring(position - 1),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          if (input[position] !== \">\") {\n            // dashed-ident (custom property name)\n            tokenType = TokenType.IDENT;\n            actions = actionsIdent;\n          }\n          continue;\n        case Action.CDO:\n          tokenType = TokenType.CDO;\n          tokenText = input.substring(tokenPosition, ++position);\n          actions = actionsNormal;\n          break;\n        case Action.CDC:\n          tokenType = TokenType.CDC;\n          tokenText = input.substring(tokenPosition, ++position);\n          actions = actionsNormal;\n          break;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              actions = actionsIdent;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err as Error, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /** @override */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /** @override */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /** @override */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err as Error);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /** @override */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /** @override */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /** @override */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /** @override */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /** @override */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /** @override */\n  isPending(): boolean {\n    return false;\n  }\n\n  /** @override */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /** @override */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /** @override */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /** @override */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /** @override */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /** @override */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /** @override */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err as Error, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err as Error, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err as Error, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src?: string): Fetcher<string> {\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadElement\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      if (src) {\n        elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n      }\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else if (elem.localName === \"script\") {\n      setTimeout(handler, 3000);\n    } else if (src) {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src || elem.localName}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n/** vivliostyle-viewport-screen.css */\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: flex;\n    flex: none;\n    justify-content: center;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n/** vivliostyle-viewport.css */\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n  transform-origin: left top;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-spread-container] {\n  transform: scale(var(--viv-outputScale,1));\n  transform-origin: left top;\n}\n\n/* Emulate high pixel ratio using zoom & transform:scale() */\n@supports (zoom: 8) {\n  [data-vivliostyle-layout-box] {\n    zoom: calc(var(--viv-outputPixelRatio,1) / var(--viv-devicePixelRatio,1));\n    transform: scale(calc(var(--viv-devicePixelRatio,1) / var(--viv-outputPixelRatio,1)));\n  }\n  [data-vivliostyle-spread-container] {\n    zoom: calc(var(--viv-outputPixelRatio,1) / var(--viv-devicePixelRatio,1));\n    transform: scale(calc(var(--viv-outputScale,1) * var(--viv-devicePixelRatio,1) / var(--viv-outputPixelRatio,1)));\n  }\n  /* Workaround for Chromium's default border etc. widths not zoomed but scaled down */\n  [data-vivliostyle-spread-container] :where([style*=border],[style*=outline],[style*=rule]) {\n    border-width: medium;\n    outline-width: medium;\n    column-rule-width: medium;\n  }\n  [data-vivliostyle-spread-container] ::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n  [data-vivliostyle-spread-container] ::-webkit-scrollbar-track {\n    background-color: #f4f4f4;\n  }\n  [data-vivliostyle-spread-container] ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background: #c7c7c7;\n  }\n  [data-vivliostyle-spread-container] ::-webkit-scrollbar-thumb:hover {\n    background: #7d7d7d;\n  }\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  background-origin: content-box !important;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container] {\n    --viv-outputScale: 1 !important;\n    --viv-devicePixelRatio: 1 !important;\n    zoom: normal !important;\n    transform: none !important;\n  }\n\n  @supports (zoom: 8) {\n    [data-vivliostyle-spread-container] [data-vivliostyle-page-container] {\n      zoom: var(--viv-outputPixelRatio,1);\n      transform: scale(calc(1 / var(--viv-outputPixelRatio,1)));\n      transform-origin: left top;\n    }\n  }\n\n  [data-vivliostyle-spread-container] [data-vivliostyle-page-container] {\n    display: block !important;\n    max-height: 100vh;\n  }\n\n  [data-vivliostyle-spread-container] [data-vivliostyle-page-container]:not(:last-child) {\n    break-after: page;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document url-prefix()  {\n    [data-vivliostyle-spread-container] [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n    /* Workaround Gecko problem on page break */\n    [data-vivliostyle-spread-container] [data-vivliostyle-page-container] {\n      break-after: auto !important;\n      height: 100% !important;\n    }\n  }\n}\n`;\n\n/** validation.txt */\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nURI_OR_NONE = URI | none;\nIMAGE = URI | IMAGE_FUNCTION | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    leader([ dotted | solid | space ] | STRING ) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker |\n    flow-root | grid | inline-grid | contents;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | POS_NUM;\nheight = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto | clip;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none | auto;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\nmargin-break = auto | keep | discard;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nfont-display = [ auto | block | swap | fallback | optional ];\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\ncrop-offset = auto | LENGTH;\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\ntext-spacing-trim = auto | space-all | trim-auto |\n    [[ trim-start | space-start | space-first ] ||\n     [ trim-end | space-end | allow-end ] ||\n     [ trim-adjacent | space-adjacent ]];\ntext-autospace = normal | auto | no-autospace |\n    [[ ideograph-alpha || ideograph-numeric || punctuation ] || [ insert | replace ]];\nhanging-punctuation = none | [ first || [ force-end | allow-end ] || last ];\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[webkit]text-decoration-thickness = from-font | APLENGTH;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\n/* Compatibility */\n[webkit]text-fill-color = COLOR;\n[webkit]text-stroke-color = COLOR;\n[webkit]text-stroke-width = BORDER_SIDE_WIDTH;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-autospace: normal;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\ntext-spacing-trim: space-first;\ntext-stroke-color: currentColor;\ntext-stroke-width: 0;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nall = ALL;\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n[webkit]text-stroke = text-stroke-width text-stroke-color;\ntext-decoration = text-decoration-line text-decoration-color text-decoration-style text-decoration-thickness;\ntext-spacing = TEXT_SPACING text-autospace text-spacing-trim;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\ninset = INSETS top right bottom left;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n/** user-agent.xml */\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n/** user-agent-page.css */\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n/** user-agent-base.css */\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu {\n  margin: 0px;\n  padding-inline-start: 40px;\n}\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/* MathML */\nmath[display=\"block\"] {\n  display: block;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n`;\n\n/** user-agent-toc.css */\nexport const UserAgentTocCss = `\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\nsection:has(>:first-child:is(h1,h2,h3,h4,h5,h6):is(.toc,#toc)),\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nsection:has(>:first-child:is(h1,h2,h3,h4,h5,h6):is(.toc,#toc)) a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nsection:has(>:first-child:is(h1,h2,h3,h4,h5,h6):is(.toc,#toc)) li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child,\nsection:has(>:first-child:is(h1,h2,h3,h4,h5,h6):is(.toc,#toc)) li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc,\nsection:has(>:first-child:is(h1,h2,h3,h4,h5,h6):is(.toc,#toc)) :is(ol,ul) {\n  -adapt-behavior: toc-container;\n}\n`;\n\n/** vivliostyle-polyfill.css */\nexport const VivliostylePolyfillCss = `\n[data-viv-margin-discard~=\"block-start\"] {\n  margin-block-start: 0 !important;\n}\n[data-viv-margin-discard~=\"block-end\"] {\n  margin-block-end: 0 !important;\n}\n[data-viv-margin-discard~=\"inline-start\"] {\n  margin-inline-start: 0 !important;\n}\n[data-viv-margin-discard~=\"inline-end\"] {\n  margin-inline-end: 0 !important;\n}\n\n[data-viv-box-break~=\"inline-start\"]:not([data-viv-box-break~=\"clone\"]) {\n  margin-inline-start: 0 !important;\n  padding-inline-start: 0 !important;\n  border-inline-start-width: 0 !important;\n  border-start-start-radius: 0 !important;\n  border-end-start-radius: 0 !important;\n}\n[data-viv-box-break~=\"inline-end\"]:not([data-viv-box-break~=\"clone\"]) {\n  margin-inline-end: 0 !important;\n  padding-inline-end: 0 !important;\n  border-inline-end-width: 0 !important;\n  border-start-end-radius: 0 !important;\n  border-end-end-radius: 0 !important;\n}\n[data-viv-box-break~=\"block-start\"]:not([data-viv-box-break~=\"clone\"]) {\n  margin-block-start: 0 !important;\n  padding-block-start: 0 !important;\n  border-block-start-width: 0 !important;\n  border-start-start-radius: 0 !important;\n  border-start-end-radius: 0 !important;\n}\n[data-viv-box-break~=\"block-end\"]:not([data-viv-box-break~=\"clone\"]) {\n  margin-block-end: 0 !important;\n  padding-block-end: 0 !important;\n  border-block-end-width: 0 !important;\n  border-end-start-radius: 0 !important;\n  border-end-end-radius: 0 !important;\n}\n[data-viv-box-break~=\"block-start\"][data-viv-box-break~=\"text-start\"] {\n  text-indent: 0 !important;\n}\n[data-viv-box-break~=\"block-end\"][data-viv-box-break~=\"text-end\"][data-viv-box-break~=\"justify\"] {\n  text-align-last: justify !important;\n}\n[data-viv-box-break~=\"block-end\"][data-viv-box-break~=\"text-end\"][data-viv-box-break~=\"justify\"] > * {\n  text-align-last: auto;\n}\n[data-viv-box-break~=\"block-end\"][data-viv-box-break~=\"text-end\"]:not([data-viv-box-break~=\"justify\"]) {\n  text-align-last: auto !important;\n}\n\nspan.viv-anonymous-block {\n  display: block;\n}\n\nviv-ts-open.viv-ts-auto > viv-ts-inner,\nviv-ts-open.viv-ts-trim > viv-ts-inner {\n  margin-inline-start: -0.5em;\n}\nviv-ts-close.viv-ts-auto > viv-ts-inner,\nviv-ts-close.viv-ts-trim > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-close.viv-hang-end > viv-ts-inner,\nviv-ts-close.viv-hang-last > viv-ts-inner {\n  letter-spacing: -1em;\n}\nviv-ts-open.viv-ts-auto::before,\nviv-ts-close.viv-ts-auto::after,\nviv-ts-close.viv-hang-end::after {\n  content: \" \";\n  font-family: Courier, monospace;\n  word-spacing: normal;\n  letter-spacing: -0.11em;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\nviv-ts-close.viv-hang-end:not(.viv-hang-hw)::after {\n  letter-spacing: 0.4em;\n}\nviv-ts-close.viv-hang-hw > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-open.viv-hang-first > viv-ts-inner {\n  display: inline-block;\n  line-height: 1;\n  inline-size: 1em;\n  text-indent: 0;\n  text-align: end;\n  text-align-last: end;\n  margin-inline-start: -1em;\n}\nviv-ts-thin-sp::after {\n  content: \" \";\n  font-family: Times, serif;\n  word-spacing: normal;\n  letter-spacing: -0.125em;\n  line-height: 0;\n  text-orientation: mixed;\n}\n\nspan[data-viv-leader] {\n  text-combine-upright: none;\n  text-orientation: mixed;\n  white-space: pre;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof Document\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): Blob {\n  const type = opt_type || \"application/octet-stream\";\n  return new Blob(parts, { type });\n}\n\nexport function readBlob(blob: Blob): Task.Result<ArrayBuffer> {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { TokenType } from \"./css-tokenizer\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 0x1000000;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 0x2000000;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 0x3000000;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 0x4000000;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 0x5000000;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 0x6000000;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  /**\n   * For relational pseudo-class `:has()` support\n   */\n  pushSelectorText(selectorText: string) {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  override getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  override getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics, token?.toString() ?? \"\");\n  }\n\n  override startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  override classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  override pseudoelementSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  override idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  override attributeSelector(\n    ns: string,\n    name: string,\n    op: TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  override descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  override childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  override adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  override followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  override nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  override startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  override startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  override startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  override startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  override startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  override startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  override startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  override startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  override startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  override startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  override endRule(): void {\n    this.slave.endRule();\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  override endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n\n  override pushSelectorText(selectorText: string): void {\n    this.slave.pushSelectorText(selectorText);\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  override getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  override startRuleBody(): void {\n    this.depth++;\n  }\n\n  override endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  override startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  override startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  override startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  override startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  override startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  override startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  override startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  override startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  override endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  SELECTOR_PSEUDOELEM_1,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = TokenType.LAST + 3;\n\n(() => {\n  actionsBase[TokenType.IDENT] = Action.IDENT;\n  actionsBase[TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[TokenType.COL_COL] = Action.SELECTOR_START;\n  actionsBase[TokenType.AT] = Action.AT;\n  actionsBase[TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorStart[TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n\n  actionsSelector[TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[TokenType.TILDE] = Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM_1;\n  actionsSelector[TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[TokenType.TILDE] = Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[TokenType.EOF] = Action.DONE;\n  actionsError[TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[TokenType.C_PAR] = Action.ERROR_POP;\n  priority[TokenType.C_PAR] = 0;\n  priority[TokenType.COMMA] = 0;\n  priority[TokenType.QMARK] = 1;\n  priority[TokenType.COLON] = 1;\n  priority[TokenType.AMP_AMP] = 2;\n  priority[TokenType.BAR_BAR] = 2;\n  priority[TokenType.LT] = 3;\n  priority[TokenType.GT] = 3;\n  priority[TokenType.LT_EQ] = 3;\n  priority[TokenType.GT_EQ] = 3;\n  priority[TokenType.EQ] = 3;\n  priority[TokenType.EQ_EQ] = 3;\n  priority[TokenType.BANG_EQ] = 3;\n  priority[TokenType.PLUS] = 4;\n  priority[TokenType.MINUS] = 4;\n  priority[TokenType.STAR] = 5;\n  priority[TokenType.SLASH] = 5;\n  priority[TokenType.PERCENT] = 5;\n  priority[TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n  inStyleDeclaration: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index === valStack.length) {\n        break;\n      }\n      if (valStack[index++] !== sep) {\n        throw new Error(\"Unexpected state\");\n      }\n      if (index === valStack.length) {\n        // keep last comma in `var(--b , )`\n        arr.push(Css.empty);\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let parLevel = 0;\n    let v;\n    do {\n      v = valStack[--index];\n      if (sep === \")\" && v instanceof Css.AnyToken) {\n        // For nested parens in calc() (Issue #1014)\n        if (v.text === \")\") {\n          parLevel++;\n        } else if (v.text === \"(\") {\n          if (parLevel === 0) {\n            return null;\n          }\n          parLevel--;\n        }\n      }\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        if (token.type !== TokenType.EOF) {\n          this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n          this.actions = actionsErrorDecl;\n        }\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n\n      // Check invalid var()\n      if (func.name === \"var\") {\n        const name = func.values[0] instanceof Css.Ident && func.values[0].name;\n        if (!Css.isCustomPropName(name) || name === this.propName) {\n          this.handler.error(`E_CSS_INVALID_VAR ${func.toString()}`, token);\n          this.actions = actionsErrorDecl;\n        }\n      }\n      return func;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    const val = valStack[0];\n    if (val instanceof Css.Val) {\n      return val;\n    } else if (!val) {\n      return Css.empty;\n    } else {\n      // custom property value can be arbitrary token e.g. \",\"\n      return new Css.AnyToken(val.toString());\n    }\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics, token.toString());\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case TokenType.EQ:\n          case TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case TokenType.QMARK:\n            if (op != TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (token1.type === TokenType.IDENT && token2.type === TokenType.COLON) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === TokenType.O_PAR ||\n        token1.type === TokenType.FUNC ||\n        (token1.type === TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === TokenType.O_PAR || token2.type === TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    let commaCount = 0;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case TokenType.C_PAR:\n          parLevel--;\n          break;\n        case TokenType.O_PAR:\n        case TokenType.FUNC:\n          parLevel++;\n          break;\n        case TokenType.COMMA:\n          if (parLevel === 0) {\n            commaCount++;\n          }\n          break;\n        case TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value =\n      isFunc && name === \"selector\" && commaCount > 0\n        ? \"\" // selector() with multiple selectors doesn't work\n        : tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case TokenType.NUM:\n        case TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === TokenType.MINUS;\n          const hasSign = token.type === TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n    parsingRelationalSelector?: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    let selectorStartPosition: number | null = null;\n\n    if (parsingStyleAttr) {\n      this.inStyleDeclaration = true;\n    }\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n\n    for (; count > 0; --count) {\n      token = tokenizer.token();\n\n      // For relational pseudo-class `:has()` support\n      if (parsingFunctionParam && selectorStartPosition === null) {\n        // token.position may be token's start position + 1\n        selectorStartPosition = token.position - 1;\n        if (tokenizer.input[selectorStartPosition] === \"(\") {\n          selectorStartPosition++;\n        }\n      }\n\n      // Do not stop parsing on invalid property syntax as long as brackets are balanced.\n      if (\n        this.actions === actionsPropVal &&\n        this.errorBrackets.length > 0 &&\n        (token.type === this.errorBrackets[this.errorBrackets.length - 1] ||\n          token.type === TokenType.SEMICOL ||\n          token.type === TokenType.BANG)\n      ) {\n        if (token.type === this.errorBrackets[this.errorBrackets.length - 1]) {\n          this.errorBrackets.pop();\n          if (token.type === TokenType.C_PAR) {\n            // For nested func in parens (Issue #1014)\n            if (this.valStackReduce(\")\", token)) {\n              tokenizer.consume();\n              continue;\n            }\n          }\n        }\n        valStack.push(new Css.AnyToken(token.toString()));\n        tokenizer.consume();\n        continue;\n      }\n\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (\n            !this.inStyleDeclaration ||\n            tokenizer.nthToken(1).type != TokenType.COLON\n          ) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          // property assignment\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          if (!token.text) {\n            handler.error(\"E_CSS_SYNTAX\", token);\n            tokenizer.consume();\n            continue;\n          }\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"is\":\n                case \"not\":\n                case \"where\":\n                case \"has\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(text);\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                      text === \"has\",\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  continue;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case TokenType.EQ:\n            case TokenType.TILDE_EQ:\n            case TokenType.BAR_EQ:\n            case TokenType.HAT_EQ:\n            case TokenType.DOLLAR_EQ:\n            case TokenType.STAR_EQ:\n            case TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case TokenType.IDENT:\n            case TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n            this.inStyleDeclaration = true;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n            this.inStyleDeclaration = true;\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          valStack.push(new Css.HexColor(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          valStack.push(new Css.Numeric(token.num, token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n            if (this.errorBrackets.length > 0) {\n              // For nested func in parens (Issue #1014)\n              this.errorBrackets.push(TokenType.C_PAR);\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == TokenType.SEMICOL ||\n              token1.type == TokenType.EOF ||\n              token1.type == TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case TokenType.NUM:\n            case TokenType.NUMERIC:\n            case TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          // this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n          valStack.push(new Css.AnyToken(\"+\"));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n\n          // for implicit closing parens, e.g. style=\"color: var(--a, var(--b\"\n          while (valStack.length > 0) {\n            const len = valStack.length;\n            val = this.valStackReduce(\";\", token);\n            if (!val || valStack.length === len) {\n              break;\n            }\n          }\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          return true;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === TokenType.O_PAR ||\n                token1.type === TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type != TokenType.INT || token.precededBySpace) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          this.inStyleDeclaration = false;\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n            switch (this.ruleStack[this.ruleStack.length - 1]) {\n              case \"page\":\n              case \"-epubx-page-master\":\n              case \"-epubx-partition-group\":\n                this.inStyleDeclaration = true;\n            }\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == TokenType.STR || token.type == TokenType.URL) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == TokenType.SEMICOL ||\n                  token.type == TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == TokenType.STR ||\n                      token.type == TokenType.URL) &&\n                    tokenizer.nthToken(1).type == TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case TokenType.STR:\n                case TokenType.URL:\n                  if (tokenizer.nthToken(1).type == TokenType.SEMICOL) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == TokenType.STR &&\n                tokenizer.nthToken(1).type == TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    this.inStyleDeclaration = true;\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    this.inStyleDeclaration = true;\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    this.inStyleDeclaration = true;\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  this.inStyleDeclaration = true;\n                  continue;\n                case TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    this.inStyleDeclaration = true;\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                this.inStyleDeclaration = true;\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == TokenType.IDENT &&\n                tokenizer.nthToken(2).type == TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                this.inStyleDeclaration = true;\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == TokenType.COLON &&\n                tokenizer.nthToken(1).type == TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == TokenType.IDENT &&\n                tokenizer.nthToken(2).type == TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                this.inStyleDeclaration = true;\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          if (\n            parsingFunctionParam &&\n            this.errorBrackets.length == 0 &&\n            token.type == TokenType.C_PAR\n          ) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n            return true;\n          }\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (this.errorBrackets.length == 0 && token.type == TokenType.C_BRC) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          return true;\n        default:\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            switch (token.type) {\n              case TokenType.COMMA:\n              case TokenType.C_PAR:\n                if (this.actions === actionsSelectorStart) {\n                  handler.error(\"E_CSS_SYNTAX\", token);\n                } else {\n                  const selectorText = tokenizer.input.substring(\n                    selectorStartPosition,\n                    token.position,\n                  );\n                  handler.pushSelectorText(selectorText);\n                  selectorStartPosition = token.position + 1;\n                }\n                if (token.type === TokenType.COMMA) {\n                  handler.nextSelector();\n                  this.actions = actionsSelectorStart;\n                  tokenizer.consume();\n                  continue;\n                } else {\n                  handler.endFuncWithSelector();\n                  tokenizer.consume();\n                  return true;\n                }\n              case TokenType.GT:\n              case TokenType.PLUS:\n              case TokenType.TILDE:\n                if (parsingRelationalSelector) {\n                  // :has() takes relational selectors e.g. `:has(> F)`\n                  this.actions = actionsSelector;\n                  continue;\n                }\n                break;\n              case TokenType.O_BRC:\n              case TokenType.O_BRK:\n              case TokenType.O_PAR:\n                this.errorBrackets.push(token.type + 1);\n                break;\n            }\n            handler.error(\"E_CSS_SYNTAX\", token);\n            tokenizer.consume();\n            this.actions = actionsErrorSelector;\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == TokenType.INVALID) {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            } else if (this.actions === actionsPropVal) {\n              // Do not stop parsing on invalid property syntax as long as brackets are balanced.\n              switch (token.type) {\n                case TokenType.O_PAR:\n                case TokenType.O_BRC:\n                case TokenType.O_BRK:\n                  this.errorBrackets.push(token.type + 1);\n                  break;\n              }\n              valStack.push(new Css.AnyToken(token.toString()));\n              tokenizer.consume();\n              continue;\n            } else if (\n              token.type === TokenType.O_BRC &&\n              this.actions == actionsExprVal &&\n              valStack.length > 0\n            ) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (\n              token.type === TokenType.SEMICOL &&\n              this.actions == actionsExprVal\n            ) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    // throw new Error(mnemonics + \" \" + token);\n    Logging.logger.warn(mnemonics, token.toString());\n  }\n\n  override getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Check if style=\"box-decoration-break: clone\" is set\n */\nexport function isCloneBoxDecorationBreak(element: Element): boolean {\n  return (\n    (element as HTMLElement)?.style[\"box-decoration-break\"] === \"clone\" ||\n    (element as HTMLElement)?.style[\"-webkit-box-decoration-break\"] === \"clone\"\n  );\n}\n\n/**\n * data-viv-box-break attribute\n *\n * Value: [ [inline-start || inline-end] |\n *          [block-start text-start? || block-end text-end?] justify? ]\n *        clone?\n *\n * inline-start, inline-end, block-start, block-end: the side at which a box break occurs\n * text-start: the fragment starts with text or inline box\n * text-end: the fragment ends with text or inline box\n * justify: the computed value of `text-align` property is `justify`\n * clone: the computed value of `box-decoration-break` property is `clone`\n */\ntype BoxBreakFlag =\n  | \"inline-start\"\n  | \"inline-end\"\n  | \"block-start\"\n  | \"block-end\"\n  | \"text-start\"\n  | \"text-end\"\n  | \"justify\"\n  | \"clone\";\n\nexport function getBoxBreakFlags(element: Element): BoxBreakFlag[] {\n  const val = element.getAttribute(\"data-viv-box-break\");\n  return (val ? val.split(\" \") : []) as BoxBreakFlag[];\n}\n\nexport function setBoxBreakFlags(\n  element: Element,\n  boxBreakFlags: BoxBreakFlag[],\n): void {\n  element.setAttribute(\"data-viv-box-break\", boxBreakFlags.join(\" \"));\n}\n\nexport function setBoxBreakFlag(\n  element: Element,\n  boxBreakFlag: BoxBreakFlag,\n): void {\n  const boxBreakFlags = getBoxBreakFlags(element);\n  if (!boxBreakFlags.includes(boxBreakFlag)) {\n    boxBreakFlags.push(boxBreakFlag);\n    setBoxBreakFlags(element, boxBreakFlags);\n  }\n}\n\n/**\n * data-viv-margin-discard attribute\n *\n * Value: block-start || block-end || inline-start || inline-end\n *\n * block-start: the block-start margin is discarded\n * block-end: the block-end margin is discarded\n * inline-start: the inline-start margin is discarded\n * inline-end: the inline-end margin is discarded\n */\ntype MarginDiscardFlag =\n  | \"block-start\"\n  | \"block-end\"\n  | \"inline-start\"\n  | \"inline-end\";\n\nexport function getMarginDiscardFlags(element: Element): MarginDiscardFlag[] {\n  const val = element.getAttribute(\"data-viv-margin-discard\");\n  return (val ? val.split(\" \") : []) as MarginDiscardFlag[];\n}\n\nexport function setMarginDiscardFlags(\n  element: Element,\n  marginDiscardFlags: MarginDiscardFlag[],\n): void {\n  element.setAttribute(\"data-viv-margin-discard\", marginDiscardFlags.join(\" \"));\n}\n\nexport function setMarginDiscardFlag(\n  element: Element,\n  marginDiscardFlag: MarginDiscardFlag,\n): void {\n  const MarginDiscardFlags = getMarginDiscardFlags(element);\n  if (!MarginDiscardFlags.includes(marginDiscardFlag)) {\n    MarginDiscardFlags.push(marginDiscardFlag);\n    setMarginDiscardFlags(element, MarginDiscardFlags);\n  }\n}\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartBreakType(breakValue: string | null): string {\n  return isForcedBreakValue(breakValue) ? breakValue : \"auto\";\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export type ElementStyle = { [key: string]: any };\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(\n      element: Element,\n      styles: { [key: string]: Css.Val },\n      viewNode: Node,\n    );\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    rtl: boolean;\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: CssStyler.AbstractStyler;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\nexport function restoreOriginalText(changes: Change[]): string {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function restoreNewText(changes: Change[]): string {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n  pageType: string | null = null;\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace?: Whitespace): boolean {\n  if (!node) {\n    return true;\n  }\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t]*$/);\n    case Whitespace.IGNORE:\n    default:\n      return !!text.match(/^[ \\t\\r\\n\\f]*$/);\n  }\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    (nps1.node === nps2.node ||\n      // Fix for issue #869\n      (!!nps1.shadowContext &&\n        !!nps2.shadowContext &&\n        nps1.shadowType === Vtree.ShadowType.ROOTLESS &&\n        nps2.shadowType === Vtree.ShadowType.ROOTLESS &&\n        (nps1.node as Element)?.outerHTML ===\n          (nps2.node as Element)?.outerHTML)) &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startBreakType: string | null = null;\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startBreakType = this.startBreakType;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page\n      // Removed:\n      //   || this.highestSeenOffset !== other.highestSeenOffset\n      // to prevent unnecessary re-layout (Issue #681-case2)\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const startBreakType = this.flowPositions[name]?.startBreakType;\n    return startBreakType && Break.isSpreadBreakValue(startBreakType)\n      ? startBreakType\n      : \"any\";\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n  rtl: boolean = false;\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical\n      ? this.rtl\n        ? box.bottom\n        : box.top\n      : this.rtl\n      ? box.right\n      : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical\n      ? this.rtl\n        ? box.top\n        : box.bottom\n      : this.rtl\n      ? box.left\n      : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return this.rtl ? -1 : 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n    this.rtl = other.rtl;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      const outerExtent =\n        extent +\n        this.marginLeft +\n        this.marginRight +\n        this.paddingLeft +\n        this.paddingRight +\n        this.borderLeft +\n        this.borderRight;\n      this.setHorizontalPosition(\n        start + outerExtent * this.getBoxDir(),\n        extent,\n      );\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      if (this.rtl) {\n        const outerExtent =\n          extent +\n          this.marginTop +\n          this.marginBottom +\n          this.paddingTop +\n          this.paddingBottom +\n          this.borderTop +\n          this.borderBottom;\n        this.setVerticalPosition(\n          start + outerExtent * this.getInlineDir(),\n          extent,\n        );\n      } else {\n        this.setVerticalPosition(start, extent);\n      }\n    } else if (this.rtl) {\n      const outerExtent =\n        extent +\n        this.marginLeft +\n        this.marginRight +\n        this.paddingLeft +\n        this.paddingRight +\n        this.borderLeft +\n        this.borderRight;\n      this.setHorizontalPosition(\n        start + outerExtent * this.getInlineDir(),\n        extent,\n      );\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      if (this.elem.lastChild?.nodeType === 3) {\n        this.elem.lastChild.textContent += str;\n        return;\n      }\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    !Css.isDefaultingValue(val)\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, Layout } from \"./types\";\nimport { TokenType } from \"./css-tokenizer\";\n\nexport type ElementStyle = {\n  [key: string]:\n    | CascadeValue\n    | CascadeValue[]\n    | ElementStyleMap\n    | { matcher: Matchers.Matcher; styles: ElementStyle }[];\n};\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  \"hanging-punctuation\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-autospace\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-fill-color\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-orientation\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-spacing-trim\": true,\n  \"text-stroke-color\": true,\n  \"text-stroke-width\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map: { [key: string]: string } = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName?: string): Css.Val {\n    if (propName && Css.isCustomPropName(propName)) {\n      return this.value;\n    }\n    return evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  override getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  override filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  override increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((!tv || av.priority >= tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\n/**\n * setProp with priority checking.\n * If context is given it is same as\n * setProp(style, name, cascadeValues(context, getProp(style, name), value))\n */\nexport function setPropCascadeValue(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n  context?: Exprs.Context,\n): void {\n  if (!value) {\n    delete style[name];\n  } else {\n    const tv = style[name] as CascadeValue;\n    if (!tv || value.priority >= tv.priority) {\n      if (context) {\n        if (value.isEnabled(context)) {\n          style[name] = value.getBaseValue();\n        }\n      } else {\n        style[name] = value;\n      }\n    }\n  }\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) === \"_\" && name !== \"_viewConditionalStyles\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) !== \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name] || Css.isCustomPropName(name);\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): void {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyle }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyle;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      setPropCascadeValue(target, prop, av, context);\n\n      // Expand shorthand property (its value contains variables).\n      const propListLH = (\n        context as Exprs.Context & {\n          style: { validatorSet: CssValidator.ValidatorSet };\n        }\n      ).style?.validatorSet.shorthands[prop]?.propList;\n      if (propListLH) {\n        for (const propLH of propListLH) {\n          const avLH = new CascadeValue(Css.empty, av.priority);\n          setPropCascadeValue(target, propLH, avLH, context);\n        }\n      }\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit === \"em\" ||\n      numeric.unit === \"ex\" ||\n      numeric.unit === \"rem\" ||\n      numeric.unit === \"lh\" ||\n      numeric.unit === \"rlh\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    }\n    return numeric;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else if (unit === \"rlh\") {\n    return new Css.Numeric(num * context.rootLineHeight, \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  override mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  override clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  override getPriority(): number {\n    return 0;\n  }\n\n  override makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  override clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\n/**\n * Cascade Action for :is() and similar pseudo-classes\n */\nexport class MatchesAction extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstActions: CascadeAction[] = [];\n\n  constructor(chains: ChainedAction[][]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    for (const chain of chains) {\n      this.firstActions.push(chainActions(chain, this.checkAppliedAction));\n    }\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    for (const firstAction of this.firstActions) {\n      firstAction.apply(cascadeInstance);\n      if (this.checkAppliedAction.applied) {\n        break;\n      }\n    }\n    if (this.checkAppliedAction.applied === this.positive()) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  override getPriority(): number {\n    return Math.max(\n      ...this.firstActions.map((firstAction) =>\n        firstAction instanceof ChainedAction ? firstAction.getPriority() : 0,\n      ),\n    );\n  }\n\n  positive(): boolean {\n    return true;\n  }\n\n  relational(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Action for :not() pseudo-class\n */\nexport class MatchesNoneAction extends MatchesAction {\n  override positive(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Action for :has() pseudo-class\n */\nexport class MatchesRelationalAction extends MatchesAction {\n  constructor(public selectorTexts: string[]) {\n    super([]);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    for (const selectorText of this.selectorTexts) {\n      let selectorWithScope: string;\n      let scopingRoot: Element;\n      if (/^\\s*[+~]/.test(selectorText)) {\n        // :has(+ F) or :has(~ F)\n        scopingRoot = cascadeInstance.currentElement.parentElement;\n        const index = Array.from(scopingRoot.children).indexOf(\n          cascadeInstance.currentElement,\n        );\n        selectorWithScope = `:scope > :nth-child(${index + 1}) ${selectorText}`;\n      } else {\n        // :has(F) or :has(> F)\n        scopingRoot = cascadeInstance.currentElement;\n        selectorWithScope = `:scope ${selectorText}`;\n      }\n      try {\n        if (scopingRoot.querySelector(selectorWithScope)) {\n          this.checkAppliedAction.apply(cascadeInstance);\n          break;\n        }\n      } catch (e) {}\n    }\n    if (this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  override relational(): boolean {\n    return true;\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: CssStyler.AbstractStyler): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent;\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val = (pseudos?.[pseudoName]?.[\"content\"] as CascadeValue)\n            ?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * CSS `leader()` function\n   * https://www.w3.org/TR/css-content-3/#leaders\n   */\n  visitFuncLeader(values: Css.Val[]): Css.Val {\n    let leader: string = \"\";\n    if (values[0] instanceof Css.Ident) {\n      switch (values[0].stringValue()) {\n        case \"dotted\":\n          leader = \".\";\n          break;\n        case \"solid\":\n          leader = \"_\";\n          break;\n        case \"space\":\n          leader = \" \";\n          break;\n      }\n    } else if (values[0] instanceof Css.Str) {\n      leader = values[0].stringValue();\n    }\n    if (leader.length == 0) {\n      return new Css.Str(\"\");\n    }\n    return new Css.Expr(new Exprs.Native(null, () => leader, \"viv-leader\"));\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n      case \"leader\":\n        if (func.values.length <= 1) {\n          return this.visitFuncLeader(func.values);\n        }\n        break;\n    }\n    // Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return func;\n  }\n}\n\n/**\n * POST_LAYOUT_BLOCK hook function for CSS leader()\n * @param nodeContext\n * @param checkPoints\n * @param column\n */\nconst postLayoutBlockLeader: Plugin.PostLayoutBlockHook = (\n  nodeContext: Vtree.NodeContext,\n  checkPoints: Vtree.NodeContext[],\n  column: Layout.Column,\n) => {\n  const leaders: Vtree.NodeContext[] = checkPoints.filter(\n    (c) =>\n      c.after &&\n      c.viewNode.nodeType === 1 &&\n      (c.viewNode as Element).getAttribute(\"data-viv-leader\"),\n  );\n  for (const c of leaders) {\n    // we want to access the bottom block element, which contains single leader().\n    let container = c.parent;\n    while (container && container.inline) {\n      container = container.parent;\n    }\n    const leaderElem = c.viewNode as HTMLElement;\n    const pseudoAfter = leaderElem.parentElement;\n    const leader = leaderElem.getAttribute(\"data-viv-leader-value\");\n    const previous = leaderElem.textContent || leader;\n    const { writingMode, direction, marginInlineEnd } =\n      column.clientLayout.getElementComputedStyle(pseudoAfter);\n\n    function setLeaderTextContent(leaderStr: string): void {\n      if (direction === \"rtl\") {\n        // in RTL direction, enclose the leader with U+200F (RIGHT-TO-LEFT MARK)\n        // to ensure RTL order around the leader.\n        const RLM = \"\\u200f\";\n        leaderElem.textContent =\n          (leaderStr.startsWith(RLM) ? \"\" : RLM) +\n          leaderStr +\n          (leaderStr.endsWith(RLM) ? \"\" : RLM);\n      } else {\n        leaderElem.textContent = leaderStr;\n      }\n    }\n\n    // prevent leader layout problem (Issue #1117)\n    leaderElem.style.marginInlineStart = \"1px\";\n\n    // reset the expanded leader\n    setLeaderTextContent(leader);\n    // setting inline-block removes the pseudo CONTENT from normal text flow\n    pseudoAfter.style.display = \"inline-block\";\n    pseudoAfter.style.textIndent = \"0\"; // cancel inherited text-indent\n\n    const box = column.clientLayout.getElementClientRect(\n      container.viewNode as Element,\n    );\n    const innerInit = column.clientLayout.getElementClientRect(pseudoAfter);\n    const innerMarginInlineEnd = column.parseComputedLength(marginInlineEnd);\n    // capture the line boundary\n    // Some leader text (\"_\" e.g.) creates higher top than container.\n    if (writingMode === \"vertical-rl\" || writingMode === \"vertical-lr\") {\n      if (direction === \"rtl\") {\n        box.top += innerMarginInlineEnd;\n      } else {\n        box.bottom -= innerMarginInlineEnd;\n      }\n      box.left = innerInit.left;\n      box.right = innerInit.right;\n      box.top = Math.min(innerInit.top, box.top);\n      box.bottom = Math.max(innerInit.bottom, box.bottom);\n    } else {\n      if (direction === \"rtl\") {\n        box.left += innerMarginInlineEnd;\n      } else {\n        box.right -= innerMarginInlineEnd;\n      }\n      box.top = innerInit.top;\n      box.bottom = innerInit.bottom;\n      box.left = Math.min(innerInit.left, box.left);\n      box.right = Math.max(innerInit.right, box.right);\n    }\n\n    function overrun() {\n      const inner = column.clientLayout.getElementClientRect(pseudoAfter);\n      if (\n        box.left > inner.left ||\n        box.right < inner.right ||\n        box.top > inner.top ||\n        box.bottom < inner.bottom\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    function setLeader() {\n      // min-max search\n      let lower: number;\n      let upper: number;\n      setLeaderTextContent(previous);\n      if (overrun()) {\n        lower = 1;\n        upper = previous.length / leader.length;\n      } else {\n        lower = previous.length / leader.length;\n        upper = lower;\n        for (let i = 0; i < 16; i++) {\n          let templeader = previous;\n          for (let j = 0; j < 1 << i; j++) {\n            templeader += leader;\n          }\n          setLeaderTextContent(templeader);\n          if (overrun()) {\n            upper += 1 << i;\n            break;\n          }\n        }\n      }\n      // leader is set to overrun state here\n      for (let i = 0; i < 16; i++) {\n        let templeader = \"\";\n        const mid = Math.floor((lower + upper) / 2);\n        for (let j = 0; j < mid; j++) {\n          templeader += leader;\n        }\n        setLeaderTextContent(templeader);\n        if (overrun()) {\n          upper = mid;\n        } else {\n          if (lower == mid) {\n            return;\n          }\n          lower = mid;\n        }\n      }\n      setLeaderTextContent(leader);\n    }\n\n    // set the expanded leader\n    setLeader();\n\n    // Without inline-end, we use margin-inline-start to adjust the position.\n    // To get the margin size, set float, calculate then cancel float.\n    const innerInline = column.clientLayout.getElementClientRect(pseudoAfter);\n    if (direction == \"rtl\") {\n      pseudoAfter.style.float = \"left\";\n    } else {\n      pseudoAfter.style.float = \"right\";\n    }\n    const innerAligned = column.clientLayout.getElementClientRect(pseudoAfter);\n    // When float is applied, the content will be removed from the normal\n    // text flow, and box inset will be also removed.\n    // When content comes back to the normal text flow, then inset effects again.\n    function getInset(side: string): number {\n      let inset = 0;\n      let p = pseudoAfter.parentElement;\n      while (p && p !== container.viewNode) {\n        inset += column.getComputedInsets(p)[side];\n        p = p.parentElement;\n      }\n      return inset;\n    }\n    let padding = 0;\n    if (direction == \"rtl\") {\n      if (writingMode == \"vertical-rl\" || writingMode == \"vertical-lr\") {\n        padding = innerInline.top - innerAligned.top - getInset(\"top\");\n      } else {\n        padding = innerInline.left - innerAligned.left - getInset(\"left\");\n      }\n    } else {\n      if (writingMode == \"vertical-rl\" || writingMode == \"vertical-lr\") {\n        padding = innerAligned.bottom - innerInline.bottom - getInset(\"bottom\");\n      } else {\n        padding = innerAligned.right - innerInline.right - getInset(\"right\");\n      }\n    }\n    padding = Math.max(0, padding - 0.1); // prevent line wrapping (Issue #1112)\n    pseudoAfter.style.float = \"\";\n    leaderElem.style.marginInlineStart = `${padding}px`;\n  }\n};\n\nPlugin.registerHook(Plugin.HOOKS.POST_LAYOUT_BLOCK, postLayoutBlockLeader);\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 0x100000;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal: Css.Val = Css.ident.inline;\n    const display = props[\"display\"] as CascadeValue;\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let floatVal: Css.Val = Css.ident.inline;\n    const float = props[\"float\"] as CascadeValue;\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"] as CascadeValue;\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"] as CascadeValue;\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"] as CascadeValue;\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = (\n          this.currentStyle[\"counter-increment\"] as CascadeValue\n        )?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            (incrPropValue instanceof Css.SpaceList &&\n              incrPropValue.values.includes(Css.ident.footnote))\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet = props[\"string-set\"] as CascadeValue;\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    const content = pseudoprops[\"content\"] as CascadeValue;\n    if (content) {\n      pseudoprops[\"content\"] = content.filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    styler: CssStyler.AbstractStyler,\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n\n    // Substitute var()\n    this.applyVarFilter([this.currentStyle], styler, element);\n\n    // Calculate calc()\n    this.applyCalcFilter(this.currentStyle, this.context);\n\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"] as CascadeValue;\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (\n          quotesVal === Css.ident.auto ||\n          quotesVal === Css.ident.initial\n        ) {\n          this.quotes = [\n            new Css.Str(\"\\u201c\"),\n            new Css.Str(\"\\u201d\"),\n            new Css.Str(\"\\u2018\"),\n            new Css.Str(\"\\u2019\"),\n          ];\n          // FIXME: quotes:auto should be based on the content language\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (\n            (pseudoName === \"before\" || pseudoName === \"after\") &&\n            !Vtree.nonTrivialContent(\n              (pseudoProps[\"content\"] as CascadeValue)?.value,\n            )\n          ) {\n            delete pseudos[pseudoName];\n          } else if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(\n    visitor: Css.Visitor,\n    elementStyle: ElementStyle,\n  ): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName) && !Css.isCustomPropName(propName)) {\n        elementStyle[propName] = (\n          elementStyle[propName] as CascadeValue\n        ).filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element: Element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  /**\n   * Substitute all variables in property values in elementStyle\n   */\n  applyVarFilter(\n    elementStyles: ElementStyle[],\n    styler: CssStyler.AbstractStyler,\n    element: Element | null,\n  ): void {\n    const elementStyle = elementStyles[0];\n    const visitor = new VarFilterVisitor(elementStyles, styler, element);\n    const LIMIT_LOOP = 32; // prevent cyclic or too deep dependency\n    const propsLH: ElementStyle = {}; // for shorthand -> longhand cascade\n\n    for (const name in elementStyle) {\n      if (isMapName(name)) {\n        const pseudoMap = getStyleMap(elementStyle, name);\n        for (const pseudoName in pseudoMap) {\n          this.applyVarFilter(\n            [pseudoMap[pseudoName], ...elementStyles],\n            styler,\n            element,\n          );\n        }\n      } else if (isPropName(name)) {\n        const cascVal = getProp(elementStyle, name);\n        let value = cascVal.value;\n\n        for (let i = 0; ; i++) {\n          if (i >= LIMIT_LOOP) {\n            value = Css.empty;\n            break;\n          }\n          const after = value.visit(visitor);\n          if (visitor.error) {\n            // invalid or unresolved variable found\n            value = Css.empty;\n            visitor.error = false;\n            break;\n          }\n          if (after === value) {\n            // no variable, or all variables substituted\n            break;\n          }\n          // variables substituted, but the substituted value may contain variables\n          value = after;\n        }\n        if (value !== cascVal.value) {\n          // all variables substituted\n          const validatorSet = (styler as any)\n            .validatorSet as CssValidator.ValidatorSet;\n          const shorthand = validatorSet?.shorthands[name]?.clone();\n          if (shorthand) {\n            if (Css.isDefaultingValue(value)) {\n              for (const nameLH of shorthand.propList) {\n                const avLH = new CascadeValue(value, cascVal.priority);\n                const tvLH = getProp(elementStyle, nameLH);\n                setProp(\n                  propsLH,\n                  nameLH,\n                  cascadeValues(this.context, tvLH, avLH),\n                );\n              }\n              delete elementStyle[name];\n            } else {\n              // The var()-substituted value may have complex structure\n              // (e.g. SpaceList in SpaceList) that ShorthandValidator\n              // cannot handle, so use toString and parseValue.\n              const valueSH = CssParser.parseValue(\n                (styler as any).scope,\n                new CssTokenizer.Tokenizer(value.toString(), null),\n                \"\",\n              );\n              if (valueSH) {\n                valueSH.visit(shorthand);\n                if (!shorthand.error) {\n                  for (const nameLH of shorthand.propList) {\n                    const avLH = new CascadeValue(\n                      shorthand.values[nameLH] ??\n                        validatorSet.defaultValues[nameLH] ??\n                        Css.ident.initial,\n                      cascVal.priority,\n                    );\n                    const tvLH = getProp(elementStyle, nameLH);\n                    setProp(\n                      propsLH,\n                      nameLH,\n                      cascadeValues(this.context, tvLH, avLH),\n                    );\n                  }\n                  delete elementStyle[name];\n                }\n              }\n            }\n          } else {\n            elementStyle[name] = new CascadeValue(value, cascVal.priority);\n          }\n        }\n        if (propsLH[name]) {\n          const av = getProp(elementStyle, name);\n          if (av && av.value !== Css.empty) {\n            setPropCascadeValue(propsLH, name, av, this.context);\n          }\n        }\n      }\n    }\n    // Update elementStyle with shorthand -> longhand cascade result\n    for (const name in propsLH) {\n      elementStyle[name] = propsLH[name];\n    }\n  }\n\n  /**\n   * Calculate all calc() in property values in elementStyle\n   */\n  applyCalcFilter(elementStyle: ElementStyle, context: Exprs.Context): void {\n    const visitor = new CalcFilterVisitor(context);\n    for (const name in elementStyle) {\n      if (isMapName(name)) {\n        const pseudoMap = getStyleMap(elementStyle, name);\n        for (const pseudoName in pseudoMap) {\n          this.applyCalcFilter(pseudoMap[pseudoName], context);\n        }\n      } else if (isPropName(name) && !Css.isCustomPropName(name)) {\n        const cascVal = getProp(elementStyle, name);\n        const value = cascVal.value.visit(visitor);\n        if (value !== cascVal.value) {\n          elementStyle[name] = new CascadeValue(value, cascVal.priority);\n        }\n      }\n    }\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY: string[] = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\", // content\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n  invalid: boolean = false; // for `@supports selector()` check\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    if (name) {\n      this.specificity += 1;\n    }\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  invalidSelector(message: string): void {\n    Logging.logger.warn(message);\n    this.chain.push(new CheckConditionAction(\"\")); // always fails\n    this.setInvalid();\n  }\n\n  setInvalid(): void {\n    this.invalid = true;\n    for (\n      let handler: CascadeParserHandler = this;\n      handler instanceof MatchesParameterParserHandler;\n      handler = handler.parent\n    ) {\n      handler.parent.invalid = true;\n    }\n  }\n\n  override classSelector(name: string): void {\n    if (this.pseudoelement) {\n      this.invalidSelector(`::${this.pseudoelement} followed by .${name}`);\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    if (this.pseudoelement) {\n      this.invalidSelector(`::${this.pseudoelement} followed by :${name}`);\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n      case \"scope\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default: // always fails\n        this.invalidSelector(`Unknown pseudo-class :${name}`);\n        return;\n    }\n    this.specificity += 256;\n  }\n\n  override pseudoelementSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          this.invalidSelector(\n            `Double pseudo-element ::${this.pseudoelement}::${name}`,\n          );\n          return;\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              this.invalidSelector(\n                `Double pseudo-element ::${this.pseudoelement}::${name}`,\n              );\n              return;\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default: // always fails\n        this.invalidSelector(`Unknown pseudo-element ::${name}`);\n        return;\n    }\n    this.specificity += 1;\n  }\n\n  override idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  override attributeSelector(\n    ns: string,\n    name: string,\n    op: TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          this.invalidSelector(`Unsupported :: attr selector op: ${value}`);\n          return;\n        }\n        break;\n      default:\n        this.invalidSelector(`Unsupported attr selector: ${op}`);\n        return;\n    }\n    this.chain.push(action);\n  }\n\n  override descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  override startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n    this.invalid = false;\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n    this.setInvalid();\n  }\n\n  override startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  override startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  override endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      this.processChain(this.makeApplyRuleAction(this.specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const priority = specificity + this.cascade.nextOrder();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, priority, this.condition)\n      : new CascadeValue(value, priority);\n    setPropCascadeValue(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    let parameterParserHandler: MatchesParameterParserHandler;\n    switch (funcName) {\n      case \"is\":\n        parameterParserHandler = new MatchesParameterParserHandler(this);\n        break;\n      case \"not\":\n        parameterParserHandler = new NotParameterParserHandler(this);\n        break;\n      case \"where\":\n        parameterParserHandler = new WhereParameterParserHandler(this);\n        break;\n      case \"has\":\n        parameterParserHandler = new HasParameterParserHandler(this);\n        break;\n    }\n    if (parameterParserHandler) {\n      parameterParserHandler.startSelectorRule();\n      this.owner.pushHandler(parameterParserHandler);\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\n/**\n * Cascade Parser Handler for :is() and similar pseudo-classes parameter\n */\nexport class MatchesParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n  chains: ChainedAction[][] = [];\n  maxSpecificity: number = 0;\n  selectorTexts: string[] = [];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  override nextSelector(): void {\n    if (this.chain) {\n      this.chains.push(this.chain);\n    }\n    this.maxSpecificity = Math.max(this.maxSpecificity, this.specificity);\n    this.chain = [];\n    this.pseudoelement = null;\n    this.viewConditionId = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n  }\n\n  override endFuncWithSelector(): void {\n    if (this.chain) {\n      this.chains.push(this.chain);\n    }\n    if (this.chains.length > 0) {\n      this.maxSpecificity = Math.max(this.maxSpecificity, this.specificity);\n      this.parentChain.push(\n        this.relational()\n          ? new MatchesRelationalAction(this.selectorTexts)\n          : this.positive()\n          ? new MatchesAction(this.chains)\n          : new MatchesNoneAction(this.chains),\n      );\n      if (this.increasingSpecificity()) {\n        this.parent.specificity += this.maxSpecificity;\n      }\n    } else {\n      // func argument is empty or all invalid\n      this.parentChain.push(new CheckConditionAction(\"\")); // always fails\n    }\n\n    this.owner.popHandler();\n  }\n\n  override startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.chain = null;\n    this.pseudoelement = null;\n    this.viewConditionId = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n\n    let forgiving = false;\n    for (\n      let handler: CascadeParserHandler = this;\n      handler instanceof MatchesParameterParserHandler;\n      handler = handler.parent\n    ) {\n      if (handler.forgiving()) {\n        forgiving = true;\n        break;\n      }\n    }\n    if (!forgiving) {\n      this.owner.popHandler();\n    }\n  }\n\n  override pushSelectorText(selectorText: string): void {\n    // selectorText is used only for relational pseudo-class `:has()`\n    if (this.chain && this.relational()) {\n      this.selectorTexts.push(selectorText);\n    }\n  }\n\n  /**\n   * @returns true unless this is `:not()`\n   */\n  positive(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true unless this is `:where()`\n   */\n  increasingSpecificity(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if this takes a forgiving selector list (:is/where/has)\n   */\n  forgiving(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if this is `:has()`\n   */\n  relational(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Parser Handler for :not() pseudo-class parameter\n */\nexport class NotParameterParserHandler extends MatchesParameterParserHandler {\n  override positive(): boolean {\n    return false;\n  }\n\n  forgiving(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Parser Handler for :where() pseudo-class parameter\n */\nexport class WhereParameterParserHandler extends MatchesParameterParserHandler {\n  override increasingSpecificity(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Parser Handler for :has() pseudo-class parameter\n */\nexport class HasParameterParserHandler extends MatchesParameterParserHandler {\n  override relational(): boolean {\n    return true;\n  }\n}\n\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setPropCascadeValue(this.elementStyle, name, cascval);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setPropCascadeValue(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (\n      writingMode &&\n      writingMode !== Css.ident.inherit &&\n      writingMode !== Css.ident.revert &&\n      writingMode !== Css.ident.unset\n    ) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (\n      direction &&\n      direction !== Css.ident.inherit &&\n      direction !== Css.ident.revert &&\n      direction !== Css.ident.unset\n    ) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n\n/**\n * Convert var() to its value\n */\nexport class VarFilterVisitor extends Css.FilterVisitor {\n  constructor(\n    public elementStyles: ElementStyle[],\n    public styler: CssStyler.AbstractStyler,\n    public element: Element | null,\n  ) {\n    super();\n  }\n\n  private getVarValue(name: string): Css.Val {\n    let elem = this.element ?? ((this.styler as any).root as Element);\n    if (this.elementStyles?.length) {\n      for (const style of this.elementStyles) {\n        const val = (style[name] as CascadeValue)?.value;\n        if (val) {\n          return val;\n        }\n      }\n      if (this.element) {\n        elem = this.element.parentElement;\n      }\n    }\n    for (; elem; elem = elem.parentElement) {\n      const val = (this.styler.getStyle(elem, false)?.[name] as CascadeValue)\n        ?.value;\n      if (val) {\n        return val;\n      }\n    }\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"var\") {\n      return super.visitFunc(func);\n    }\n    const name = func.values[0] instanceof Css.Ident && func.values[0].name;\n    if (!name || !Css.isCustomPropName(name)) {\n      this.error = true;\n      return Css.empty;\n    }\n    const varVal = this.getVarValue(name);\n    if (varVal) {\n      return varVal;\n    }\n    // fallback value\n    if (func.values.length < 2) {\n      this.error = true;\n      return Css.empty;\n    }\n    if (func.values.length === 2) {\n      return func.values[1];\n    } else {\n      return new Css.CommaList(func.values.slice(1));\n    }\n  }\n}\n\n/**\n * Convert calc() to its value\n */\nexport class CalcFilterVisitor extends Css.FilterVisitor {\n  constructor(\n    public context: Exprs.Context,\n    public resolveViewportUnit?: boolean,\n    public percentRef?: number,\n  ) {\n    super();\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    // convert func args\n    let value = super.visitFunc(func);\n    if (func.name !== \"calc\") {\n      return value;\n    }\n    const exprText = value.toString().replace(/^calc\\b/, \"-epubx-expr\");\n    if (\n      /\\d(%|em|ex|cap|ch|ic|lh|p?v[whbi]|p?vmin|p?vmax)\\W|\\Wvar\\(\\s*--/i.test(\n        exprText,\n      )\n    ) {\n      return value;\n    }\n    const exprVal = CssParser.parseValue(\n      this.context.rootScope,\n      new CssTokenizer.Tokenizer(exprText, null),\n      \"\",\n    );\n    if (exprVal instanceof Css.Expr) {\n      const exprResult = exprVal.expr.evaluate(this.context);\n      if (typeof exprResult === \"number\") {\n        value = new Css.Numeric(exprResult, \"px\");\n      }\n    }\n    return value;\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (\n      this.resolveViewportUnit &&\n      (Exprs.isViewportRelativeLengthUnit(numeric.unit) ||\n        Exprs.isRootFontRelativeLengthUnit(numeric.unit))\n    ) {\n      return new Css.Numeric(\n        numeric.num * this.context.queryUnitSize(numeric.unit, false),\n        \"px\",\n      );\n    }\n    if (typeof this.percentRef === \"number\" && numeric.unit === \"%\") {\n      return new Css.Numeric((numeric.num * this.percentRef) / 100, \"px\");\n    }\n    return numeric;\n  }\n}\n\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName?: string,\n  percentRef?: number,\n): Css.Val {\n  try {\n    if (val instanceof Css.Expr) {\n      return CssParser.evaluateExprToCSS(context, val.expr, propName);\n    }\n    if (\n      val instanceof Css.Numeric ||\n      val instanceof Css.Func ||\n      val instanceof Css.SpaceList ||\n      val instanceof Css.CommaList\n    ) {\n      return val.visit(new CalcFilterVisitor(context, true, percentRef));\n    }\n  } catch (err) {\n    Logging.logger.warn(err);\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical\n          ? this.container.rtl\n            ? limits.bottom\n            : limits.top\n          : this.container.rtl\n          ? limits.right\n          : limits.left;\n      case \"inline-end\":\n        return this.container.vertical\n          ? this.container.rtl\n            ? limits.top\n            : limits.bottom\n          : this.container.rtl\n          ? limits.left\n          : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = (inlineEnd - inlineStart) * area.getInlineDir();\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize =\n        (inlineEnd - inlineStart) * area.getInlineDir();\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(\n          inlineEnd - outerInlineSize * area.getInlineDir(),\n          inlineSize,\n        );\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /** @override */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /** @override */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /** @override */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /** @override */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /** @override */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /** @override */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /** @override */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  override isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  override getOrder(): number {\n    return Infinity;\n  }\n\n  override shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /** @override */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /** @override */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /** @override */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /** @override */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /** @override */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /** @override */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /** @override */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if (\n    (float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isRoot\n  ) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    display == Css.ident.grid ||\n    display == Css.ident.flow_root ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible &&\n      overflow !== Css.ident.clip &&\n      !Css.isDefaultingValue(overflow)) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Display from \"./display\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n\n  // NOTE: Do not replace `node.nodeType === 1` with `node instanceof Element`,\n  // which does not work when the node is inside iframe. (Issue #1000)\n\n  const element = node.nodeType === 1 ? (node as Element) : node.parentElement;\n  if (element && element.namespaceURI === Base.NS.XHTML) {\n    if (element.localName === \"rt\" && (element as HTMLElement).style[\"zoom\"]) {\n      // \"zoom\" is set in fixRubyTextFontSize() to fix the issue #673 for Chrome.\n      // when zoom is set, it is hard to get the edge value, so return NaN.\n      // (Fix for issues #804 and #808)\n      return NaN;\n    }\n    if (\n      /^([\\d\\.]|super|(text-)?top)/.test(\n        (element as HTMLElement).style.verticalAlign,\n      )\n    ) {\n      // (Fix for issue #811)\n      return NaN;\n    }\n  }\n  if (node === element) {\n    if (nodeContext.after || !nodeContext.inline) {\n      if (\n        nodeContext.after &&\n        !nodeContext.inline &&\n        element.querySelector(\"ruby\")\n      ) {\n        // Workaround for issue #987 (unnecessary break caused by ruby)\n        const parentNode = element.parentNode;\n        const nextSibling = element.nextSibling;\n        parentNode.removeChild(element);\n        parentNode.insertBefore(element, nextSibling);\n      }\n      const cbox = clientLayout.getElementClientRect(element);\n      if (\n        cbox.left === 0 &&\n        cbox.top === 0 &&\n        cbox.right === 0 &&\n        cbox.bottom === 0\n      ) {\n        // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n        // (Fix for issue #802)\n        return NaN;\n      }\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    boxes = boxes.filter((box) => box.right > box.left && box.bottom > box.top);\n    if (!boxes.length) {\n      return NaN;\n    }\n    if (vertical) {\n      edge = Math.min.apply(\n        null,\n        boxes.map((box) => box.left),\n      );\n    } else {\n      edge = Math.max.apply(\n        null,\n        boxes.map((box) => box.bottom),\n      );\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  const viewNode = nodeContext?.viewNode;\n  return viewNode?.nodeType === 1 && isSpecial(viewNode as Element);\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  return (\n    display !== \"inline\" &&\n    (Display.isInlineLevel(display) || Display.isRubyInternalDisplay(display))\n  );\n}\n\nexport function findAncestorSpecialInlineNodeContext(\n  nodeContext: Vtree.NodeContext,\n): Vtree.NodeContext | null {\n  for (let p = nodeContext.parent; p; p = p.parent) {\n    if (p.display !== \"inline\" && Display.isInlineLevel(p.display)) {\n      return p;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /** @override */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  override getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n\n    if (!this.position.after && !this.position.inline) {\n      // Subtract marginBlockStart from the edge (Issue #611)\n      const marginBlockStart = column.parseComputedLength(\n        column.clientLayout.getElementComputedStyle(\n          this.position.viewNode as Element,\n        ).marginBlockStart,\n      );\n      this.edge -= (column.vertical ? -1 : 1) * marginBlockStart;\n    }\n\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  override getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /** @override */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /** @override */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /** @override */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const parentNode = node.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, node);\n    if (removeSelf) {\n      parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.layoutContext.processFragmentedBlockEdge(nodeContext);\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /** @override */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /** @override */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /** @override */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  override startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2021 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TextPolyfill - CSS text-spacing and hanging-punctuation support.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\n\ntype PropertyValue = string | number | Css.Val;\n\ntype HangingPunctuation = {\n  first: boolean;\n  end: boolean; // force-end or allow-end\n  allowEnd: boolean;\n  last: boolean;\n};\n\nconst HANGING_PUNCTUATION_NONE: HangingPunctuation = {\n  first: false,\n  end: false,\n  allowEnd: false,\n  last: false,\n};\n\nfunction hangingPunctuationFromPropertyValue(\n  value: PropertyValue,\n): HangingPunctuation {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.none;\n\n  if (cssval === Css.ident.none) {\n    return HANGING_PUNCTUATION_NONE;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const hangingPunctuation: HangingPunctuation = Object.create(\n    HANGING_PUNCTUATION_NONE,\n  );\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"first\":\n          hangingPunctuation.first = true;\n          break;\n        case \"force-end\":\n          hangingPunctuation.end = true;\n          break;\n        case \"allow-end\":\n          hangingPunctuation.end = true;\n          hangingPunctuation.allowEnd = true;\n          break;\n        case \"last\":\n          hangingPunctuation.last = true;\n          break;\n      }\n    }\n  }\n  return hangingPunctuation;\n}\n\nfunction isHangingPunctuationNone(\n  hangingPunctuation: HangingPunctuation,\n): boolean {\n  return (\n    !hangingPunctuation.first &&\n    !hangingPunctuation.last &&\n    !hangingPunctuation.end\n  );\n}\n\ntype SpacingTrim = {\n  trimStart: boolean; // trim-start or space-first (not space-start)\n  spaceFirst: boolean; // space-first (trim-start except at first line)\n  trimEnd: boolean; // trim-end or allow-end (not space-end)\n  allowEnd: boolean; // allow-end (not force-end)\n  trimAdjacent: boolean;\n  // TODO: add support for:\n  //   trimAll: boolean; // trim-all\n};\n\n/**\n * text-spacing-trim: space-all (none)\n * space-all (none) = space-start space-end space-adjacent\n */\nconst SPACING_TRIM_NONE: SpacingTrim = {\n  trimStart: false,\n  spaceFirst: false,\n  trimEnd: false,\n  allowEnd: false,\n  trimAdjacent: false,\n};\n\n/**\n * text-spacing-trim: space-first (normal)\n * space-first (normal) = space-first trim-end trim-adjacent\n */\nconst SPACING_TRIM_NORMAL: SpacingTrim = {\n  trimStart: true,\n  spaceFirst: true,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n};\n\n/**\n * text-spacing-trim: trim-auto (auto)\n * trim-auto (auto) = trim-start trim-end trim-adjacent\n */\nconst SPACING_TRIM_AUTO: SpacingTrim = {\n  trimStart: true,\n  spaceFirst: false,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n};\n\nfunction spacingTrimFromPropertyValue(value: PropertyValue): SpacingTrim {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.normal;\n\n  if (cssval === Css.ident.normal) {\n    return SPACING_TRIM_NORMAL;\n  }\n  if (cssval === Css.ident.none) {\n    return SPACING_TRIM_NONE;\n  }\n  if (cssval === Css.ident.auto) {\n    return SPACING_TRIM_AUTO;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const textSpacing: SpacingTrim = Object.create(SPACING_TRIM_AUTO);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"trim-auto\":\n          return SPACING_TRIM_AUTO;\n        case \"space-all\":\n          return SPACING_TRIM_NONE;\n        case \"trim-start\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-start\":\n          textSpacing.trimStart = false;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-first\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = true;\n          break;\n        case \"trim-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = false;\n          break;\n        case \"space-end\":\n          textSpacing.trimEnd = false;\n          textSpacing.allowEnd = false;\n          break;\n        case \"allow-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = true;\n          break;\n        case \"trim-adjacent\":\n          textSpacing.trimAdjacent = true;\n          break;\n        case \"space-adjacent\":\n          textSpacing.trimAdjacent = false;\n          break;\n      }\n    }\n  }\n\n  return textSpacing;\n}\n\ntype Autospace = {\n  ideographAlpha: boolean;\n  ideographNumeric: boolean;\n  // TODO: add support for:\n  //   punctuation: boolean;\n  //   replace: boolean;\n};\n\n/**\n * text-autospace: no-autospace (none)\n */\nconst AUTOSPACE_NONE: Autospace = {\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n\n/**\n * text-autospace: normal\n */\nconst AUTOSPACE_NORMAL: Autospace = {\n  ideographAlpha: true,\n  ideographNumeric: true,\n};\n\nfunction autospaceFromPropertyValue(value: PropertyValue): Autospace {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.normal;\n\n  if (cssval === Css.ident.normal || cssval === Css.ident.auto) {\n    return AUTOSPACE_NORMAL;\n  }\n  if (cssval === Css.ident.none) {\n    return AUTOSPACE_NONE;\n  }\n\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const autospace: Autospace = Object.create(AUTOSPACE_NONE);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"no-autospace\":\n          return AUTOSPACE_NONE;\n        case \"ideograph-alpha\":\n          autospace.ideographAlpha = true;\n          break;\n        case \"ideograph-numeric\":\n          autospace.ideographNumeric = true;\n          break;\n      }\n    }\n  }\n\n  return autospace;\n}\n\nfunction isTextSpacingNone(\n  autospace: Autospace,\n  spacingTrim: SpacingTrim,\n): boolean {\n  return (\n    !autospace.ideographAlpha &&\n    !autospace.ideographNumeric &&\n    !spacingTrim.trimStart &&\n    !spacingTrim.trimEnd &&\n    !spacingTrim.trimAdjacent\n  );\n}\n\nfunction normalizeLang(lang: string): string | null {\n  if (lang) {\n    // Normalize CJK lang\n    lang = lang.toLowerCase();\n    if (/^zh\\b.*-(hant|tw|hk)\\b/.test(lang)) {\n      return \"zh-hant\";\n    }\n    if (/^zh\\b/.test(lang)) {\n      return \"zh-hans\";\n    }\n    if (/^ja\\b/.test(lang)) {\n      return \"ja\";\n    }\n    if (/^ko\\b/.test(lang)) {\n      return \"ko\";\n    }\n    return lang;\n  }\n  return null;\n}\n\nconst embeddedContentTags = {\n  audio: true,\n  canvas: true,\n  embed: true,\n  iframe: true,\n  img: true,\n  math: true,\n  object: true,\n  picture: true,\n  svg: true,\n  video: true,\n};\n\nclass TextSpacingPolyfill {\n  getPolyfilledInheritedProps() {\n    return [\"hanging-punctuation\", \"text-autospace\", \"text-spacing-trim\"];\n  }\n\n  preprocessSingleDocument(document: Document): void {\n    if (!document.body) {\n      return;\n    }\n    this.preprocessForTextSpacing(document.body);\n  }\n\n  preprocessForTextSpacing(element: Element): void {\n    // Split text nodes by punctuations and ideograph/non-ideograph boundary\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    for (let node = nodeIter.nextNode(); node; node = nodeIter.nextNode()) {\n      if (\n        node.parentElement.namespaceURI !== Base.NS.XHTML ||\n        node.parentElement.dataset?.[\"mathTypeset\"] === \"true\"\n      ) {\n        continue;\n      }\n      const textArr = node.textContent\n        .replace(\n          /(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡\\u3000]\\p{M}*(?=\\P{M})|.(?=(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡\\u3000])|(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*(?=(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}])|(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}]\\p{M}*(?=(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF])/gsu,\n          \"$&\\x00\",\n        )\n        .split(\"\\x00\");\n\n      if (textArr.length > 1) {\n        const lastIndex = textArr.length - 1;\n        for (let i = 0; i < lastIndex; i++) {\n          node.parentNode.insertBefore(\n            document.createTextNode(textArr[i]),\n            node,\n          );\n        }\n        node.textContent = textArr[lastIndex];\n      }\n    }\n  }\n\n  processGeneratedContent(\n    element: HTMLElement,\n    autospaceVal: Css.Val,\n    spacingTrimVal: Css.Val,\n    hangingPunctuationVal: Css.Val,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    lang = normalizeLang(lang);\n    const autospace = autospaceFromPropertyValue(autospaceVal);\n    const spacingTrim = spacingTrimFromPropertyValue(spacingTrimVal);\n    const hangingPunctuation = hangingPunctuationFromPropertyValue(\n      hangingPunctuationVal,\n    );\n\n    if (\n      isHangingPunctuationNone(hangingPunctuation) &&\n      isTextSpacingNone(autospace, spacingTrim)\n    ) {\n      return;\n    }\n\n    this.preprocessForTextSpacing(element);\n\n    const whiteSpaceSave = element.style.whiteSpace;\n    if ((vertical ? element.offsetHeight : element.offsetWidth) === 0) {\n      // Prevent wrong line wrapping\n      element.style.whiteSpace = \"pre\";\n    }\n\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    let prevNode: Node = null;\n    let nextNode: Node = null;\n    for (let node = nodeIter.nextNode(); node; node = nextNode) {\n      nextNode = nodeIter.nextNode();\n      const isFirstInBlock = !prevNode;\n      const isFirstAfterForcedLineBreak =\n        !prevNode || /\\n$/.test(prevNode.textContent);\n      const isLastBeforeForcedLineBreak =\n        !nextNode || /^\\n/.test(nextNode.textContent);\n      const isLastInBlock = !nextNode;\n      this.processTextSpacing(\n        node,\n        isFirstInBlock || isFirstAfterForcedLineBreak,\n        isFirstInBlock,\n        isFirstAfterForcedLineBreak,\n        isLastBeforeForcedLineBreak,\n        isLastInBlock,\n        prevNode,\n        nextNode,\n        autospace,\n        spacingTrim,\n        hangingPunctuation,\n        lang,\n        vertical,\n      );\n      prevNode = node;\n    }\n\n    element.style.whiteSpace = whiteSpaceSave;\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): void {\n    const isFirstFragment =\n      !nodeContext ||\n      (nodeContext.fragmentIndex === 1 && checkIfFirstInBlock());\n    const isAfterForcedLineBreak =\n      isFirstFragment || checkIfAfterForcedLineBreak();\n\n    function isOutOfLine(node: Node): boolean {\n      if (node?.nodeType !== 1) {\n        return false;\n      }\n      const elem = node as HTMLElement;\n      if (elem.hasAttribute(Vtree.SPECIAL_ATTR)) {\n        return true;\n      }\n      const { position, float } = elem.style ?? {};\n      return (\n        position === \"absolute\" ||\n        position === \"fixed\" ||\n        (float && float !== \"none\")\n      );\n    }\n\n    function checkIfFirstInBlock(): boolean {\n      let p = checkPoints[0];\n      let viewNode = p.viewNode;\n      while (p && p.inline) {\n        p = p.parent;\n      }\n      if (p?.fragmentIndex !== 1) {\n        return false;\n      }\n      for (\n        let prev = viewNode.previousSibling;\n        prev;\n        prev = prev.previousSibling\n      ) {\n        if (!isOutOfLine(prev)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    function checkIfAfterForcedLineBreak(): boolean {\n      let p = checkPoints[0];\n      let prevNode: Node;\n      while (p && p.inline) {\n        prevNode = p.sourceNode?.previousSibling;\n        if (prevNode) {\n          if (\n            prevNode.nodeType === 3 &&\n            /^[ \\t\\r\\n\\f]*$/.test(prevNode.textContent) &&\n            p.whitespace !== Vtree.Whitespace.PRESERVE\n          ) {\n            prevNode = prevNode.previousSibling;\n          }\n          if (prevNode) {\n            break;\n          }\n        }\n        p = p.parent;\n      }\n\n      while (prevNode) {\n        if (prevNode.nodeType === 1) {\n          if ((prevNode as Element).localName === \"br\") {\n            return true;\n          }\n        } else if (prevNode.nodeType === 3) {\n          if (p.whitespace === Vtree.Whitespace.PRESERVE) {\n            if (/\\n$/.test(prevNode.textContent)) {\n              return true;\n            }\n          } else if (p.whitespace === Vtree.Whitespace.NEWLINE) {\n            if (/\\n[ \\t\\r\\n\\f]*$/.test(prevNode.textContent)) {\n              return true;\n            }\n          }\n        }\n        prevNode = prevNode.lastChild;\n      }\n      return false;\n    }\n\n    for (let i = 0; i < checkPoints.length; i++) {\n      const p = checkPoints[i];\n      if (\n        !p.after &&\n        p.inline &&\n        !p.display &&\n        p.parent &&\n        p.viewNode.parentNode &&\n        p.viewNode.nodeType === Node.TEXT_NODE &&\n        !Vtree.canIgnore(p.viewNode, p.whitespace)\n      ) {\n        const lang = normalizeLang(\n          p.lang ??\n            p.parent.lang ??\n            nodeContext?.lang ??\n            nodeContext?.parent?.lang,\n        );\n        const autospace = autospaceFromPropertyValue(\n          p.inheritedProps[\"text-autospace\"],\n        );\n        const spacingTrim = spacingTrimFromPropertyValue(\n          p.inheritedProps[\"text-spacing-trim\"],\n        );\n        const hangingPunctuation = hangingPunctuationFromPropertyValue(\n          p.inheritedProps[\"hanging-punctuation\"],\n        );\n\n        if (\n          isHangingPunctuationNone(hangingPunctuation) &&\n          isTextSpacingNone(autospace, spacingTrim)\n        ) {\n          continue;\n        }\n        if (/\\b(flex|grid)\\b/.test(p.parent.display)) {\n          // Cannot process if parent is flex or grid. (Issue #926)\n          continue;\n        }\n\n        let prevNode: Node = null;\n        let nextNode: Node = null;\n        let isFirstAfterBreak = i === 0;\n        let isFirstInBlock = i === 0 && isFirstFragment;\n        let isFirstAfterForcedLineBreak = i === 0 && isAfterForcedLineBreak;\n        let isLastBeforeForcedLineBreak = false;\n        let isLastInBlock = false;\n\n        function checkIfFirstAfterForcedLineBreak(\n          prevP: Vtree.NodeContext,\n        ): boolean {\n          if (prevP.viewNode?.nodeType === 1) {\n            return (prevP.viewNode as Element).localName === \"br\";\n          }\n          if (prevP.viewNode?.nodeType === 3) {\n            if (prevP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/\\n$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (prevP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/\\n[ \\t\\r\\n\\f]*$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (\n              (prevP.viewNode as Element).previousElementSibling?.localName ===\n              \"br\"\n            ) {\n              return Vtree.canIgnore(prevP.viewNode, prevP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        function checkIfLastBeforeForcedLineBreak(\n          nextP: Vtree.NodeContext,\n        ): boolean {\n          if (nextP.viewNode?.nodeType === 1) {\n            return (nextP.viewNode as Element).localName === \"br\";\n          }\n          if (nextP.viewNode?.nodeType === 3) {\n            if (nextP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/^\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (nextP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/^[ \\t\\r\\n\\f]*\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (\n              (nextP.viewNode as Element).nextElementSibling?.localName === \"br\"\n            ) {\n              return Vtree.canIgnore(nextP.viewNode, nextP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        for (let prev = i - 1; prev >= 0; prev--) {\n          const prevP = checkPoints[prev];\n          if (checkIfFirstAfterForcedLineBreak(prevP)) {\n            isFirstAfterForcedLineBreak = true;\n            break;\n          }\n          if (\n            !prevP.display &&\n            prevP.viewNode.nodeType === Node.TEXT_NODE &&\n            prevP.viewNode.textContent.length > 0\n          ) {\n            prevNode = prevP.viewNode;\n            break;\n          }\n          if (\n            (prevP.display && !/^(inline|ruby)\\b/.test(prevP.display)) ||\n            (prevP.viewNode?.nodeType === 1 &&\n              ((prevP.viewNode as Element).localName === \"br\" ||\n                embeddedContentTags[(prevP.viewNode as Element).localName]))\n          ) {\n            break;\n          }\n          if (prev === 0) {\n            isFirstAfterBreak = true;\n            if (isFirstFragment) {\n              isFirstInBlock = true;\n              isFirstAfterForcedLineBreak = true;\n            }\n          }\n        }\n        for (let next = i + 1; next < checkPoints.length; next++) {\n          const nextP = checkPoints[next];\n          if (checkIfLastBeforeForcedLineBreak(nextP)) {\n            isLastBeforeForcedLineBreak = true;\n            break;\n          }\n          if (\n            nextP.viewNode !== p.viewNode &&\n            !nextP.display &&\n            nextP.viewNode.nodeType === Node.TEXT_NODE &&\n            nextP.viewNode.textContent.length > 0\n          ) {\n            nextNode = nextP.viewNode;\n            break;\n          }\n          if (\n            (nextP.display && !/^(inline|ruby)\\b/.test(nextP.display)) ||\n            (nextP.viewNode?.nodeType === 1 &&\n              ((nextP.viewNode as Element).localName === \"br\" ||\n                embeddedContentTags[(nextP.viewNode as Element).localName]))\n          ) {\n            if (\n              next === checkPoints.length - 1 &&\n              isOutOfLine(nextP.viewNode)\n            ) {\n              isLastInBlock = true;\n            }\n            break;\n          }\n          if (next === checkPoints.length - 1) {\n            isLastBeforeForcedLineBreak = true;\n            isLastInBlock = true;\n            for (\n              let nextNext = nextP.viewNode.nextSibling;\n              nextNext;\n              nextNext = nextNext.nextSibling\n            ) {\n              if (!isOutOfLine(nextNext)) {\n                isLastInBlock = false;\n                break;\n              }\n            }\n          }\n        }\n        this.processTextSpacing(\n          p.viewNode,\n          isFirstAfterBreak,\n          isFirstInBlock,\n          isFirstAfterForcedLineBreak,\n          isLastBeforeForcedLineBreak,\n          isLastInBlock,\n          prevNode,\n          nextNode,\n          autospace,\n          spacingTrim,\n          hangingPunctuation,\n          lang,\n          p.vertical,\n        );\n      }\n    }\n  }\n\n  private processTextSpacing(\n    textNode: Node,\n    isFirstAfterBreak: boolean,\n    isFirstInBlock: boolean,\n    isFirstAfterForcedLineBreak: boolean,\n    isLastBeforeForcedLineBreak: boolean,\n    isLastInBlock: boolean,\n    prevNode: Node,\n    nextNode: Node,\n    autospace: Autospace,\n    spacingTrim: SpacingTrim,\n    hangingPunctuation: HangingPunctuation,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    const text = textNode.textContent;\n    const document = textNode.ownerDocument;\n    let currRange: Range;\n    let prevRange: Range;\n    let nextRange: Range;\n\n    function isAtStartOfLine(): boolean {\n      if (isFirstAfterBreak) {\n        return true;\n      }\n      if (!prevNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!prevRange) {\n        prevRange = document.createRange();\n        prevRange.selectNode(prevNode);\n      }\n      const prevRects = prevRange.getClientRects();\n      const prevRect = prevRects[prevRects.length - 1];\n      if (!rect || !prevRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top < prevRect.top + prevRect.height - rect.width ||\n            rect.left + rect.width < prevRect.left + rect.width / 10 ||\n            rect.left > prevRect.left + prevRect.width - rect.width / 10\n        : rect.left < prevRect.left + prevRect.width - rect.height ||\n            rect.top > prevRect.top + prevRect.height - rect.height / 10 ||\n            rect.top + rect.height < prevRect.top + rect.height / 10;\n    }\n\n    function isAtEndOfLine(): boolean {\n      if (!nextNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!nextRange) {\n        nextRange = document.createRange();\n        nextRange.selectNode(nextNode);\n      }\n      const nextRect = nextRange.getClientRects()[0];\n      if (!rect || !nextRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top + rect.height > nextRect.top + rect.width ||\n            rect.left > nextRect.left + nextRect.width - rect.width / 10 ||\n            rect.left + rect.width < nextRect.left + rect.width / 10\n        : rect.left + rect.width > nextRect.left + rect.height ||\n            rect.top + rect.height < nextRect.top + rect.height / 10 ||\n            rect.top > nextRect.top + nextRect.height - rect.height / 10;\n    }\n\n    let punctProcessing = false;\n    let hangingFirst = false;\n    let hangingLast = false;\n    let hangingEnd = false;\n    let tagName: \"viv-ts-open\" | \"viv-ts-close\";\n\n    if (\n      isFirstInBlock &&\n      hangingPunctuation.first &&\n      /^[\\p{Ps}\\p{Pf}\\p{Pi}'\"\\u3000]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: first\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n      hangingFirst = true;\n    } else if (\n      isLastInBlock &&\n      hangingPunctuation.last &&\n      /^[\\p{Pe}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: last\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingLast = true;\n    } else if (hangingPunctuation.end && /^[、。，．､｡]\\p{M}*$/u.test(text)) {\n      // hanging-punctuation: force-end | allow-end\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingEnd = true;\n    } else if (\n      (spacingTrim.trimStart || spacingTrim.trimAdjacent) &&\n      /^[‘“〝（［｛｟〈〈《「『【〔〖〘〚]\\p{M}*$/u.test(text)\n    ) {\n      // fullwidth opening punctuation\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n    } else if (\n      (spacingTrim.trimEnd || spacingTrim.trimAdjacent) &&\n      (/^[’”〞〟）］｝｠〉〉》」』】〕〗〙〛]\\p{M}*$/u.test(text) ||\n        (lang === \"zh-hans\" && /^[：；]\\p{M}*$/u.test(text)) ||\n        (lang !== \"zh-hant\" && /^[、。，．]\\p{M}*$/u.test(text)))\n    ) {\n      // fullwidth closing punctuation\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n    }\n\n    if (punctProcessing) {\n      if (textNode.parentElement.localName === \"viv-ts-inner\") {\n        // Already processed\n        return;\n      }\n      // Wrap the textNode as `<{tagName}><viv-ts-inner>{text}<viv-ts-inner></{tagName}>`\n      const outerElem = document.createElement(tagName);\n      const innerElem = document.createElement(\"viv-ts-inner\");\n      outerElem.appendChild(innerElem);\n      textNode.parentNode.insertBefore(outerElem, textNode);\n      innerElem.appendChild(textNode);\n\n      // Check if che punctuation is almost full width\n      const fontSize = parseFloat(\n        document.defaultView.getComputedStyle(outerElem).fontSize,\n      );\n      const fullWidthThreshold = fontSize * 0.7;\n      const isFullWidth =\n        (vertical ? innerElem.offsetHeight : innerElem.offsetWidth) >\n        fullWidthThreshold;\n\n      function linePosition(): number {\n        return vertical ? outerElem.offsetLeft : outerElem.offsetTop;\n      }\n\n      if (isFullWidth || hangingFirst || hangingLast || hangingEnd) {\n        if (tagName === \"viv-ts-open\") {\n          if (hangingFirst) {\n            outerElem.className = \"viv-hang-first\";\n          } else if (isFirstInBlock || isFirstAfterForcedLineBreak) {\n            if (spacingTrim.trimStart && !spacingTrim.spaceFirst) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (!spacingTrim.trimStart && isAtStartOfLine()) {\n            outerElem.className = \"viv-ts-space\";\n          } else if (\n            spacingTrim.trimAdjacent &&\n            prevNode &&\n            /[\\p{Ps}\\p{Pi}\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]\\p{M}*$/u.test(\n              prevNode.textContent,\n            ) &&\n            // exclude non-fullwidth closing punctuations (Issue #1003)\n            (!/[\\p{Pe}\\p{Pf}]\\p{M}*$/u.test(prevNode.textContent) ||\n              (prevNode.parentElement.localName === \"viv-ts-inner\" &&\n                (vertical\n                  ? prevNode.parentElement.offsetHeight\n                  : prevNode.parentElement.offsetWidth) > fullWidthThreshold))\n          ) {\n            outerElem.className = \"viv-ts-trim\";\n          } else if (spacingTrim.trimStart && isAtStartOfLine()) {\n            const linePos = linePosition();\n            outerElem.className = \"viv-ts-auto\";\n            if (linePos === linePosition() && !isAtStartOfLine()) {\n              // workaround for issues #1005 and #1010\n              outerElem.className = \"viv-ts-trim\";\n            }\n          }\n        } else if (tagName === \"viv-ts-close\") {\n          if (hangingLast) {\n            outerElem.className = isFullWidth\n              ? \"viv-hang-last\"\n              : \"viv-hang-last viv-hang-hw\";\n          } else if (isLastInBlock || isLastBeforeForcedLineBreak) {\n            if (hangingEnd) {\n              const { offsetLeft, offsetTop } = outerElem;\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n              if (\n                outerElem.offsetLeft === offsetLeft &&\n                outerElem.offsetTop === offsetTop\n              ) {\n                outerElem.className = \"\";\n              }\n            } else if (spacingTrim.trimEnd) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (\n            nextNode &&\n            /^[\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]/u.test(\n              nextNode.textContent,\n            )\n          ) {\n            if (isFullWidth && spacingTrim.trimAdjacent) {\n              outerElem.className = \"viv-ts-trim\";\n            }\n          } else if (hangingEnd) {\n            const atEnd = isAtEndOfLine();\n            const atEndNoHang = atEnd && hangingPunctuation.allowEnd;\n            if (!atEndNoHang) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            }\n            if (!isFullWidth) {\n              if (!atEnd && !isAtEndOfLine()) {\n                outerElem.className = \"\";\n              }\n            } else if (\n              atEndNoHang &&\n              spacingTrim.trimEnd &&\n              !spacingTrim.allowEnd\n            ) {\n              outerElem.className = \"viv-ts-auto\";\n            } else if (!atEndNoHang && !isAtEndOfLine()) {\n              outerElem.className = \"\";\n            } else if (!atEnd && hangingPunctuation.allowEnd) {\n              if (!spacingTrim.trimEnd || spacingTrim.allowEnd) {\n                outerElem.className = \"viv-ts-space\";\n                if (!isAtEndOfLine()) {\n                  if (spacingTrim.trimEnd) {\n                    outerElem.className = \"viv-ts-auto\";\n                    if (!isAtEndOfLine()) {\n                      outerElem.className = \"viv-hang-end\";\n                    }\n                  } else {\n                    outerElem.className = \"viv-hang-end\";\n                  }\n                }\n              } else {\n                outerElem.className = \"viv-ts-auto\";\n                if (!isAtEndOfLine()) {\n                  outerElem.className = \"viv-hang-end\";\n                }\n              }\n            }\n          } else if (spacingTrim.trimEnd) {\n            if (isAtEndOfLine()) {\n              if (spacingTrim.allowEnd) {\n                outerElem.className = \"viv-ts-space\";\n              } else {\n                outerElem.className = \"viv-ts-auto\";\n              }\n            } else {\n              const linePos = linePosition();\n              outerElem.className = \"viv-ts-auto\";\n              if (linePos === linePosition()) {\n                outerElem.className = \"\";\n              }\n            }\n          }\n        }\n      }\n    }\n\n    let spaceIdeoAlnumProcessing = false;\n\n    function checkUpright(elem: Element): boolean {\n      const style = elem?.ownerDocument.defaultView?.getComputedStyle(elem);\n      return (\n        !!style &&\n        (style.textOrientation === \"upright\" ||\n          style.textCombineUpright === \"all\" ||\n          style[\"-webkit-text-combine\"] === \"horizontal\")\n      );\n    }\n\n    function checkNonZeroMarginBorderPadding(\n      node1: Node,\n      node2: Node,\n    ): boolean {\n      if (node1.nodeType === 1) {\n        const style = document.defaultView.getComputedStyle(node1 as Element);\n        if (\n          parseFloat(style.marginInlineEnd) ||\n          parseFloat(style.borderInlineEndWidth) ||\n          parseFloat(style.paddingInlineEnd)\n        ) {\n          return true;\n        }\n      }\n      const parent1 = node1.parentElement;\n      if (parent1 && !parent1.contains(node2)) {\n        return checkNonZeroMarginBorderPadding(parent1, node2);\n      }\n      if (node2.nodeType === 1) {\n        const style = document.defaultView.getComputedStyle(node2 as Element);\n        if (\n          parseFloat(style.marginInlineStart) ||\n          parseFloat(style.borderInlineStartWidth) ||\n          parseFloat(style.paddingInlineStart)\n        ) {\n          return true;\n        }\n      }\n      const parent2 = node2.parentElement;\n      if (parent2 && !parent2.contains(node1)) {\n        return checkNonZeroMarginBorderPadding(node1, parent2);\n      }\n      return false;\n    }\n\n    if (autospace.ideographAlpha || autospace.ideographNumeric) {\n      if (\n        prevNode &&\n        /^(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]/u.test(text) &&\n        ((autospace.ideographAlpha &&\n          /(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}\\p{M}*$/u.test(\n            prevNode.textContent,\n          )) ||\n          (autospace.ideographNumeric &&\n            /(?![\\uFF01-\\uFF60])\\p{Nd}\\p{M}*$/u.test(prevNode.textContent))) &&\n        !(vertical && checkUpright(prevNode.parentElement)) &&\n        !checkNonZeroMarginBorderPadding(prevNode, textNode)\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n      if (\n        nextNode &&\n        /(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*$/u.test(text) &&\n        ((autospace.ideographAlpha &&\n          /^(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}/u.test(\n            nextNode.textContent,\n          )) ||\n          (autospace.ideographNumeric &&\n            /^(?![\\uFF01-\\uFF60])\\p{Nd}/u.test(nextNode.textContent))) &&\n        !(vertical && checkUpright(nextNode.parentElement)) &&\n        !checkNonZeroMarginBorderPadding(textNode, nextNode)\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode.nextSibling,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n    }\n  }\n\n  registerHooks() {\n    Plugin.registerHook(\n      Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n      this.getPolyfilledInheritedProps.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n      this.preprocessSingleDocument.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n      this.postLayoutBlock.bind(this),\n      true, // text-spacing must be processed before others (Issue #1105)\n    );\n  }\n}\n\nconst textPolyfill = new TextSpacingPolyfill();\ntextPolyfill.registerHooks();\n\nexport function preprocessForTextSpacing(element: Element): void {\n  textPolyfill.preprocessForTextSpacing(element);\n}\n\nexport function processGeneratedContent(\n  element: HTMLElement,\n  textAutospace: Css.Val,\n  textSpacingTrim: Css.Val,\n  hangingPunctuation: Css.Val,\n  lang: string,\n  vertical: boolean,\n): void {\n  textPolyfill.processGeneratedContent(\n    element,\n    textAutospace,\n    textSpacingTrim,\n    hangingPunctuation,\n    lang,\n    vertical,\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /** @override */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /** @override */\n  processContent(\n    element: Element,\n    styles: { [key: string]: Css.Val },\n    viewNode: Node,\n  ) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n          // text-spacing & hanging-punctuation support\n          TextPolyfill.preprocessForTextSpacing(element);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /** @override */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  override findAcceptableBreak(\n    column: Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  override getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  override getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  breakAtTheEdgeBeforeFloat: string | null = null;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical\n      ? this.rtl\n        ? this.endEdge\n        : this.startEdge\n      : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical\n      ? this.rtl\n        ? this.startEdge\n        : this.endEdge\n      : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical\n      ? this.afterEdge\n      : this.rtl\n      ? this.endEdge\n      : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical\n      ? this.beforeEdge\n      : this.rtl\n      ? this.startEdge\n      : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        let firstLetterLength = r ? r[0].length : 0;\n        if (\n          !r &&\n          position.sourceNode?.nodeType === 3 &&\n          position.sourceNode.nextSibling?.nodeType === 3 &&\n          text === position.sourceNode.textContent\n        ) {\n          // The text '“Foo' may be split to '“' and 'Foo'\n          const text2 = text + position.sourceNode.nextSibling.textContent;\n          const r2 = text2.match(Base.firstLetterPattern);\n          if (r2) {\n            const firstLetterText = r2[0];\n            firstLetterLength = firstLetterText.length;\n            position.sourceNode.textContent = firstLetterText;\n            position.viewNode.textContent = firstLetterText;\n            position.sourceNode.nextSibling.textContent =\n              text2.substr(firstLetterLength);\n          }\n        }\n        return this.layoutContext.peelOff(position, firstLetterLength);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (\n              this.isFloatNodeContext(position) &&\n              // Exclude normal floats (fix for issue #611)\n              (PageFloats.isPageFloat(position.floatReference) ||\n                position.floatSide === \"footnote\")\n            ) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\" || f === \"none\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    let foundNonZeroWidthBand = false;\n\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n\n      // Hacky workaround for issue #1071\n      // (Top page float should not absorb margin/border/padding of the block below)\n      if (!foundNonZeroWidthBand) {\n        if (band.x1 >= x2 || band.x2 <= x1) {\n          Base.setCSSProperty(band.right, \"float\", \"none\");\n        } else {\n          foundNonZeroWidthBand = true;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = PageFloats.resolveInlineFloatDirection(\n      nodeContext.floatSide,\n      nodeContext.vertical,\n      nodeContext.direction,\n    );\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.rtl ? this.endEdge : this.startEdge;\n      let x2 = this.rtl ? this.startEdge : this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(\n          this.rtl ? this.getEndEdge(parentBox) : this.getStartEdge(parentBox),\n          x1,\n        );\n        x2 = Math.min(\n          this.rtl ? this.getStartEdge(parentBox) : this.getEndEdge(parentBox),\n          x2,\n        );\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        if (!nodeContext.firstPseudo) {\n          // Unless float is specified on ::first-letter (Fix for issue #923)\n          parent.viewNode.appendChild(nodeContext.viewNode);\n        }\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.rtl = floatContainer.rtl;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos + minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Text-spacing etc. must be done before calculating edge. (Issue #898)\n        this.postLayoutBlock(resNodeContext, checkPoints);\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          // Text-spacing etc. must be done before calculating edge. (Issue #898)\n          // this.postLayoutBlock(nodeContext, checkPoints);\n\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (\n      viewNode.nodeType != 1 &&\n      viewNode.parentElement?.localName !== \"viv-ts-inner\"\n    ) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    } else {\n      // Fix for issue #821, #885\n      const p = LayoutHelper.findAncestorSpecialInlineNodeContext(nodeContext);\n      if (p) {\n        if (\n          this.breakPositions?.[0] instanceof BoxBreakPosition &&\n          p?.viewNode.contains(this.breakPositions[0].checkPoints[0].viewNode)\n        ) {\n          // Prevent breaks at beginning of the column\n          return null;\n        }\n        // Prevent breaks inside inline-blocks\n        nodeContext = p;\n      }\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elements\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        const element = node.nodeType === 1 ? (node as Element) : null;\n        if (!element) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          /^r(uby|[bt]c?)$/.test(element.localName) ||\n          LayoutHelper.isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            if (element.localName === \"ruby\" && node.firstChild) {\n              // Fix for issue #985\n              node = node.firstChild;\n            }\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    for (let nc = nodeContext; nc; nc = nc.parent) {\n      if (\n        !nc.inline &&\n        Break.isCloneBoxDecorationBreak(nc.viewNode as Element)\n      ) {\n        const paddingBorders = this.getComputedPaddingBorder(\n          nc.viewNode as Element,\n        );\n        clonedPaddingBorder += nc.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (nc.display === \"table\") {\n          clonedPaddingBorder += (nc.vertical ? -1 : 1) * nc.blockBorderSpacing;\n        }\n      }\n    }\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    // Workaround for issue #816 (Text with ruby overflowed at column/page break)\n    const parentNode = this.element.parentNode;\n    const nextSibling = this.element.nextSibling;\n    parentNode.removeChild(this.element);\n    parentNode.insertBefore(this.element, nextSibling);\n\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // Workaround for the case of block child after text in parent block\n    // (Issue #1036)\n    let lastNode = checkPoints[checkPoints.length - 1].viewNode;\n    if (lastNode?.parentElement.localName === \"viv-ts-inner\") {\n      lastNode = lastNode.parentElement.parentElement;\n    }\n    if (\n      (lineIndex === linePositions.length && lastNode.nextSibling) ||\n      (lineIndex >= linePositions.length - 1 &&\n        lastNode.parentElement.querySelector(\".MJXc-display\")) // for MathJax\n    ) {\n      // Prevent unnecessary page break before the last line\n      // when a block box (may be generated by MathJax) exists\n      // just after the text or inline box.\n      widows = 0;\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (!nodeContext.floatSide) {\n        if (this.vertical) {\n          let wAdj = afterEdge + margin.right - clearEdge;\n          if (wAdj > 0 == margin.right >= 0) {\n            // In addition to collapsed portion\n            wAdj += margin.right;\n          }\n          spacer.style.marginLeft = `${wAdj}px`;\n        } else {\n          let hAdj = clearEdge - (afterEdge + margin.top);\n          if (hAdj > 0 == margin.top >= 0) {\n            // In addition to collapsed portion\n            hAdj += margin.top;\n          }\n          spacer.style.marginBottom = `${hAdj}px`;\n        }\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Save break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                this.breakAtTheEdgeBeforeFloat = Break.isAvoidBreakValue(\n                  breakAtTheEdge,\n                )\n                  ? breakAtTheEdge\n                  : null;\n              }\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              // Check break opportunity between anonymous block box and block-level box\n              // (Issue #611)\n              if (\n                !nodeContext.inline &&\n                (lastAfterNodeContext\n                  ? LayoutHelper.findAncestorSpecialInlineNodeContext(\n                      lastAfterNodeContext,\n                    )\n                  : this.breakPositions[\n                      this.breakPositions.length - 1\n                    ] instanceof BoxBreakPosition)\n              ) {\n                this.saveEdgeBreakPosition(\n                  nodeContext.copy(),\n                  breakAtTheEdge,\n                  false,\n                );\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer ||\n                // Check empty block box (Issue #749)\n                (!nodeContext.nodeShadow &&\n                  !(nodeContext.sourceNode as Element).firstElementChild &&\n                  VtreeImpl.canIgnore(\n                    nodeContext.sourceNode.firstChild,\n                    nodeContext.whitespace,\n                  ))\n              ) {\n                // new formatting context, or float or flex container,\n                // or empty block box (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Restore break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                breakAtTheEdge =\n                  breakAtTheEdge ?? this.breakAtTheEdgeBeforeFloat;\n                this.breakAtTheEdgeBeforeFloat = null;\n              }\n              const element = nodeContext.sourceNode as Element;\n              // Make breakable after svg and math elements\n              // (Fix for issue #750)\n              if (\n                element.localName === \"svg\" ||\n                element.localName === \"math\" ||\n                element.getAttribute(\"data-math-typeset\") === \"true\"\n              ) {\n                onStartEdges = false;\n                lastAfterNodeContext = nodeContext.copy();\n                trailingEdgeContexts.push(lastAfterNodeContext);\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  null,\n                  nodeContext.breakAfter,\n                );\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                break;\n              }\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? this.rtl\n          ? columnBBox.bottom\n          : columnBBox.top\n        : this.rtl\n        ? columnBBox.right\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? this.rtl\n          ? columnBBox.top\n          : columnBBox.bottom\n        : this.rtl\n        ? columnBBox.left\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    let penalty = checkPoints[0].breakPenalty;\n    if (penalty) {\n      // Fix for issue #546\n      let block = checkPoints[0];\n      while (block.parent && block.inline) {\n        block = block.parent;\n      }\n      penalty = block.breakPenalty;\n    }\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  override prepareLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  override clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  override saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  override restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /** @override */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  override openAllViews(\n    position: Vtree.NodePosition,\n  ): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /** @override */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /** @override */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /** @override */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /** @override */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /** @override */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  override accept(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  override finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  override clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  override getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  override getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  override getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  override isFirstTime(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n  ): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  override getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  override saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  override restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  override startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      const width = vertical ? rect[\"height\"] : rect[\"width\"];\n      // Workaround for issue #958\n      // Non-integer width causes problem, so return rounded-up value.\n      return Math.ceil(width);\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /** @override */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /** @override */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /** @override */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /** @override */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  override clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  override restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  override getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  override breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  override allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  override nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  override postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  override finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  override equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\n\n/** */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  override preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  override calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  override hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  override updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  override calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  override hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  override updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\nimport { TokenType } from \"./css-tokenizer\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 0x01;\n\nexport const ALLOW_STR = 0x02;\n\nexport const ALLOW_IDENT = 0x04;\n\nexport const ALLOW_POS_NUMERIC = 0x08;\n\nexport const ALLOW_POS_NUM = 0x10;\n\nexport const ALLOW_POS_INT = 0x20;\n\nexport const ALLOW_COLOR = 0x40;\n\nexport const ALLOW_URL = 0x80;\n\nexport const ALLOW_NEGATIVE = 0x100;\n\nexport const ALLOW_ZERO = 0x200;\n\nexport const ALLOW_ZERO_PERCENT = 0x400;\n\nexport const ALLOW_SLASH = 0x800;\n\nexport const ALLOW_URANGE = 0x1000;\n\nexport const ALLOW_IMAGE = 0x2000;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  override visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", ident.name)) {\n        return ident;\n      }\n    }\n    return null;\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (/^([0-9A-F]{3,4}|([0-9A-F]{2}){3,4})$/i.test(color.hex)) {\n        return color;\n      }\n    }\n    return null;\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  override visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", func.toString())) {\n        return func;\n      }\n    }\n    if (this.allowed & ALLOW_IMAGE) {\n      if (CSS.supports(\"background-image\", func.toString())) {\n        return func;\n      }\n    }\n    if (\n      func.name === \"calc\" &&\n      this.allowed &\n        (ALLOW_POS_NUMERIC |\n          ALLOW_POS_NUM |\n          ALLOW_POS_INT |\n          ALLOW_NEGATIVE |\n          ALLOW_ZERO |\n          ALLOW_ZERO_PERCENT)\n    ) {\n      return func;\n    }\n    return null;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS: ValueMap = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  override visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  override visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  override validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  override validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  override validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  override tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  override success(\n    rval: Css.Val,\n    shorthandValidator: ShorthandValidator,\n  ): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  override success(\n    rval: Css.Val,\n    shorthandValidator: ShorthandValidator,\n  ): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  override tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] ??\n            this.validatorSet.defaultValues[name] ??\n            Css.ident.initial,\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateDefaultingValue(\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, value, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    return this.validateSingle(expr);\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val =\n        values[name] ??\n        this.validatorSet.defaultValues[name] ??\n        Css.ident.initial;\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport class TextSpacingShorthandValidator extends SimpleShorthandValidator {\n  override validateList(list: Css.Val[]): number {\n    if (list.length === 1 && list[0] instanceof Css.Ident) {\n      switch (list[0].name.toLowerCase()) {\n        case \"normal\":\n          list = [\n            this.validatorSet.defaultValues[\"text-autospace\"],\n            this.validatorSet.defaultValues[\"text-spacing-trim\"],\n          ];\n          break;\n        case \"auto\":\n          list = [Css.ident.auto, Css.ident.auto];\n          break;\n        case \"none\":\n          list = [Css.getName(\"no-autospace\"), Css.getName(\"space-all\")];\n          break;\n      }\n    }\n    return super.validateList(list);\n  }\n}\n\nconst propsExcludedFromAll = [\n  \"unicode-bidi\",\n  \"direction\",\n\n  // excludes css-logical\n  \"margin-block-start\",\n  \"margin-block-end\",\n  \"margin-inline-start\",\n  \"margin-inline-end\",\n  \"padding-block-start\",\n  \"padding-block-end\",\n  \"padding-inline-start\",\n  \"padding-inline-end\",\n  \"border-block-start-color\",\n  \"border-block-end-color\",\n  \"border-inline-start-color\",\n  \"border-inline-end-color\",\n  \"border-block-start-style\",\n  \"border-block-end-style\",\n  \"border-inline-start-style\",\n  \"border-inline-end-style\",\n  \"border-block-start-width\",\n  \"border-block-end-width\",\n  \"border-inline-start-width\",\n  \"border-inline-end-width\",\n  \"block-start\",\n  \"block-end\",\n  \"inline-start\",\n  \"inline-end\",\n  \"block-size\",\n  \"inline-size\",\n  \"max-block-size\",\n  \"max-inline-size\",\n  \"min-block-size\",\n  \"min-inline-size\",\n\n  // excludes non-standards and special\n  \"behavior\",\n  \"bleed\",\n  \"conflicting-partitions\",\n  \"crop-offset\",\n  \"enabled\",\n  \"flow-consume\",\n  \"flow-from\",\n  \"flow-into\",\n  \"flow-linger\",\n  \"flow-options\",\n  \"flow-priority\",\n  \"font-display\",\n  \"font-size-adjust\",\n  \"font-stretch_css3\",\n  \"font-variant_css2\",\n  \"glyph-orientation-vertical\",\n  \"marks\",\n  \"min-page-height\",\n  \"min-page-width\",\n  \"repeat-on-break\",\n  \"required\",\n  \"required-partitions\",\n  \"ruby-align\",\n  \"shape-inside\",\n  \"snap-height\",\n  \"snap-width\",\n  \"template\",\n  \"text-decoration-skip\",\n  \"text-justify\",\n  \"text-zoom\",\n  \"unicode-range\",\n  \"utilization\",\n  \"wrap-flow\",\n];\n\nexport class AllShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    for (const name in this.validatorSet.validators) {\n      if (!propsExcludedFromAll.includes(name)) {\n        this.propList.push(name);\n      }\n    }\n  }\n\n  override validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n  TEXT_SPACING: TextSpacingShorthandValidator,\n  ALL: AllShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == TokenType.HASH) {\n      cssval = new Css.HexColor(token.text);\n    } else if (token.type == TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"COLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IMAGE_FUNCTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IMAGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        lh: Css.empty,\n        rlh: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == TokenType.COMMA);\n      if (token.type != TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents: ValueMap = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case TokenType.INT: {\n            const idents: ValueMap = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case TokenType.BAR:\n            setop(\"|\");\n            break;\n          case TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (token.type == TokenType.IDENT && shorthandValidators[token.text]) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        map[pname] = this.defaultValues[pname] ?? Css.ident.initial;\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    if (Css.isCustomPropName(name)) {\n      receiver.simpleProperty(name, value, important);\n      return;\n    }\n    if (containsVar(value)) {\n      // Set the specified property containing `var(…)`\n      receiver.simpleProperty(name, value, important);\n      return;\n    }\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      if (CSS.supports(name, value.toString())) {\n        // Browser supports this property\n        receiver.simpleProperty(origName, value, important);\n      } else {\n        receiver.unknownProperty(origName, value);\n      }\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        Css.isDefaultingValue(value) || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else if (!prefix && CSS.supports(name, value.toString())) {\n        // Browser supports this property value\n        receiver.simpleProperty(name, value, important);\n        return;\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (Css.isDefaultingValue(value)) {\n        shorthand.propagateDefaultingValue(value, important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n\nclass VarCheckVisitor extends Css.Visitor {\n  varFound = false;\n\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name === \"var\") {\n      this.varFound = true;\n    } else if (!this.varFound) {\n      this.visitValues(func.values);\n    }\n    return null;\n  }\n}\n\nexport function containsVar(val: Css.Val): boolean {\n  const varCheckVisitor = new VarCheckVisitor();\n  val.visit(varCheckVisitor);\n  return varCheckVisitor.varFound;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): void;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name] as CssCascade.CascadeValue;\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      if (whitespace && !Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this, this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name] as CssCascade.CascadeValue;\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    if (isBody) {\n      for (const propName of [\"writing-mode\", \"direction\"]) {\n        if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n          // Copy it over, but keep it at the root element as well.\n          this.rootStyle[propName] = elemStyle[propName];\n        }\n      }\n    } else {\n      for (const propName in elemStyle) {\n        if (CssCascade.isInherited(propName)) {\n          this.rootStyle[propName] = elemStyle[propName];\n        }\n      }\n    }\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? (elemStyle[\"background-color\"] as CssCascade.CascadeValue).evaluate(\n            this.context,\n          )\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? (elemStyle[\"background-image\"] as CssCascade.CascadeValue).evaluate(\n            this.context,\n          )\n        : (null as Css.Val);\n      if (\n        (backgroundColor && !Css.isDefaultingValue(backgroundColor)) ||\n        (backgroundImage && !Css.isDefaultingValue(backgroundImage))\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      // root element\n      const fontSize = elemStyle[\"font-size\"] as CssCascade.CascadeValue;\n      let isRelativeFontSize = true;\n      if (fontSize && !Css.isDefaultingValue(fontSize.value)) {\n        const val = fontSize.evaluate(this.context);\n        if (val instanceof Css.Numeric) {\n          let px = val.num;\n          switch (val.unit) {\n            case \"em\":\n            case \"rem\":\n              px *= this.context.initialFontSize;\n              break;\n            case \"ex\":\n              px *=\n                (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            case \"%\":\n              px *= this.context.initialFontSize / 100;\n              break;\n            case \"lh\":\n            case \"rlh\":\n              px *=\n                (this.context.initialFontSize * Exprs.defaultUnitSizes[\"lh\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            default: {\n              const unitSize = Exprs.defaultUnitSizes[val.unit];\n              if (unitSize) {\n                px *= unitSize;\n              }\n              isRelativeFontSize = false;\n            }\n          }\n          this.context.rootFontSize = px;\n          this.context.isRelativeRootFontSize = isRelativeFontSize;\n        }\n      }\n      const rootFontSize =\n        this.context.rootFontSize ?? this.context.initialFontSize;\n      const lineHeight = elemStyle[\"line-height\"] as CssCascade.CascadeValue;\n      if (lineHeight && !Css.isDefaultingValue(lineHeight.value)) {\n        const val = lineHeight.evaluate(this.context);\n        if (val instanceof Css.Num) {\n          this.context.rootLineHeight = val.num * rootFontSize;\n        } else if (val instanceof Css.Numeric) {\n          let px = val.num;\n          switch (val.unit) {\n            case \"em\":\n            case \"rem\":\n              px *= rootFontSize;\n              break;\n            case \"ex\":\n              px *=\n                (rootFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            case \"%\":\n              px *= rootFontSize / 100;\n              break;\n            case \"lh\":\n            case \"rlh\":\n              px *=\n                (this.context.initialFontSize * Exprs.defaultUnitSizes[\"lh\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            default: {\n              const unitSize = Exprs.defaultUnitSizes[val.unit];\n              if (unitSize) {\n                px *= unitSize;\n              }\n            }\n          }\n          this.context.rootLineHeight = px;\n        }\n      } else {\n        // Note: \"rlh\" unit is inaccurate for line-height:normal, not using font metrics.\n        this.context.rootLineHeight =\n          (this.context.fontSize() * Exprs.defaultUnitSizes[\"lh\"]) /\n          Exprs.defaultUnitSizes[\"em\"];\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"] as CssCascade.CascadeValue;\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"] as CssCascade.CascadeValue;\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"] as CssCascade.CascadeValue;\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"] as CssCascade.CascadeValue;\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(this, elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"] as CssCascade.CascadeValue;\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageCV = style[\"page\"] as CssCascade.CascadeValue;\n          const pageType =\n            pageCV &&\n            !Css.isDefaultingValue(pageCV.value) &&\n            pageCV.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /** @override */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /** @override */\n  processContent(\n    element: Element,\n    styles: { [key: string]: Css.Val },\n    viewNode: Node,\n  ) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-stretch\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n  \"unicode-range\": Css.fullURange,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const style = this.head.ownerDocument.createElement(\"style\");\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    this.head.appendChild(style);\n    Logging.logger.debug(\"Load font:\", src);\n    frame.finish(viewFontFace);\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    const srcFamilySrc = srcFace.family + \";\" + src;\n    let fetcher = this.srcURLMap[srcFamilySrc];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.debug(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[srcFamilySrc] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers).thenAsync(() =>\n      this.waitFontLoading(),\n    );\n  }\n\n  waitFontLoading(): Task.Result<boolean> {\n    const fonts = this.head.ownerDocument.fonts; // FontFaceSet\n    let unloadedCount = 0;\n    fonts.forEach((fontFace) => {\n      if (fontFace.status === \"unloaded\") {\n        unloadedCount++;\n        fontFace.load();\n      }\n    });\n    if (unloadedCount === 0) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"waitFontLoading\");\n    frame\n      .loop(() => {\n        return frame.sleep(20).thenAsync(() => {\n          if (fonts.status === \"loading\") {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  override createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  override clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  override createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  override clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  override createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  override clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (!val && CssCascade.isInherited(name)) {\n      // inherit from root style\n      if (\n        name === \"font-size\" &&\n        context.isRelativeRootFontSize &&\n        context.rootFontSize\n      ) {\n        val = new Css.Numeric(context.rootFontSize, \"px\");\n      } else {\n        const rootStyle = (\n          context as Exprs.Context & {\n            styler: { rootStyle: { [key: string]: CssCascade.CascadeValue } };\n          }\n        ).styler?.rootStyle;\n        val = rootStyle[name]?.value;\n      }\n    }\n    if (val) {\n      val = CssCascade.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      let percentRef = /\\b(height|top|bottom)\\b/.test(name)\n        ? context.pageAreaHeight ?? context.pageHeight()\n        : context.pageAreaWidth ?? context.pageWidth();\n      val = CssCascade.evaluateCSSToCSS(context, val, name, percentRef);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      if (\n        name.startsWith(\"background\") &&\n        element.parentElement.hasAttribute(\"data-vivliostyle-bleed-box\")\n      ) {\n        // Move background properties to the parent bleed-box element.\n        // (Fix for issue #644)\n        element = element.parentElement;\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos = this.vertical\n            ? ((containerSize + columnGap) * i) / columnCount -\n              columnGap / 2 +\n              container.paddingTop -\n              ruleWidth / 2\n            : ((containerSize + columnGap) * i) / columnCount -\n              columnGap / 2 +\n              container.paddingLeft -\n              ruleWidth / 2;\n          const size = this.vertical\n            ? container.width + container.paddingLeft + container.paddingRight\n            : container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    const content = style[\"content\"] as CssCascade.CascadeValue;\n    if (content) {\n      style[\"content\"] = content.filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-combine-upright\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-decoration-thickness\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-fill-color\",\n  \"text-orientation\",\n  \"text-shadow\",\n  \"text-stroke-color\",\n  \"text-stroke-width\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  override boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  override boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  const writingMode = (style[\"writing-mode\"] as CssCascade.CascadeValue)?.value;\n  const direction = (style[\"direction\"] as CssCascade.CascadeValue)?.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n  cropOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n    cropOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marksCV = style[\"marks\"];\n  const bleedCV = style[\"bleed\"];\n  const marks =\n    marksCV && !Css.isDefaultingValue(marksCV.value)\n      ? marksCV.value\n      : Css.ident.none;\n  const bleed =\n    bleedCV && !Css.isDefaultingValue(bleedCV.value)\n      ? bleedCV.value\n      : Css.ident.auto;\n  if (bleed === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks !== Css.ident.none) {\n      let hasCrop = false;\n      if (marks.isSpaceList()) {\n        hasCrop = (marks as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed as Css.Numeric;\n  }\n\n  // crop-offset (Issue #913)\n  const cropOffsetCV = style[\"crop-offset\"];\n  const cropOffset =\n    cropOffsetCV && !Css.isDefaultingValue(cropOffsetCV.value)\n      ? cropOffsetCV.value\n      : Css.ident.auto;\n  if (cropOffset === Css.ident.auto) {\n    if (marks !== Css.ident.none) {\n      pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n    }\n  } else if (cropOffset.isNumeric()) {\n    pageSizeAndBleed.cropOffset = cropOffset as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    Math.max(0, pageSizeAndBleed.bleed.num) *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    !pageSizeAndBleed.cropOffset.num && pageSizeAndBleed.bleedOffset.num\n      ? pageSizeAndBleed.bleedOffset.num *\n        context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false)\n      : Math.max(\n          0,\n          pageSizeAndBleed.cropOffset.num *\n            context.queryUnitSize(pageSizeAndBleed.cropOffset.unit, false) -\n            bleed,\n        );\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"#010101\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"] as CssCascade.CascadeValue;\n  if (marks) {\n    const value = marks.value;\n    if (value instanceof Css.SpaceList) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Math.max(\n    0,\n    evaluatedPageSizeAndBleed.bleedOffset -\n      Css.toNumber(defaultPrinterMarkLineLength, context),\n  );\n  const lineLength = evaluatedPageSizeAndBleed.bleedOffset - printerMarkOffset;\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (\n          val &&\n          val.value !== Css.empty &&\n          val.value !== Css.ident.inherit &&\n          val.value !== Css.ident.unset &&\n          val.value !== Css.ident.revert\n        ) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  override initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  override initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  override adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    const val = style[isHorizontal ? \"width\" : \"height\"];\n    this.hasAutoSize_ =\n      !val || val === Css.ident.auto || Css.isDefaultingValue(val);\n  }\n\n  /** @override */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /** @override */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /** @override */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /** @override */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /** @override */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /** @override */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /** @override */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /** @override */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  override hasAutoSize(): boolean {\n    return false;\n  }\n\n  override getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  override getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  override getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  override initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  override initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n      if (this.vertical) {\n        let align = \"center\";\n        if (this.boxInfo.isInTopRow || this.boxInfo.isInBottomRow) {\n          if (\n            this.boxInfo.isInLeftColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.END\n          ) {\n            align = \"start\";\n          } else if (\n            this.boxInfo.isInRightColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.START\n          ) {\n            align = \"end\";\n          }\n        }\n        Base.setCSSProperty(element, \"align-items\", align);\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  override initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  override initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  override finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop] as CssCascade.CascadeValue;\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"] as CssCascade.CascadeValue;\n    if (size && !Css.isDefaultingValue(size.value)) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      CssCascade.setPropCascadeValue(\n        pageMasterStyle,\n        \"width\",\n        new CssCascade.CascadeValue(pageSize.width, priority),\n        this.context,\n      );\n      CssCascade.setPropCascadeValue(\n        pageMasterStyle,\n        \"height\",\n        new CssCascade.CascadeValue(pageSize.height, priority),\n        this.context,\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 3;\n  }\n\n  override makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  override startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  override nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  override startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  override simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        const result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(\n                  props,\n                  n,\n                  noPageSelectorProps[n] as CssCascade.CascadeValue,\n                );\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          CssCascade.setPropCascadeValue(props, name, result);\n        }\n      });\n    }\n  }\n\n  override insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  override makeApplyRuleAction(\n    specificity: number,\n  ): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  override startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2022 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Scripts - Supports JavaScript in source document.\n */\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Task from \"./task\";\nimport * as Logging from \"./logging\";\nimport * as TaskUtil from \"./task-util\";\n\n/**\n * Enable or disable JavaScript in html support\n */\nexport let allowScripts = true;\nexport function setAllowScripts(value: boolean): void {\n  allowScripts = value;\n}\n\nconst deferredScripts: HTMLScriptElement[] = [];\n\nfunction sameScripts(s1: HTMLScriptElement, s2: HTMLScriptElement): boolean {\n  return (\n    s1 === s2 ||\n    (s1.src || s2.src ? s1.src === s2.src : s1.textContent === s2.textContent)\n  );\n}\n\nfunction getScriptsInOrNearHead(document: Document): HTMLScriptElement[] {\n  // To support Chrome < 88 and Firefox < 84, we cannot use\n  // the selector \"body > script:not(:not(script, link, style) ~ *)\".\n  // (Issue #919)\n  const scriptsInBodyNotNearHead = Array.from(\n    document.querySelectorAll(\n      \"body > :not(script):not(link):not(style) ~ script\",\n    ),\n  ) as HTMLScriptElement[];\n  return (\n    Array.from(\n      document.querySelectorAll(\"head > script, body > script\"),\n    ) as HTMLScriptElement[]\n  ).filter((script) => !scriptsInBodyNotNearHead.includes(script));\n}\n\nexport function loadScript(\n  srcScriptElem: HTMLScriptElement,\n  window: Window,\n  flags?: { inHead?: boolean; atEnd?: boolean; forceDefer?: boolean },\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  if (\n    !flags?.inHead &&\n    !flags?.atEnd &&\n    getScriptsInOrNearHead(srcScriptElem.ownerDocument).includes(srcScriptElem)\n  ) {\n    // The script elements at beginning of body have already been processed.\n    return Task.newResult(false);\n  }\n\n  const scriptContent = srcScriptElem.textContent;\n  const src = srcScriptElem.src;\n  const isModule = srcScriptElem.type === \"module\";\n  const async = (isModule || src) && srcScriptElem.async;\n  const defer = (isModule && !async) || (src && srcScriptElem.defer);\n  const needDefer = !flags?.atEnd && (flags?.forceDefer || defer || async);\n\n  if (!hasScripts(window)) {\n    // `window.onload = startViewer`, which was set by vivliostyle-viewer,\n    // has to be unset to prevent `startViewer` restarting because of\n    // `window.dispatchEvent(new Event(\"load\"))` in `loadScriptsAtEnd()`.\n    window.onload = null;\n  }\n\n  if (needDefer) {\n    if (!deferredScripts.some((s) => sameScripts(s, srcScriptElem))) {\n      deferredScripts.push(srcScriptElem);\n    }\n    return Task.newResult(true);\n  }\n\n  if (src.includes(\"/mathjax\")) {\n    const builtinMathJax2 = window.document.head.querySelector(\n      \"script[src*='MathJax.js']:not([data-vivliostyle-scripting])\",\n    );\n    if (builtinMathJax2) {\n      if (src.includes(\"/mathjax@3\")) {\n        // Remove the builtin MathJax 2 when MathJax 3 is specified\n        window.document.head.removeChild(builtinMathJax2);\n        if (window[\"MathJax\"]?.version?.startsWith(\"2.\")) {\n          delete window[\"MathJax\"];\n        }\n      } else if (src.includes(\"/MathJax.js\")) {\n        // Ignore the specified MathJax 2, and use the builtin MathJax 2\n        return Task.newResult(true);\n      }\n    }\n  }\n\n  for (const s of window.document.head.getElementsByTagName(\"script\")) {\n    if (\n      s.hasAttribute(\"data-vivliostyle-scripting\") &&\n      sameScripts(s, srcScriptElem)\n    ) {\n      // If same script is already loaded, remove the already loaded one before load the new one.\n      window.document.head.removeChild(s);\n    }\n  }\n\n  const scriptElem = window.document.createElement(\"script\");\n  scriptElem.textContent = scriptContent;\n  if (src) {\n    scriptElem.src = src;\n  }\n  scriptElem.async = async;\n  scriptElem.defer = defer;\n  scriptElem.setAttribute(\"data-vivliostyle-scripting\", \"true\");\n\n  for (const attr of srcScriptElem.attributes) {\n    if (![\"src\", \"async\", \"defer\"].includes(attr.name)) {\n      scriptElem.setAttribute(attr.name, attr.value);\n    }\n  }\n  Logging.logger.debug(\"script:\", src);\n  if (!src) {\n    window.document.head.appendChild(scriptElem);\n    return Task.newResult(true);\n  } else {\n    const fetcher = TaskUtil.loadElement(scriptElem);\n    window.document.head.appendChild(scriptElem);\n    return TaskUtil.waitForFetchers([fetcher]);\n  }\n}\n\nfunction getAllFontFamilyList(\n  srcDocument: Document,\n  styler: CssStyler.Styler,\n): string {\n  const fontFamilySet = {};\n  const findFontFamilyInStyle = (style: any): void => {\n    const fontFamily = style[\"font-family\"]?.value;\n    if (fontFamily) {\n      if (fontFamily.values) {\n        for (const family1 of fontFamily.values) {\n          fontFamilySet[family1.stringValue()] = true;\n        }\n      } else {\n        fontFamilySet[fontFamily.stringValue()] = true;\n      }\n    }\n    const marginBoxes = style[\"_marginBoxes\"];\n    if (marginBoxes) {\n      for (const marginBoxStyle of Object.values(marginBoxes)) {\n        findFontFamilyInStyle(marginBoxStyle);\n      }\n    }\n  };\n  const findAllFontFamily = (arg: any): void => {\n    if (arg instanceof CssCascade.ApplyRuleAction) {\n      findFontFamilyInStyle(arg.style);\n    } else if (arg instanceof CssCascade.CascadeAction || Array.isArray(arg)) {\n      for (const v of Object.values(arg)) {\n        findAllFontFamily(v);\n      }\n    }\n  };\n  // Find all font-family values in stylesheets.\n  for (const obj of Object.values(styler.cascade.code)) {\n    for (const arg of Object.values(obj ?? {})) {\n      findAllFontFamily(arg);\n    }\n  }\n  // Find all font-family values in inline style.\n  for (const elem of srcDocument.querySelectorAll(\"[style]\")) {\n    if ((elem as HTMLElement).style?.fontFamily) {\n      fontFamilySet[(elem as HTMLElement).style.fontFamily] = true;\n    }\n  }\n  return Object.keys(fontFamilySet).join(\",\");\n}\n\nfunction prepareTextContentForWebFonts(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): HTMLElement {\n  const textContentDiv: HTMLElement =\n    window.document.querySelector(\"[data-vivliostyle-textcontent]\") ??\n    window.document.createElement(\"div\");\n  textContentDiv.style.position = \"fixed\";\n  textContentDiv.style.fontSize = \"0\";\n  textContentDiv.setAttribute(\"data-vivliostyle-textcontent\", \"true\");\n  textContentDiv.setAttribute(\"aria-hidden\", \"true\");\n  textContentDiv.style.fontFamily = getAllFontFamilyList(srcDocument, styler);\n  textContentDiv.textContent = srcDocument.documentElement.textContent;\n  window.document.body.appendChild(textContentDiv);\n  return textContentDiv;\n}\n\nexport function loadScriptsInHead(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  // Process script elements in head and also beginning of body\n  const srcScripts: HTMLScriptElement[] = getScriptsInOrNearHead(srcDocument);\n  if (srcScripts.length === 0) {\n    return Task.newResult(false);\n  }\n  const needPrepareForWebFonts = srcScripts.some(\n    (s) => !(s.async || s.defer || s.type === \"module\"),\n  );\n\n  // Web fonts needs text content of the document\n  const textContentDiv = needPrepareForWebFonts\n    ? prepareTextContentForWebFonts(srcDocument, window, styler)\n    : null;\n  const fonts = window.document.fonts; // FontFaceSet\n  const savedDollar = window[\"$\"];\n  let forceDefer = false;\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (srcScripts.length === 0) {\n        if (!needPrepareForWebFonts) {\n          return Task.newResult(false); // break\n        }\n        return frame.sleep(20).thenAsync(() => {\n          if (\n            fonts.status === \"loading\" ||\n            // for Typekit Web Font Loader (Adobe Fonts)\n            window.document.documentElement.classList.contains(\"wf-loading\") ||\n            // For DynaFont\n            // FIXME: checking the global variable `ret` set in https://dfo.dynacw.co.jp/JSDynaFont/DynaFont.js\n            // would be not very good, because it seems to have been made global by mistake.\n            (window[\"FontJSON\"]?.Font &&\n              window[\"ret\"]?.readyState &&\n              window[\"ret\"].readyState < 4)\n          ) {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      }\n      const srcScriptElem = srcScripts.shift();\n      return loadScript(srcScriptElem, window, {\n        inHead: true,\n        forceDefer,\n      }).thenAsync(() => {\n        if (!forceDefer && window[\"$\"] !== savedDollar) {\n          // jQuery `$(…)` does not work before document is loaded, so need to defer\n          deferredScripts.push(srcScriptElem);\n          forceDefer = true;\n        }\n        if (srcScripts.length === 0) {\n          if (needPrepareForWebFonts) {\n            // Some web font loaders (DynaFont, FONTPLUS) need DOMContentLoaded event\n            Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (document)\");\n            window.document.dispatchEvent(new Event(\"DOMContentLoaded\"));\n          }\n        }\n        return Task.newResult(true); // continue\n      });\n    })\n    .then(() => {\n      if (textContentDiv) {\n        textContentDiv.remove();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function loadScriptsAtEnd(window: Window): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (deferredScripts.length === 0) {\n        return Task.newResult(false);\n      }\n      return loadScript(deferredScripts.shift(), window, {\n        atEnd: true,\n      }).thenReturn(deferredScripts.length > 0);\n    })\n    .then(() => {\n      Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (window)\");\n      window.dispatchEvent(new Event(\"DOMContentLoaded\"));\n      Logging.logger.debug(\"dispatchEvent: load (window)\");\n      window.dispatchEvent(new Event(\"load\"));\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function hasScripts(window: Window) {\n  if (!allowScripts) {\n    return false;\n  }\n  return (\n    deferredScripts.length > 0 ||\n    !!window.document.head.querySelector(\"script[data-vivliostyle-scripting]\")\n  );\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap: { [key: string]: string } = {};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /** @override */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n          const child = element.firstElementChild;\n          if (child && Vtree.canIgnore(child.previousSibling)) {\n            const childStyle = styler.getStyle(child, false);\n            if (childStyle) {\n              const childDisplay = CssCascade.getProp(childStyle, \"display\");\n              if (\n                childDisplay?.value &&\n                childDisplay.value !== Css.ident.inline\n              ) {\n                continue;\n              }\n            }\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"] as CssCascade.CascadeValue;\n          if (!content || !Vtree.nonTrivialContent(content.value)) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ): CssCascade.ElementStyleMap {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap: CssCascade.ElementStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle: { [key: string]: CssCascade.CascadeValue } =\n        (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      let fontSize: Css.Val;\n      let lineHeight: Css.Val;\n\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const prop = CssCascade.getProp(style, name);\n        let prop1 = prop;\n        if (!Css.isDefaultingValue(prop.value)) {\n          if (\n            name === \"font-size\" &&\n            i === styles.length - 1 &&\n            this.context.isRelativeRootFontSize &&\n            this.context.rootFontSize\n          ) {\n            // Fix for issue #608, #549\n            prop1 = new CssCascade.CascadeValue(\n              new Css.Numeric(this.context.rootFontSize, \"px\"),\n              prop.priority,\n            );\n          } else if (\n            name === \"line-height\" &&\n            i === styles.length - 1 &&\n            this.context.rootLineHeight &&\n            prop.value instanceof Css.Numeric &&\n            (prop.value.unit === \"lh\" || prop.value.unit === \"rlh\")\n          ) {\n            // line-height with lh or rlh unit on root element\n            prop1 = new CssCascade.CascadeValue(\n              new Css.Numeric(this.context.rootLineHeight, \"px\"),\n              prop.priority,\n            );\n          } else if (\n            i === 0 &&\n            prop.value instanceof Css.Numeric &&\n            prop.value.unit === \"lh\"\n          ) {\n            // line-height with lh unit on current element\n            prop1 = new CssCascade.CascadeValue(\n              new Css.Numeric(\n                prop.value.num *\n                  this.getLineHeightUnitSize(name, fontSize, lineHeight),\n                \"px\",\n              ),\n              prop.priority,\n            );\n          } else if (!Css.isCustomPropName(name)) {\n            prop1 = prop.filterValue(inheritanceVisitor);\n          }\n\n          if (name === \"font-size\") {\n            fontSize = prop1.value;\n          } else if (name === \"line-height\") {\n            lineHeight = prop1.value;\n          }\n\n          props[name] = prop1;\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (Css.isDefaultingValue(value)) {\n            if (value === Css.ident.initial) {\n              props[name] = undefined;\n            }\n          } else if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n              default:\n                props[name] = value;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? this.nodeContext.shadowContext.styler\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle: { [key: string]: Css.Val } = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatCV: CssCascade.CascadeValue = elementStyle[\"float\"];\n    const floatReferenceCV: CssCascade.CascadeValue =\n      elementStyle[\"float-reference\"];\n    const floatReference =\n      floatCV &&\n      !Css.isDefaultingValue(floatCV.value) &&\n      floatCV.value !== Css.ident.none &&\n      floatReferenceCV &&\n      !Css.isDefaultingValue(floatReferenceCV.value)\n        ? PageFloats.floatReferenceOf(floatReferenceCV.value.toString())\n        : null;\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(\n      element,\n      computedStyle,\n      this.nodeContext.viewNode ?? this.nodeContext.parent?.viewNode,\n    );\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    if (\n      Scripts.allowScripts &&\n      element.localName === \"script\" &&\n      element.namespaceURI === Base.NS.XHTML\n    ) {\n      Scripts.loadScript(\n        element as HTMLScriptElement,\n        this.viewport.window,\n      ).thenFinish(frame);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"] as Css.Ident;\n    if (Css.isDefaultingValue(display)) {\n      if (display === Css.ident.initial || display === Css.ident.unset) {\n        display = Css.ident.inline;\n      } else if (display === Css.ident.inherit) {\n        display =\n          this.nodeContext.parent?.display &&\n          Css.getName(this.nodeContext.parent?.display);\n      } else {\n        display = null;\n      }\n    }\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"] as Css.Ident;\n      let floatSide = computedStyle[\"float\"] as Css.Ident;\n      let clearSide = computedStyle[\"clear\"] as Css.Ident;\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"] as Css.Ident,\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      const breakInside = computedStyle[\"break-inside\"];\n      if (\n        floating ||\n        (breakInside &&\n          !Css.isDefaultingValue(breakInside) &&\n          breakInside !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      const floatMinWrapBlock = computedStyle[\"float-min-wrap-block\"];\n      this.nodeContext.floatMinWrapBlock =\n        floatMinWrapBlock && !Css.isDefaultingValue(floatMinWrapBlock)\n          ? (floatMinWrapBlock as Css.Numeric)\n          : null;\n\n      // Leaves handling of multicol specified on non-root/body elements to the browser\n      const insideNonRootMultiColumn = this.isInsideNonRootMultiColumn();\n\n      const columnSpan = computedStyle[\"column-span\"];\n      this.nodeContext.columnSpan =\n        !insideNonRootMultiColumn &&\n        columnSpan &&\n        !Css.isDefaultingValue(columnSpan)\n          ? columnSpan\n          : null;\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (\n          breakAfter &&\n          !Css.isDefaultingValue(breakAfter) &&\n          !(insideNonRootMultiColumn && breakAfter === Css.ident.column)\n        ) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n          if (Break.forcedBreakValues[this.nodeContext.breakAfter]) {\n            delete computedStyle[\"break-after\"];\n          }\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (\n          breakBefore &&\n          !Css.isDefaultingValue(breakBefore) &&\n          !(insideNonRootMultiColumn && breakBefore === Css.ident.column)\n        ) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n          if (Break.forcedBreakValues[this.nodeContext.breakBefore]) {\n            delete computedStyle[\"break-before\"];\n          }\n        }\n        // Named page type\n        const pageVal: Css.Val = computedStyle[\"page\"];\n        let pageType =\n          pageVal && !Css.isDefaultingValue(pageVal) && pageVal.toString();\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!Break.isSpreadBreakValue(this.nodeContext.breakBefore)) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing: Css.Val;\n        let blockBorderSpacing: Css.Val;\n        if (borderSpacing) {\n          if (borderSpacing instanceof Css.SpaceList) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      const footnotePolicy = computedStyle[\"footnote-policy\"] as Css.Ident;\n      this.nodeContext.footnotePolicy =\n        footnotePolicy && !Css.isDefaultingValue(footnotePolicy)\n          ? footnotePolicy\n          : null;\n      const firstPseudo = computedStyle[\"x-first-pseudo\"] as Css.Int;\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter instanceof Css.Str) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (elementStyle[\"content\"]?.value?.url) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else if (computedStyle[\"display\"] === Css.ident.none) {\n          // No element should be created if display:none is set.\n          // (Fix issue #924)\n          frame.finish(false);\n          return;\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (!Scripts.allowScripts && attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                const transformedValue =\n                  this.documentURLTransformer.transformFragment(\n                    attributeValue,\n                    this.xmldoc.url,\n                  );\n                if (\n                  Scripts.allowScripts &&\n                  !(\n                    result.namespaceURI === Base.NS.SVG &&\n                    result.localName !== \"svg\"\n                  ) &&\n                  !result.ownerDocument.getElementById(attributeValue)\n                ) {\n                  // Keep original id value so that JavaScript can manipulate it\n                  result.setAttribute(attributeName, attributeValue);\n                  result.setAttribute(\"data-vivliostyle-id\", transformedValue);\n\n                  // Create an anchor element with transformed id, necessary for internal links in output PDF\n                  // (issue #877)\n                  const anchorElem = result.ownerDocument.createElement(\"a\");\n                  anchorElem.setAttribute(attributeName, transformedValue);\n                  anchorElem.setAttribute(Vtree.SPECIAL_ATTR, \"1\");\n                  anchorElem.style.position = \"absolute\";\n                  result.appendChild(anchorElem);\n                } else {\n                  result.setAttribute(attributeName, transformedValue);\n                }\n                this.page.registerElementWithId(result, transformedValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            } else if (\n              attributeName === \"data\" &&\n              custom &&\n              tag === \"object\" &&\n              result.hasAttribute(\"data\")\n            ) {\n              // the data attribute is already set in OPFView.makeObjectView()\n              continue;\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.documentURLTransformer.transformURL(\n                this.resolveURL(attributeValue),\n                this.xmldoc.url,\n              );\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n\n        if (this.nodeContext.inline) {\n          if (!firstTime) {\n            Break.setBoxBreakFlag(result, \"inline-start\");\n            if (Break.isCloneBoxDecorationBreak(result)) {\n              Break.setBoxBreakFlag(result, \"clone\");\n            }\n          }\n        } else {\n          if (!firstTime) {\n            Break.setBoxBreakFlag(result, \"block-start\");\n            if (Break.isCloneBoxDecorationBreak(result)) {\n              Break.setBoxBreakFlag(result, \"clone\");\n\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              Break.setMarginDiscardFlag(result, \"block-start\");\n            }\n          } else {\n            const marginBreak = computedStyle[\"margin-break\"];\n\n            // Detect forced or unforced break at this point\n            // to handle margin-break properly.\n            // Note: Do not use `atUnforcedBreak` which may be inaccurate.\n            const breakType = this.getBreakTypeAt(this.nodeContext);\n            const anyBreak = breakType !== null;\n            const unforcedBreak = breakType === \"auto\";\n            if (\n              (marginBreak === Css.ident.discard && anyBreak) ||\n              (marginBreak !== Css.ident.keep && unforcedBreak)\n            ) {\n              Break.setMarginDiscardFlag(result, \"block-start\");\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Check if the current element is inside multi-column element\n   * that is not root or body element in the source tree.\n   *\n   * Note: vivliostyle handles multi-column on the root and body element on its own,\n   * but leaves it to the browser to handle other multi-column.\n   * This check is for such non-root/body multi-column.\n   */\n  private isInsideNonRootMultiColumn(): boolean {\n    for (\n      let node = this.nodeContext.parent?.viewNode;\n      node;\n      node = node.parentNode\n    ) {\n      const style = node.nodeType === 1 ? (node as HTMLElement).style : null;\n      if (!style) {\n        break;\n      }\n      if (\n        !isNaN(parseFloat(style.columnCount)) ||\n        !isNaN(parseFloat(style.columnWidth))\n      ) {\n        return true;\n      }\n      if (style.position === \"absolute\") {\n        break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced or unforced break\n   * (Fix for Issue #690)\n   *\n   * @param nodeContext\n   * @returns forced break type, or \"auto\" for unforced break, or null for not break\n   */\n  private getBreakTypeAt(nodeContext: Vtree.NodeContext): string | null {\n    for (let nc = nodeContext; nc && !nc.after; nc = nc.parent) {\n      if (Break.isForcedBreakValue(nc.breakBefore)) {\n        return nc.breakBefore; // forced break\n      }\n      if (nc.fragmentIndex === 1 && !nc.parent) {\n        if (nc.sourceNode === nc.sourceNode.ownerDocument.documentElement) {\n          // beginning of document\n          return \"page\";\n        } else {\n          // page floats, etc.\n          return null;\n        }\n      }\n      const parentViewNode = nc.parent?.viewNode as Element;\n      if (parentViewNode) {\n        const style = this.viewport.window.getComputedStyle(parentViewNode);\n        const paddingBlockStart = parseFloat(style.paddingBlockStart);\n        const borderBlockStartWidth = parseFloat(style.borderBlockStartWidth);\n        if (paddingBlockStart || borderBlockStartWidth) {\n          // parent's viewNode has block-start padding or border\n          return null;\n        }\n        let node = parentViewNode?.firstChild;\n        while (\n          node &&\n          (node.nodeType === 1\n            ? LayoutHelper.isSpecial(node as Element)\n            : Vtree.canIgnore(node, nc.parent.whitespace))\n        ) {\n          node = node.nextSibling;\n        }\n        if (node && node !== nc.viewNode) {\n          // parent's viewNode already has other content\n          return null;\n        }\n      }\n    }\n\n    const startBreakType = (\n      this.context as Exprs.Context & {\n        currentLayoutPosition: Vtree.LayoutPosition;\n      }\n    )?.currentLayoutPosition?.flowPositions[this.flowName]?.startBreakType;\n\n    if (Break.isForcedBreakValue(startBreakType)) {\n      return startBreakType; // forced break\n    } else {\n      return \"auto\"; // unforced break\n    }\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle: { [key: string]: Css.Val } = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (\n        repeatOnBreak === Css.ident.auto ||\n        Css.isDefaultingValue(repeatOnBreak)\n      ) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? (this.nodeContext.parent.viewNode as Element)\n          : this.viewRoot;\n        if (parent) {\n          if (\n            this.nodeContext.inline &&\n            // ignore whitespace text node\n            !(this.viewNode.nodeType === 3 && Vtree.canIgnore(this.viewNode)) &&\n            !parent.hasChildNodes() &&\n            Break.getBoxBreakFlags(parent).includes(\"block-start\")\n          ) {\n            Break.setBoxBreakFlag(parent, \"text-start\");\n          }\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /** @override */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    const propList = Object.keys(computedStyle);\n    propList.sort(Css.processingOrderFn);\n    let fontSize: Css.Val;\n    let lineHeight: Css.Val;\n\n    for (const propName of propList) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || (value === Css.empty && !Css.isCustomPropName(propName))) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value instanceof Css.Numeric &&\n        Exprs.needUnitConversion(value.unit)\n      ) {\n        if (value.unit === \"lh\") {\n          // for browsers not supporting \"lh\" unit\n          value = new Css.Numeric(\n            value.num *\n              this.getLineHeightUnitSize(propName, fontSize, lineHeight),\n            \"px\",\n          );\n        } else {\n          // font-size for the root element is already converted to px\n          value = Css.convertNumericToPx(value, this.context);\n        }\n      }\n\n      if (propName === \"font-size\") {\n        fontSize = value;\n      } else if (propName === \"line-height\") {\n        lineHeight = value;\n      }\n\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      if (\n        isRoot &&\n        this.page.pageAreaElement &&\n        CssCascade.isInherited(propName)\n      ) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.page.pageAreaElement.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Get \"lh\" unit size in px\n   */\n  private getLineHeightUnitSize(\n    propName: string,\n    fontSize: Css.Val,\n    lineHeight: Css.Val,\n  ): number {\n    // Note: \"lh\" unit is inaccurate for line-height:normal, not using font metrics.\n    const defaultLineHeightNum =\n      Exprs.defaultUnitSizes[\"lh\"] / Exprs.defaultUnitSizes[\"em\"];\n\n    const parentStyle =\n      this.nodeContext.parent?.viewNode?.nodeType === 1\n        ? this.viewport.window.getComputedStyle(\n            this.nodeContext.parent.viewNode as Element,\n          )\n        : null;\n\n    const parentFontSize = parentStyle\n      ? parseFloat(parentStyle.fontSize)\n      : this.context.fontSize();\n\n    const parentLineHeight = parentStyle\n      ? parentStyle.lineHeight === \"normal\"\n        ? parentFontSize * defaultLineHeightNum\n        : parseFloat(parentStyle.lineHeight)\n      : this.context.rootLineHeight;\n\n    if (propName === \"line-height\" || propName === \"font-size\") {\n      return parentLineHeight;\n    }\n\n    let lineHeightNum: number | null = null;\n\n    if (lineHeight) {\n      if (\n        lineHeight instanceof Css.Num ||\n        (lineHeight instanceof Css.Numeric &&\n          (lineHeight.unit === \"em\" || lineHeight.unit === \"%\"))\n      ) {\n        lineHeightNum =\n          lineHeight instanceof Css.Numeric && lineHeight.unit === \"%\"\n            ? lineHeight.num / 100\n            : lineHeight.num;\n      } else if (lineHeight instanceof Css.Numeric) {\n        return (\n          lineHeight.num * this.context.queryUnitSize(lineHeight.unit, false)\n        );\n      }\n    } else {\n      for (\n        let viewNode = this.nodeContext.parent?.viewNode;\n        ;\n        viewNode = viewNode.parentNode\n      ) {\n        if (!viewNode || viewNode.nodeType !== 1) {\n          lineHeightNum = defaultLineHeightNum;\n          break;\n        }\n        const ancestorLH = (viewNode as HTMLElement)?.style?.lineHeight;\n        if (ancestorLH) {\n          if (/^[0-9.]+$/.test(ancestorLH)) {\n            lineHeightNum = parseFloat(ancestorLH);\n          }\n          if (ancestorLH === \"normal\") {\n            lineHeightNum = defaultLineHeightNum;\n          }\n          break;\n        }\n      }\n    }\n\n    if (lineHeightNum !== null) {\n      if (fontSize instanceof Css.Numeric) {\n        return (\n          lineHeightNum *\n          CssCascade.convertFontSizeToPx(fontSize, parentFontSize, this.context)\n            .num\n        );\n      } else {\n        return lineHeightNum * parentFontSize;\n      }\n    }\n    return parentLineHeight;\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem &&\n        parseFloat(this.viewport.window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if ((target as HTMLElement).style?.[\"zoom\"] === undefined) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /** @override */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle: { [key: string]: Css.Val } = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /** @override */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /** @override */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle: { [key: string]: Css.Val } = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle: { [key: string]: Css.Val } = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /** @override */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    const nodeContext1 =\n      !nodeContext.inline && nodeContext.after\n        ? nodeContext.parent\n        : nodeContext;\n    // Fix for problem with math (Issue #1038)\n    let isBeforeBlock = false;\n    if (\n      nodeContext.inline &&\n      nodeContext.after &&\n      nodeContext.sourceNode.nextSibling?.nodeType === 1\n    ) {\n      const nextElem = nodeContext.sourceNode.nextSibling as Element;\n      const display = CssCascade.getProp(\n        this.styler.getStyle(nextElem, false),\n        \"display\",\n      )?.value.toString();\n      isBeforeBlock =\n        (display && !Display.isInlineLevel(display)) ||\n        (nextElem.getAttribute(\"data-math-typeset\") === \"true\" &&\n          /^\\s*(\\$\\$|\\\\\\[)/.test(nextElem.textContent));\n    }\n\n    let blockNestCount = 0;\n    for (let nc = nodeContext1; nc; nc = nc.parent) {\n      if (nc.viewNode?.nodeType !== 1) continue;\n\n      const elem = nc.viewNode as HTMLElement;\n      if (!elem.style) continue;\n\n      if (nc.inline) {\n        Break.setBoxBreakFlag(elem, \"inline-end\");\n        if (Break.isCloneBoxDecorationBreak(elem)) {\n          const extentBefore = nc.vertical\n            ? elem.offsetWidth\n            : elem.offsetHeight;\n          Break.setBoxBreakFlag(elem, \"clone\");\n          const extentAfter = nc.vertical\n            ? elem.offsetWidth\n            : elem.offsetHeight;\n          if (extentAfter > extentBefore) {\n            // Workaround for Chrome box-decoration-break:clone problem\n            this.fixClonedBoxDecorationOverflow(elem);\n          }\n        }\n      } else {\n        Break.setBoxBreakFlag(elem, \"block-end\");\n        if (!blockNestCount++) {\n          if (nc !== nodeContext1) {\n            const { textAlign } = this.viewport.window.getComputedStyle(elem);\n            if (textAlign === \"justify\" && !isBeforeBlock) {\n              // Workaround for the problem that text-align-last:justify is\n              // not only effective at the last line of the block but also\n              // effective at lines just before child block-level or `<br>`\n              // elements.\n              const elem2 = this.createChildAnonymousBlockIfNeeded(elem);\n              if (elem2) {\n                if (elem2 !== elem) {\n                  // child anonymous block created\n                  Break.setBoxBreakFlags(elem2, [\n                    \"block-start\",\n                    \"text-start\",\n                    \"block-end\",\n                    \"text-end\",\n                    \"justify\",\n                  ]);\n                } else {\n                  Break.setBoxBreakFlag(elem, \"text-end\");\n                  Break.setBoxBreakFlag(elem, \"justify\");\n                }\n              } else {\n                // text-align-last:justify is not necessary (`<br>` at very last)\n                // or not appropriate (e.g. the last `<br>` is in middle of nested inline)\n                Break.setBoxBreakFlag(elem, \"text-end\");\n              }\n            } else {\n              Break.setBoxBreakFlag(elem, \"text-end\");\n            }\n          }\n        }\n        if (Break.isCloneBoxDecorationBreak(elem)) {\n          Break.setBoxBreakFlag(elem, \"clone\");\n          Break.setMarginDiscardFlag(elem, \"block-end\");\n        }\n      }\n    }\n  }\n\n  private fixClonedBoxDecorationOverflow(elem: HTMLElement): void {\n    const computedStyle = this.viewport.window.getComputedStyle(elem);\n    const paddingInlineEnd = parseFloat(computedStyle.paddingInlineEnd);\n    const borderInlineEndWidth = parseFloat(computedStyle.borderInlineEndWidth);\n    const adjust = -(paddingInlineEnd + borderInlineEndWidth);\n    if (!isNaN(adjust)) {\n      elem.style.marginInlineEnd = `${adjust}px`;\n    }\n  }\n\n  private createChildAnonymousBlockIfNeeded(\n    elem: HTMLElement,\n  ): HTMLElement | null {\n    const checkForcedLineBreakElem = (elem1: Element): boolean | null => {\n      const { display, position, float } =\n        this.viewport.window.getComputedStyle(elem1);\n      if (elem1.localName === \"ruby\") {\n        return false;\n      }\n      if (elem1.localName === \"br\") {\n        return true;\n      }\n      if (\n        (display === \"inline\" || display === \"contents\") &&\n        elem1.hasChildNodes()\n      ) {\n        const lastChild = elem1.lastElementChild;\n        if (\n          lastChild &&\n          (!lastChild.nextSibling ||\n            (lastChild.nextSibling === elem1.lastChild &&\n              Vtree.canIgnore(lastChild.nextSibling)))\n        ) {\n          const found = checkForcedLineBreakElem(lastChild);\n          if (found || found === null) {\n            return found;\n          }\n        }\n        for (\n          let child = lastChild?.previousElementSibling;\n          child;\n          child = child.previousElementSibling\n        ) {\n          const found = checkForcedLineBreakElem(child);\n          if (found || found === null) {\n            // forced line break is found at middle of nested inline\n            return null;\n          }\n        }\n        return false;\n      }\n      if (\n        display === \"none\" ||\n        position === \"absolute\" ||\n        position === \"fixed\" ||\n        (float && float !== \"none\") ||\n        elem1.hasAttribute(Vtree.SPECIAL_ATTR)\n      ) {\n        const prevElem = elem1.previousElementSibling;\n        if (\n          prevElem &&\n          (prevElem.nextSibling === elem1 ||\n            (prevElem.nextSibling === elem1.previousSibling &&\n              Vtree.canIgnore(prevElem.nextSibling)))\n        ) {\n          return checkForcedLineBreakElem(prevElem);\n        }\n        return false;\n      }\n      if (!display || Display.isInlineLevel(display)) {\n        return false;\n      }\n      return true;\n    };\n\n    let forcedBreakElem: Element | null = null;\n    for (\n      let child = elem.lastElementChild;\n      child;\n      child = child.previousElementSibling\n    ) {\n      const found = checkForcedLineBreakElem(child);\n      if (found) {\n        forcedBreakElem = child;\n        break;\n      }\n      if (found === null) {\n        // forced line break is found at middle of nested inline\n        return null;\n      }\n    }\n\n    if (!forcedBreakElem) {\n      // forced line break is not found\n      return elem;\n    }\n\n    if (\n      forcedBreakElem === elem.lastElementChild &&\n      (!forcedBreakElem.nextSibling ||\n        (forcedBreakElem.nextSibling === elem.lastChild &&\n          Vtree.canIgnore(forcedBreakElem.nextSibling)))\n    ) {\n      // forced line break is found at very last\n      return null;\n    }\n\n    const anonymousBlock = elem.ownerDocument.createElement(\"span\");\n    anonymousBlock.className = \"viv-anonymous-block\";\n\n    for (\n      let node = forcedBreakElem.nextSibling, nextNode = null;\n      node;\n      node = nextNode\n    ) {\n      nextNode = node.nextSibling;\n      anonymousBlock.appendChild(node);\n    }\n    elem.appendChild(anonymousBlock);\n    return anonymousBlock;\n  }\n\n  /** @override */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /** @override */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  \"margin-break\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n  scaleRatio: number = 1;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n    if (viewport.pixelRatio > 0 && CSS.supports(\"zoom\", \"8\")) {\n      this.scaleRatio = viewport.pixelRatio / viewport.window.devicePixelRatio;\n    }\n  }\n\n  private scaleRect(rect: Vtree.ClientRect): Vtree.ClientRect {\n    return {\n      left: rect.left * this.scaleRatio,\n      top: rect.top * this.scaleRatio,\n      right: rect.right * this.scaleRatio,\n      bottom: rect.bottom * this.scaleRatio,\n      width: rect.width * this.scaleRatio,\n      height: rect.height * this.scaleRatio,\n    } as Vtree.ClientRect;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /** @override */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range.getClientRects();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.scaleRect(this.subtractOffsets(rect, layoutBoxRect)),\n    );\n  }\n\n  /** @override */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    if (\n      rect.left === 0 &&\n      rect.top === 0 &&\n      rect.right === 0 &&\n      rect.bottom === 0\n    ) {\n      // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n      // (Fix for issue #802)\n      return rect;\n    }\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.scaleRect(this.subtractOffsets(rect, layoutBoxRect));\n  }\n\n  /** @override */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    public readonly pixelRatio: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n\n    if (pixelRatio > 0 && CSS.supports(\"zoom\", \"8\")) {\n      // Emulate high pixel ratio using zoom and transform:scale().\n      // Workaround for issue #419 (minimum border width too thick)\n      // and #1076 (layout depends on device pixel ratio).\n      //\n      // CSS variables --viv-outputPixelRatio, --viv-devicePixelRatio,\n      // and --viv-outputScale are used in zoom and transform property values\n      // to emulate high pixel ratio output.\n      // (see VivliostyleViewportCss in assets.ts)\n      Base.setCSSProperty(this.root, \"--viv-outputPixelRatio\", `${pixelRatio}`);\n      Base.setCSSProperty(\n        this.root,\n        \"--viv-devicePixelRatio\",\n        `${window.devicePixelRatio}`,\n      );\n    }\n\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    this.width = opt_width || this.root.offsetWidth || window.innerWidth;\n    this.height = opt_height || this.root.offsetHeight || window.innerHeight;\n\n    // Use the fallbackPageSize if window size is 0 or browser is in headless mode.\n    const fallbackPageSize = {\n      // compromise between A4 (210mm 297mm) and letter (8.5in 11in)\n      width: 794, // 210mm (8.27in)\n      height: 1056, // 279.4mm (11in)\n    };\n    const isHeadlessBrowser =\n      (!window.outerWidth && !window.outerHeight) ||\n      /Headless/.test(navigator.userAgent) ||\n      (navigator.webdriver &&\n        window.innerWidth === 800 &&\n        window.innerHeight === 600);\n\n    if (!this.width || (!opt_width && isHeadlessBrowser)) {\n      this.width = fallbackPageSize.width;\n    }\n    if (!this.height || (!opt_height && isHeadlessBrowser)) {\n      this.height = fallbackPageSize.height;\n    }\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.root, \"--viv-outputScale\", `${scale}`);\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss, UserAgentTocCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"] as CssCascade.CascadeValue;\n      const height = viewportProps[\"height\"] as CssCascade.CascadeValue;\n      const textZoom = viewportProps[\"text-zoom\"] as CssCascade.CascadeValue;\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).then(() => {\n      // JavaScript in HTML documents support\n      Scripts.loadScriptsInHead(\n        this.xmldoc.document,\n        this.viewport.window,\n        this.styler,\n      ).thenFinish(frame);\n    });\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    if (!pageProps[\"\"]) {\n      pageProps[\"\"] = {};\n    }\n    Object.keys(pageProps).forEach((selector) => {\n      let pageStyle = pageProps[selector] as {\n        [key: string]: CssCascade.CascadeValue;\n      };\n\n      // Substitute var() in @page\n      this.styler.cascade.applyVarFilter([pageStyle], this.styler, null);\n\n      // Calculate calc()\n      this.styler.cascade.applyCalcFilter(pageStyle, this.styler.context);\n\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageStyle),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /** @override */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /** @override */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /** @override */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /** @override */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): void {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  override evalSupportsTest(\n    name: string,\n    value: string,\n    isFunc: boolean,\n  ): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        return this.evalSupportsSelector(value);\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  /**\n   * @param selectorText\n   * @returns true if selectorText is supported selector\n   */\n  private evalSupportsSelector(selectorText: string): boolean {\n    const sph = new StyleParserHandler(null);\n    const tokenizer = new CssTokenizer.Tokenizer(selectorText + \"{}\", sph);\n    const parser = new CssParser.Parser(\n      CssParser.actionsBase,\n      tokenizer,\n      sph,\n      \"\",\n    );\n    if (\n      parser.runParser(Number.POSITIVE_INFINITY, false, false, false, false)\n    ) {\n      return !sph.cascadeParserHandler.invalid;\n    }\n    return false;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string | null): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = flowPos.startBreakType;\n          flowPos.startBreakType = Break.breakValueToStartBreakType(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startBreakType);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats. (Issue #681)\n    const checkPageFloatForLaterPage = (\n      float: PageFloats.PageFloat,\n    ): boolean => {\n      // FIXME: This check is incomplete when float-reference is other than \"page\".\n      // so give up for now to prevent another problem (Issue #962).\n      if (\n        !this.pageAreaWidth &&\n        !this.pageAreaHeight &&\n        float.floatReference !== PageFloats.FloatReference.PAGE\n      ) {\n        return false;\n      }\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      const deferredFloatOffset = this.xmldoc.getNodeOffset(\n        float.nodePosition.steps[0].node,\n        0,\n        false,\n      );\n      return (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      );\n    };\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n\n        // Prevent deferred page floats from appearing in the preceding pages\n        // (Issue #681)\n        if (checkPageFloatForLaterPage(float)) {\n          loopFrame.breakLoop();\n          return;\n        }\n\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startBreakType)) {\n      return Task.newResult(true);\n    }\n\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    // forced break or \"auto\"\n                    flowPosition.startBreakType =\n                      Break.breakValueToStartBreakType(column.pageBreakType);\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.rtl = layoutContainer.rtl;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              (layoutContainer.rtl\n                ? columnCount - currentColumnIndex - 1\n                : currentColumnIndex) *\n                (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            const outerWidth = parseFloat(\n              (boxContainer as HTMLElement).style.width,\n            );\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft + outerWidth - layoutContainer.width,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              (layoutContainer.rtl\n                ? columnCount - currentColumnIndex - 1\n                : currentColumnIndex) *\n                (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.rtl = boxInstance.rtl;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n\n    if (\n      boxInstance instanceof CssPage.PageRuleMasterInstance &&\n      (layoutContainer.width <= 0 || layoutContainer.height <= 0)\n    ) {\n      Logging.logger.warn(\"Negative or zero page area size\");\n    }\n\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n        if (innerContainerTag == \"span\") {\n          // text-spacing & hanging-punctuation on margin boxes\n          TextPolyfill.processGeneratedContent(\n            innerContainer,\n            boxInstance.getProp(this, \"text-autospace\"),\n            boxInstance.getProp(this, \"text-spacing-trim\"),\n            boxInstance.getProp(this, \"hanging-punctuation\"),\n            this.lang,\n            boxInstance.vertical,\n          );\n        }\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n\n    // Limit number of pages to prevent endless page generation\n    const LIMIT_PAGES = 10000;\n    if (cp.page > LIMIT_PAGES) {\n      throw new Error(`Too many pages generated (over ${LIMIT_PAGES} pages)`);\n    }\n    cp.page++;\n\n    const startSide = cp.startSideOfFlow(\"body\");\n    cp.isBlankPage =\n      Break.isSpreadBreakValue(startSide) && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    if (page.pageType == null) {\n      page.pageType =\n        (page.isBlankPage\n          ? this.styler.cascade.previousPageType\n          : this.styler.cascade.currentPageType) ?? \"\";\n    }\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(page.pageType);\n\n    // Substitute var()\n    this.styler.cascade.applyVarFilter([cascadedPageStyle], this.styler, null);\n\n    // Calculate calc()\n    this.styler.cascade.applyCalcFilter(cascadedPageStyle, this.styler.context);\n\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        (pageMaster.pageBox.specified[\"width\"] as CssCascade.CascadeValue)\n          .value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        (pageMaster.pageBox.specified[\"height\"] as CssCascade.CascadeValue)\n          .value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  override startPageTemplateRule(): void {}\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  override startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  override startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  override startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  override startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.triggerSingleDocumentPreprocessing = true;\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        sources.push({\n          url: Base.resolveURL(\"user-agent-page.css\", Base.resourceBaseURL),\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (isTocBox) {\n          sources.push({\n            url: Base.resolveURL(\"user-agent-toc.css\", Base.resourceBaseURL),\n            text: UserAgentTocCss,\n            flavor: CssParser.StylesheetFlavor.USER_AGENT,\n            classes: null,\n            media: null,\n          });\n        } else {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const href = elem.getAttribute(\"href\");\n                const rel = elem.getAttribute(\"rel\")?.split(/\\s+/);\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  href &&\n                  rel?.includes(\"stylesheet\") &&\n                  (!rel.includes(\"alternate\") || classes)\n                ) {\n                  const src = Base.resolveURL(href, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: this.processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  processViewportMeta(meta: Element): string {\n    return \"\";\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /** @override */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-container\":\n            computedStyle[\"padding\"] = Css.numericZero;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        Vtree.canIgnore(firstChild)\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = Base.stripFragment(this.url) + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        0,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(\n              manifestUrl,\n              true,\n              `Failed to fetch Publication Manifest ${manifestUrl}`,\n            ).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  override load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n\n  override processViewportMeta(meta: Element): string {\n    let content = meta.getAttribute(\"content\");\n    if (!content) {\n      return \"\";\n    }\n    const vals = {};\n    let r: RegExpMatchArray;\n    while (\n      (r = content.match(\n        /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n      )) != null\n    ) {\n      content = content.substr(r[0].length);\n      vals[r[1]] = r[2];\n    }\n    const width = vals[\"width\"] - 0;\n    const height = vals[\"height\"] - 0;\n    if (width && height) {\n      const prePaginated = !!Object.values(this.primaryOPFByEPubURL).find(\n        (opf) => opf.prePaginated,\n      );\n      return (\n        `@-epubx-viewport{width:${width}px;height:${height}px;}` +\n        (prePaginated\n          ? `@page{size:${width}px ${height}px;margin:0;}`\n          : `@page{margin:0;}`)\n      );\n    }\n    return \"\";\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /** @override */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /** @override */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.spine.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /** @override */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      manifestObj[\"name\"] || manifestObj[\"metadata\"]?.[\"title\"] || doc?.title;\n    if (title) {\n      this.metadata[metaTerms.title] = (\n        Array.isArray(title) ? title : [title]\n      ).map((item) => ({ v: item.value ?? item }));\n    }\n    const author =\n      manifestObj[\"author\"] ||\n      manifestObj[\"creator\"] ||\n      manifestObj[\"metadata\"]?.[\"author\"] ||\n      Array.from(\n        doc?.querySelectorAll(\"meta[name='author'], meta[name='DC.Creator']\") ??\n          [],\n      ).map((meta: HTMLMetaElement) => meta.content);\n    if (author && author.length !== 0) {\n      this.metadata[metaTerms.creator] = (\n        Array.isArray(author) ? author : [author]\n      ).map((item) => ({ v: item.name ?? item }));\n    }\n    const language =\n      manifestObj[\"inLanguage\"] ||\n      manifestObj[\"metadata\"]?.[\"language\"] ||\n      doc?.documentElement.lang ||\n      doc?.documentElement.getAttribute(\"xml:lang\");\n    if (language) {\n      this.metadata[metaTerms.language] = (\n        Array.isArray(language) ? language : [language]\n      ).map((item) => ({ v: item }));\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\" +\n        (CSS.supports(\"selector(:has(*))\")\n          ? \",section:has(>:first-child:is(h1,h2,h3,h4,h5,h6):is(.toc,#toc)) a[href]\"\n          : \"\");\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        if (/\\.(jpe?g|png|gif|pdf|svg|mml)([#?]|$)/.test(href)) {\n          // Avoid link to non-HTML resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n\n    const oldPage = viewItem.pages[pos ? pos.page : 0];\n    let page = this.makePage(viewItem, pos);\n    if (oldPage) {\n      // If the old page exists, keep the pageType (named page).\n      // This is necessary for named page with target-counter() to work.\n      // (fix for issue #1136)\n      page.pageType = oldPage.pageType;\n    }\n\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            page.container.setAttribute(\n              \"data-vivliostyle-page-index\",\n              pageIndex,\n            );\n            page.container.setAttribute(\n              \"data-vivliostyle-spine-index\",\n              page.spineIndex,\n            );\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult({ left: null, right: null });\n    }\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getSpread\");\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (\n      page.offset === 0 &&\n      !(viewItem.instance.blankPageAtStart && viewItem.pages.length === 0)\n    ) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"object\");\n      if (data) {\n        result.setAttribute(\"data\", data);\n      }\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /** @override */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.pixelRatio,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport {\n  VivliostylePolyfillCss,\n  VivliostyleViewportCss,\n  VivliostyleViewportScreenCss,\n} from \"./assets\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  resized: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n  pixelRatio: number;\n  pixelRatioLimit: number;\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    const document = viewportElement.ownerDocument;\n    const findOrCreateStyleElement = (\n      id: string,\n      cssText?: string,\n    ): HTMLElement => {\n      let styleElement = document.getElementById(id);\n      if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        styleElement.id = id;\n        if (cssText) {\n          styleElement.textContent = cssText;\n        }\n        document.head.appendChild(styleElement);\n      }\n      return styleElement;\n    };\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-screen-css\",\n      VivliostyleViewportScreenCss,\n    );\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-css\",\n      VivliostyleViewportCss,\n    );\n    findOrCreateStyleElement(\n      \"vivliostyle-polyfill-css\",\n      VivliostylePolyfillCss,\n    );\n\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.resized = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = findOrCreateStyleElement(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.resized = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n\n    // Pixel ratio emulation on PDF output (PR #1079) does not work with\n    // non-Chromium browsers.\n    this.pixelRatioLimit = /Chrome/.test(navigator.userAgent)\n      ? 16 // max pixelRatio value on Chromium browsers\n      : 0; // disable pixelRatio emulation on non-Chromium browsers\n    this.pixelRatio = Math.min(8, this.pixelRatioLimit);\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    // JavaScript in HTML documents support\n    if (\n      typeof command[\"allowScripts\"] == \"boolean\" &&\n      command[\"allowScripts\"] !== Scripts.allowScripts\n    ) {\n      Scripts.setAllowScripts(command[\"allowScripts\"]);\n      this.needResize = true;\n    }\n    // output pixel ratio emulation\n    if (typeof command[\"pixelRatio\"] == \"number\") {\n      const pixelRatio = Math.min(command[\"pixelRatio\"], this.pixelRatioLimit);\n      if (pixelRatio !== this.pixelRatio) {\n        this.pixelRatio = pixelRatio;\n        this.needResize = true;\n      }\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        this.pixelRatio,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        this.pixelRatio,\n        viewportElement,\n      );\n    }\n  }\n\n  private resolveSpreadView(\n    viewport: Vgen.Viewport,\n    pageSize: { width: number; height: number } | null,\n  ): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        return (\n          (viewport.width - this.pref.pageBorder) / viewport.height >=\n            (pageSize ? (pageSize.width * 2) / pageSize.height : 1.45) &&\n          (!!pageSize || viewport.width > 800)\n        );\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const hasNoAutoSizedPages =\n      this.opfView?.hasPages() && !this.opfView.hasAutoSizedPages();\n    const spreadView = this.resolveSpreadView(\n      viewport,\n      this.resized && hasNoAutoSizedPages ? this.pageSizes[0] : null,\n    );\n    this.resized = false;\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n\n    // check if window.devicePixelRatio is changed\n    const scaleRatioChanged =\n      this.pixelRatio &&\n      this.opfView &&\n      this.pixelRatio / this.window.devicePixelRatio !==\n        this.opfView.clientLayout.scaleRatio;\n\n    if (\n      scaleRatioChanged ||\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (hasNoAutoSizedPages) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n    if (\n      pageIndex === 0 &&\n      this.pageViewMode === PageViewMode.AUTO_SPREAD &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.updateSpreadView(this.resolveSpreadView(this.viewport, pageSize));\n    }\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    // In this implementation, it generates one page rule with the largest\n    // page size both in width and height in the multiple page sizes.\n    // (Resolve issue #751)\n    if (\n      this.pageRuleStyleElement &&\n      (!this.pageSheetSizeAlreadySet ||\n        this.pageSizes[pageIndex].width !==\n          this.pageSizes[pageIndex - 1]?.width ||\n        this.pageSizes[pageIndex].height !==\n          this.pageSizes[pageIndex - 1]?.height)\n    ) {\n      const widthMax = Math.max(...this.pageSizes.map((p) => p.width));\n      const heightMax = Math.max(...this.pageSizes.map((p) => p.height));\n\n      function convertSize(px: number): number {\n        const pt = px * 0.75;\n        // Workaround for Chromium's rounded page size problem.\n        // (Fix for issue #934 and #936)\n        return Math.ceil(pt);\n      }\n      const widthPt = convertSize(widthMax);\n      const heightPt = convertSize(heightMax);\n\n      // Negative margin setting is necessary to prevent unexpected page breaking.\n      // Note that the high pixel ratio emulation, the pixelRatio setting, uses the CSS zoom property\n      // that enlarge the page content size, and Chromium splits such large pages unless this\n      // negative margin is specified.\n      const rightPt = widthPt * ((this.pixelRatio || 1) - 1) + 2;\n      const bottomPt = heightPt * ((this.pixelRatio || 1) - 1) + 2; // \"+ 2\" is for issue #947\n      const styleText = `@page {size: ${widthPt}pt ${heightPt}pt; margin: 0 ${-rightPt}pt ${-bottomPt}pt 0;}`;\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.pageSizes = [];\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          if (!spread.left && !spread.right) {\n            return Task.newResult(null);\n          }\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          // JavaScript in HTML documents support\n                          if (\n                            Scripts.allowScripts &&\n                            Scripts.hasScripts(this.window)\n                          ) {\n                            Scripts.loadScriptsAtEnd(this.window).then(() => {\n                              if (this.renderAllPages) {\n                                this.setReadyState(\n                                  Constants.ReadyState.COMPLETE,\n                                );\n                              }\n                              this.callback({ t: \"loaded\" });\n                              frame.finish(p);\n                            });\n                          } else {\n                            if (this.renderAllPages) {\n                              this.setReadyState(Constants.ReadyState.COMPLETE);\n                            }\n                            this.callback({ t: \"loaded\" });\n                            frame.finish(p);\n                          }\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else if (typeof command[\"position\"]?.spineIndex == \"number\") {\n      const position = command[\"position\"] as Epub.Position;\n      method = () => this.opfView.findPage(position, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer\n                .showCurrent(viewer.currentPage, !this.renderAllPages)\n                .then(() => {\n                  loopFrame.continueLoop();\n                });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n * - allowScripts: Allow JavaScript in documents. default: true\n * - pixelRatio: Set output pixel ratio. Enables very thin border width and\n *   improves layout precision, emulating high pixel ratio.\n *   default: 8. Set 0 to disable pixel ratio emulation.\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n  allowScripts?: boolean;\n  pixelRatio?: number;\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n    allowScripts: true,\n    pixelRatio: 8,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * Navigate to the specified position.\n   */\n  navigateToPosition(position: {\n    spineIndex: number;\n    pageIndex?: number;\n    offsetInItem?: number;\n  }) {\n    this.adaptViewer_.sendCommand({\n      a: \"moveTo\",\n      position: {\n        spineIndex: position.spineIndex,\n        pageIndex: position.pageIndex ?? -1,\n        offsetInItem: position.offsetInItem ?? -1,\n      },\n    });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer({\n        viewportElement: this.iframeWin.document.body\n          .firstElementChild as HTMLElement,\n        window: this.iframeWin,\n        debug: true,\n      });\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n"],"names":["PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","str","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","Array","from","e","shift","error","messages","stack","concat","length","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","_this$opt_console","_this$opt_console2","_console","debug","log","console","apply","_proto","consoleInfo","_console2","info","consoleWarn","_this$opt_console5","_this$opt_console6","warn","consoleError","_this$opt_console7","_this$opt_console8","_console4","triggerListeners","level","forEach","listener","addListener","push","arguments","buildMessageAndStackTrace","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","atFirst","hooksForName","unshift","Logging","removeHook","index","indexOf","splice","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","prototype","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","i","t","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","emptyObj","stringToJSON","JSON","parse","stripFragment","url","match","r","location","href","setBaseURL","baseURL","NS","setResourceBaseURL","resourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","stripFragmentAndQuery","lastIndexOf","urlOption","j","replace","convertSpecialURL","exec","asString","v","toString","PriorityQueue","queue","add","item","Math","floor","parent","parentIndex","compare","peek","remove","result","curr","pop","size","childIndex","knownPrefixes","checkIfPropertySupported","prefix","prop","supports","getPrefixedPropertyNames","prefixed","propNameMap","_step","_iterator","done","elem","elemStyle","style","startsWith","setProperty","prefixedPropertyNames","_step2","_iterator2","_createForOfIteratorHelperLoose","opt_value","getPropertyValue","propertyNames","err","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","list","append","clear","_proto2","join","StringBuffer","escapeChar","charCodeAt","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeCharToHex","escapeRegExp","binarySearch","high","good","h","m","b","indexArray","arr","key","_step3","_iterator3","k","map","multiIndexArray","_step4","_iterator4","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","includes","removeEventListener","getId","node","nodeType","idtxt","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","appendTo","sb","applyTo","pos","RefStep","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","min","next","nextSibling","after","movedNode","ownerDocument","getElementById","OffsetStep","offset","textBefore","textAfter","_proto3","textLength","textContent","escape","Fragment","steps","fromString","fragstr","decodeURIComponent","charAt","parseInt","Base","navigate","doc","documentElement","ref","slice","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","undefined","defaultPreferencesInstance","vivliostyle","print","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","Base.escapeCSSIdent","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","ceil","round","sqrt","max","x","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","lh","rlh","dppx","dpi","dpcm","CSS","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","isRelativeRootFontSize","rootLineHeight","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","isViewportRelativeLengthUnit","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","Const","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","Special","depend","isMediaName","_Val","Prefix","_this","_inheritsLoose","getOp","_proto4","evalPrefix","constructor","Infix","lhs","rhs","_this2","_proto5","getPriority","evalInfix","thisPriority","Logical","_Infix","Comparison","Additive","_Infix3","Multiplicative","_Prefix","Not","NotMedia","_Not","Negate","_Prefix2","_proto12","_Logical","And","_proto13","AndMedia","_And","Or","_Or","Comma","OrMedia","_Or2","_Comparison","Lt","Le","_Comparison2","Gt","_Comparison3","Ge","_Comparison4","_proto21","Eq","_Comparison5","_proto22","Ne","_Comparison6","_proto23","Add","_Additive","_proto24","Subtract","_Additive2","_proto25","Multiply","_Multiplicative","Divide","Modulo","_Val3","Numeric","num","_unit$toLowerCase","_this3","_proto29","Named","_this4","_Val4","_proto30","MediaName","_this5","_proto31","_this6","_proto32","Call","_Val7","_this7","appendValArray","_proto33","expandedParams","expanded","expandValArray","_Val8","Cond","cond","ifTrue","ifFalse","_this8","_proto34","_Val9","_this9","_proto35","MediaTest","_Val10","_this10","SupportsTest","_Val11","_this11","_proto37","Param","_Val12","_this12","_proto38","v1","v2","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitHexColor","color","visitURL","visitURange","urange","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","_Visitor","before","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","_createClass","get","instance","Slash","Exprs.Const","Str","Ident","nameTable","_assertThisInitialized","_proto7","getName","_Val5","Exprs.Multiply","_proto8","_Val6","Num","Int","_Num","HexColor","hex","URL","URange","urangeText","appendList","separator","_values$","_values$i","SpaceList","_proto14","_proto16","Expr","_Val13","_proto17","Exprs","_Val14","AnyToken","_this13","toNumber","convertNumericToPx","absolute","all","always","anywhere","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","clip","crop","cross","column","discard","exclusive","fixed","flex","flow_root","footnote","footer","grid","header","hidden","horizontal_tb","inherit","initial","inline","inline_block","inline_end","inline_start","keep","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","revert","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","unset","vertical_lr","vertical_rl","visible","hundredPercent","fullHeight","numericZero","processingOrder","processingOrderFn","name1","name2","Number","MAX_VALUE","isCustomPropName","Rect","x1","y1","x2","y2","Point","y","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","lowOrHigh","isNaN","addBandIntersections","intersections","w1","intersectY","w2","BandIntersection","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","rotatePoint","normalize","bands","currBand","prevBand","findBand","mid","rect","band","topEdge","bottomEdge","SetVisitor","_Css$Visitor","propSet","Css","IntVisitor","_Css$Visitor2","toInt","def","ShapeVisitor","_Css$Visitor3","collect","coords","getShape","width","height","numbers","coord","GeometryUtil.Point","GeometryUtil.Shape","GeometryUtil.shapeForRect","GeometryUtil.shapeForEllipse","GeometryUtil","toShape","CountersVisitor","_Css$Visitor4","reset","counters","toCounters","UrlTransformVisitor","_Css$FilterVisitor","baseUrl","transformer","Css.URL","transformURL","cloneCounterValues","TargetCounterReference","TokenType","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","substring","getPageCounterVal","format","currentPageCounters","getCounterNumber","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","_countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","Exprs.Native","stringValues","offsets","sort","isBlankPage","pageLastOffset","pageStartOffset","container","querySelectorAll","offsetNext","firstOffset","firstExceptOffset","startOffset","offsetPrev","querySelector","elementAtOffset","elementAtPageStartOffset","firstElementChild","lastOffset","first","start","last","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementMap","incrementCounterName","counterValues","pushPageCounters","popPageCounters","resolvedRefs","pushed","unresolvedRefs","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","document","createElementNS","setAttribute","findIndex","PAGES_COUNTER_ATTR","_node","finishLastPage","viewport","nodes","root","pages","_loop","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCodePoint","escapeParse","Action","Token","precededBySpace","position","EOF","O_PAR","C_PAR","O_BRC","C_BRC","O_BRK","C_BRK","COMMA","SEMICOL","COLON","SLASH","PERCENT","QMARK","PLUS","MINUS","BAR_BAR","AMP_AMP","BANG","DOLLAR","HAT","BAR","TILDE","STAR","GT","LT","EQ","BANG_EQ","DOLLAR_EQ","HAT_EQ","BAR_EQ","TILDE_EQ","STAR_EQ","GT_EQ","LT_EQ","EQ_EQ","COL_COL","CDO","CDC","NUMERIC","NUM","INT","AT","HASH","FUNC","CLASS","makeActions","spec","END","INVALID","actionsNormal","SPACE","STR2","AMP","STR1","DOT","IDENT","BSLASH","actionsIdent","ENDIDNT","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","actionsCheckEq","EQTAIL","actionsColon","actionsBar","actionsAmp","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","NaN","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","tail","token","fillBuffer","nthToken","n","consume","head","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","charCode","STR","parseFloat","URANGE","privateCurrentTask","primaryScheduler","newFrame","task","frame","Frame","state","FrameState","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","currentTime","valueOf","setTimeout","_setTimeout","_x","_x2","delay","clearTimeout","TimerImpl","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","ResultImpl","_proto6","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","opt_waitTarget","LoopBodyFrame","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","Task.newResult","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","SVG","setAttributeNS","XLINK","localName","VivliostyleViewportScreenCss","XMLHttpRequestResponseType","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","UserAgentTocCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","Document","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","Blob","ResourceStore","StylesheetFlavor","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","isUserAgentXml","userAgentXmlUrl","TaskUtil","store","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","mnemonics","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","pushSelectorText","selectorText","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","_ParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_token$toString","SkippingParserHandler","_ParserHandler2","owner","topLevel","depth","SlaveParserHandler","_SkippingParserHandle","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorSelector","OP_MEDIA_AND","ExprContext","LAST","OP_MEDIA_OR","OP_MEDIA_NOT","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_PSEUDOELEM","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM_1","SELECTOR_NEXT","actionsSelectorInFunc","actionsSelectorCont","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_URANGE","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","actionsErrorDecl","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","inStyleDeclaration","MEDIA","extractVals","sep","valStackReduce","parLevel","count","Css.SpaceList","exprError","exprStackReduce","val2","tok","e1","e2","er","Exprs.MediaTest","Exprs.Negate","Exprs.NotMedia","Exprs.Le","Exprs.Cond","readSupportsTest","startPosition","token1","token2","tokenN","commaCount","Exprs.SupportsTest","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","Exprs.Named","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parsingRelationalSelector","selectorStartPosition","pseudoclassType","POSITIVE_INFINITY","Css.Numeric","len","IMPORT","SUPPORTS","Exprs.Numeric","WHEN","supportsTest","ruleName","rulePseudoName","_ParserHandler3","ErrorHandler","parseStylesheetFromText","media","parseMediaQuery","CssTokenizer","_ret","innerFrame","parseStylesheetFromURL","resolvedURL","parseStylesheet","CssTokenizer.Tokenizer","Task.handle","Net","xhr","parseValue","opacity","utilization","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","matchANPlusB","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","getBoxBreakFlags","setBoxBreakFlags","boxBreakFlags","boxBreakFlag","setMarginDiscardFlag","marginDiscardFlag","MarginDiscardFlags","getMarginDiscardFlags","setMarginDiscardFlags","marginDiscardFlags","forcedBreakValues","recto","verso","region","isForcedBreakValue","isSpreadBreakValue","spreadBreakValues","Selectors","RepetitiveElement","Vtree","avoidBreakValues","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","isAvoidBreakValue","breakValueToStartBreakType","breakValue","restoreNewText","changes","reduce","fastdiff","DELETE","coef","current","change","INSERT","diff","EQUAL","Plugin","convertPageBreakAliases","original","LayoutProcessor","isInstanceOfBlockFormattingContext","object","formattingContextType","PageFloats","FloatReference","isInstanceOfAfterIfContinuesLayoutConstraint","flagmentLayoutConstraintType","isInstanceOfRepetitiveElementsOwnerFormattingContext","Table","isInstanceOfTableFormattingContext","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","action","actionFn","_Base$SimpleEventTarg","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","pageType","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","removeAttribute","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","_i","trigger","observers","observer","makeListener","event","SPECIAL_ATTR","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","_nps1$node","_nps2$node","shadowContext","shadowType","ROOTLESS","outerHTML","isSameShadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","nc","resolveIndex","isInsideBFC","getContainingBlockForAbsolute","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startBreakType","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","_thisFlowNames","_i2","flowPos","startSideOfFlow","_this$flowPositions$n","Break","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","_proto9","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","GeometryUtil.Rect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerHeight","outerWidth","ContentPropertyHandler","rootContentValue","visitStrInner","_this$elem$lastChild","createTextNode","appendChild","img","CssParser","nonTrivialContent","cursor","fill","hyphens","marker","orphans","quotes","stroke","widows","polyfilledInheritedProps","getPolyfilledInheritedProps","POLYFILLED_INHERITED_PROPS","props","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","sideMap","extentMap","pattern","_name","extentPattern","_name2","couplingMapVert","buildCouplingMap","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","evaluateCSSToCSS","ConditionalCascadeValue","_CascadeValue","cascadeValues","tv","av","setPropCascadeValue","SPECIALS","isMapName","isPropName","isInherited","getProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","_context$style","_context$style$valida","propListLH","validatorSet","shorthands","propList","propLH","avLH","chainActions","chain","chained","InheritanceVisitor","setPropName","getFontSize","cascval","Exprs.defaultUnitSizes","convertFontSizeToPx","convertFontRelativeLengthToPx","baseFontSize","parentFontSize","CascadeAction","mergeWith","ConditionItemAction","_CascadeAction","conditionItem","pushConditionItem","fresh","CompoundAction","_CascadeAction2","ApplyRuleAction","_CascadeAction3","viewConditionId","currentStyle","ChainedAction","_CascadeAction4","makePrimary","cascade","CheckClassAction","className","_ChainedAction","currentClassNames","insertInTable","CheckIdAction","_ChainedAction2","currentId","currentXmlId","CheckLocalNameAction","_ChainedAction3","currentLocalName","_proto11","tags","CheckNSTagAction","_ChainedAction4","currentNamespace","nsPrefix","nsCount","nstags","_ChainedAction5","CheckTargetEpubTypeAction","epubTypePatt","currentElement","epub","epubType","CheckNamespaceAction","_ChainedAction6","CheckAttributePresentAction","_ChainedAction7","hasAttributeNS","CheckAttributeEqAction","_ChainedAction8","_this14","epubtypes","CheckNamespaceSupportedAction","_ChainedAction9","_this15","supportedNamespaces","_ChainedAction10","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","_ChainedAction11","langRegExp","_this17","IsFirstAction","_ChainedAction12","isFirst","_proto20","IsRootAction","_ChainedAction13","IsNthAction","_ChainedAction14","_this18","Matchers.matchANPlusB","IsNthSiblingAction","_IsNthAction","currentSiblingOrder","IsNthSiblingOfTypeAction","_IsNthAction2","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","_IsNthAction4","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","_proto26","IsEmptyAction","_ChainedAction15","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","_ChainedAction16","_proto28","disabled","IsDisabledAction","_ChainedAction17","IsCheckedAction","_ChainedAction18","selected","checked","CheckConditionAction","_ChainedAction19","_this19","conditions","dependentConditions","CheckAppliedAction","_CascadeAction5","_this20","applied","cloned","_ChainedAction20","MatchesAction","chains","_this21","checkAppliedAction","firstActions","_step5","_iterator5","positive","firstAction","relational","MatchesNoneAction","_MatchesAction","MatchesRelationalAction","_MatchesAction2","selectorTexts","_this22","_step6","_iterator6","selectorWithScope","scopingRoot","parentElement","AbstractConditionItem","decrement","_proto36","DescendantConditionItem","_AbstractConditionIte","ChildConditionItem","_AbstractConditionIte2","AdjacentSiblingConditionItem","_AbstractConditionIte3","_this23","fired","_proto39","FollowingSiblingConditionItem","_AbstractConditionIte4","_this24","_proto40","AfterPseudoelementItem","afterprop","_proto41","processPseudoelementProps","RestoreLangItem","_proto42","QuotesScopeItem","oldQuotes","_proto43","AttrValueFilterVisitor","_Css$FilterVisitor2","_this25","_proto44","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","_Css$FilterVisitor3","counterResolver","_this26","_proto45","maxDepth","quoteDepth","Css.Str","upper","lower","additiveNumbering","entries","additiveFormat","alphabeticNumbering","alphabetStr","alphabet","fromCharCode","expandAlphabet","digit","alphabeticFormat","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseCounter","chineseTradInformal","toUpperCase","visitFuncCounter","_this27","Css.Expr","numval","visitFuncCounters","_this28","Base.StringBuffer","numvals","visitFuncTargetCounter","targetUrlStr","_this29","targetUrl","visitFuncTargetCounters","_this30","visitFuncString","visitFuncContent","_pseudos$pseudoName","_pseudos$pseudoName$c","pseudos","visitFuncLeader","leader","POST_LAYOUT_BLOCK","checkPoints","_step7","leaderElem","pseudoAfter","previous","_column$clientLayout$","getElementComputedStyle","writingMode","marginInlineEnd","leaderStr","RLM","marginInlineStart","setLeaderTextContent","textIndent","innerInit","innerMarginInlineEnd","parseComputedLength","overrun","inner","templeader","_j","setLeader","innerInline","innerAligned","getInset","inset","getComputedInsets","padding","_iterator7","filter","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","Cascade","ParseState","pagetypes","_proto46","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","_proto47","_this31","Matchers","dependentConditionMatchers","conditionId","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","floatVal","float","setMap","set","setVal","_this$currentElement$","_this$currentElement","_this$currentElement$2","_this$currentElement2","DOCUMENT_NODE","_this$currentStyle$co","incrPropValue","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","_step8","_iterator8","Css.CommaList","pseudoprops","content","pushElement","types","currentNamespaceTypeCounts","applyVarFilter","applyCalcFilter","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this32","pseudoNames","_step9","_pseudoProps$content","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","elementStyles","propsLH","cascVal","_validatorSet$shortha","shorthand","nameLH","_step10","setProp","tvLH","valueSH","_step11","_iterator11","_avLH","_ref","_shorthand$values$_na","defaultValues","_name3","CalcFilterVisitor","popRule","popElement","uaBaseCascade","CascadeParserHandler","_CssParser$SlaveParse","_this33","conditionCount","footnoteContent","insideSelectorRule","invalid","TOP","_proto48","insertNonPrimary","processChain","isInsideSelectorRule","invalidSelector","setInvalid","MatchesParameterParserHandler","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","hook","converted","parameterParserHandler","WhereParameterParserHandler","HasParameterParserHandler","_CascadeParserHandler","_this34","parentChain","maxSpecificity","increasingSpecificity","_proto49","forgiving","NotParameterParserHandler","_MatchesParameterPars","_proto50","DefineParserHandler","dim","PropSetParserHandler","_CssParser$SlaveParse3","_this35","_proto54","_CssParser$ErrorHandl","PropertyParserHandler","_this36","_proto55","forEachViewConditionalStyles","viewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","mergeViewConditionalStyles","forEachStylesInRegion","regionStyle","regions","footnoteRegion","_step12","_iterator12","to","newVal","convertToPhysical","dest","hasOwnProperty","coupledName","couplingMap","targetName","coupledCascVal","VarFilterVisitor","_Css$FilterVisitor4","_this37","getVarValue","_this$element","_this$elementStyles","_step13","_iterator13","_style$name","_this$styler$getStyle","_this$styler$getStyle2","getStyle","_val","_Css$FilterVisitor5","resolveViewportUnit","percentRef","_this38","exprText","exprVal","exprResult","isRootFontRelativeLengthUnit","evaluateExprToCSS","takesOnlyNum","numProp","Css.Num","Css.empty","Css.Func","createRegExpMap","valueMaps","toPhysical","physical","logical","maps","maps2","replaced","toPhysicalMaps","convert","toLogicalMaps","Size","sizes","maxWidth","minWidth","maxHeight","minHeight","createElement","getComputedValue","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","VtreeImpl.isSameNodePosition","findPageFloatByNodePosition","VtreeImpl","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","_float10","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","d","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","toLogical","CssLogicalUtil.toLogical","CssLogicalUtil.toPhysical","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","outerInlineSize","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","availableInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalClearSide","logicalSides","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","_float18","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","_PageFloats$PageFloat","FootnoteFragment","_PageFloatFragment","LineFootnotePolicyLayoutConstraint","blockify","blockifiedStr","displayStr","Css.getName","isAbsolutelyPositioned","isBlock","getComputedDislayValue","isInlineLevel","isRubyInternalDisplay","calculateEdge","extraOffset","cbox","range","createRange","setStart","setEnd","getRangeClientRects","boxes","getComputedMargin","isOrphan","isSpecial","isSpecialNodeContext","findAncestorSpecialInlineNodeContext","Display","FootnoteLayoutStrategy","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","AbstractBreakPosition","calculateOffset","_calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","_AbstractBreakPositio","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","marginBlockStart","isOverflown","repetitiveElements","getRepetitiveElements","isFirstContentNode","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","RESOLVE_FORMATTING_CONTEXT","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accept","accepted","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","_LayoutIteratorStrate","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","HANGING_PUNCTUATION_NONE","end","allowEnd","hangingPunctuationFromPropertyValue","cssval","Css.Val","hangingPunctuation","isHangingPunctuationNone","SPACING_TRIM_NONE","trimStart","spaceFirst","trimEnd","trimAdjacent","SPACING_TRIM_NORMAL","SPACING_TRIM_AUTO","spacingTrimFromPropertyValue","textSpacing","Css.Ident","AUTOSPACE_NONE","ideographAlpha","ideographNumeric","AUTOSPACE_NORMAL","autospaceFromPropertyValue","autospace","isTextSpacingNone","spacingTrim","normalizeLang","embeddedContentTags","audio","canvas","embed","iframe","math","picture","svg","video","textPolyfill","preprocessSingleDocument","preprocessForTextSpacing","nodeIter","createNodeIterator","NodeFilter","SHOW_TEXT","nextNode","_node$parentElement$d","dataset","textArr","lastIndex","processGeneratedContent","autospaceVal","spacingTrimVal","hangingPunctuationVal","whiteSpaceSave","whiteSpace","offsetHeight","offsetWidth","prevNode","isFirstInBlock","isFirstAfterForcedLineBreak","isLastBeforeForcedLineBreak","processTextSpacing","postLayoutBlock","isFirstFragment","_p","isOutOfLine","checkIfFirstInBlock","isAfterForcedLineBreak","_p$sourceNode","checkIfAfterForcedLineBreak","_elem$style","_ref2","_ref3","_p$lang","_nodeContext$parent","prevP","_prevP$viewNode","_prevP$viewNode2","_prevP$viewNode$previ","previousElementSibling","Vtree.canIgnore","checkIfLastBeforeForcedLineBreak","nextP","_nextP$viewNode","_nextP$viewNode2","_nextP$viewNode$nextE","isFirstAfterBreak","isLastInBlock","_prevP$viewNode3","checkIfFirstAfterForcedLineBreak","_nextP$viewNode3","nextNext","textNode","currRange","prevRange","nextRange","isAtStartOfLine","selectNode","getClientRects","prevRects","prevRect","isAtEndOfLine","nextRect","tagName","punctProcessing","hangingFirst","hangingLast","hangingEnd","linePosition","outerElem","offsetLeft","offsetTop","innerElem","fullWidthThreshold","defaultView","getComputedStyle","isFullWidth","linePos","atEnd","atEndNoHang","_linePos","checkUpright","_elem$ownerDocument$d","textOrientation","textCombineUpright","checkNonZeroMarginBorderPadding","node1","node2","borderInlineEndWidth","paddingInlineEnd","parent1","_style","borderInlineStartWidth","paddingInlineStart","parent2","registerHooks","PREPROCESS_SINGLE_DOCUMENT","TextSpacingPolyfill","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","deep","CssCascade","nest","CssCascade.CascadeValue","processContent","contentVal","TextPolyfill","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","calculatePseudoElementHeight","processAfterIfContinues","mediaTags","AllLayoutConstraint","constraints","BoxBreakPosition","_BreakPosition$Abstra","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","Column","_VtreeImpl$Container","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","breakAtTheEdgeBeforeFloat","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","_position$sourceNode","_position$sourceNode$","firstLetterLength","text2","firstLetterText","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","position1","createFloat","killFloats","cssFloat","createFloats","foundNonZeroWidthBand","insets","GeometryUtil.Insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boxSizing","nodeContextIn","layoutFloat","CssLogicalUtil","lineRelativeValue","toLineRelative","lineRelativeValues","nodeContextAfter","floatBBox","floatBox","probe","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatHeight","floatBottom","floatWidth","floatBoxEdge","floatBoxTop","addFloatToBands","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","_float2","cancelLayout","layoutStashedPageFloats","success","_continuation","excluded","newFloatAreas","newFragments","stashedFragment","PageFloats.PageFloatLayoutStrategyResolver","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","_float3","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","findEndOfLine","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","_viewNode$parentEleme","resolveTextNodeBreaker","breakTextNode","_this$breakPositions","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","boxSize","paddingBorders","getOffsetByRepetitiveElements","bp","_lastNode","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","lastNode","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","LayoutProcessor.LayoutProcessorResolver","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","Base.NS","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","layoutProcessor","_breakAtTheEdge","_nodeContext$parent2","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","segment","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","resolveHyphenateCharacter","ch0","ch1","_LayoutRetryers$Abstr","initialOverflown","LayoutRetryers","DefaultLayoutMode","_proto10","processAfterIfContinuesOfAncestors","hasNextCandidate","_Column","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout.PseudoColumn","VtreeImpl.ChunkPosition","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","_LayoutEntireBlock","doInitialLayout","_LayoutFragmentedBloc","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","appendHeader","appendFooter","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","_LayoutUtil$EdgeSkipp","LayoutUtil","LayoutUtil.EdgeSkipper","appendHeaderToAncestors","eachAncestorNodeContext","repetitiveLayoutProcessor","LayoutProcessor.BlockLayoutProcessor","getRepetitiveElementsOwnerFormattingContextOrNull","layoutEntireBlock","LayoutUtil.LayoutIterator","Layout","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","_BreakPosition$EdgeBr","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","_RepetitiveElementImp","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","isTableRowGrouping","isTableRoot","skipNestedTable","isNestedInlineTable","parentDisplay","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","_LayoutUtil$EdgeSkipp2","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","getElementOffset","tdNodeStep","startTableCell","afterNodeContext","startNodePosition","ignoreList","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","span","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","clearTableLayoutOptionCache","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","adjustCellHeight","LayoutProcessor.blockLayoutProcessor","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","_RepetitiveElementImp2","_BreakPosition$EdgeBr2","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","_RepetitiveElementImp3","TableRowLayoutConstraint","_RepetitiveElementImp4","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","newEdge","BalanceLastColumnBalancer","_ColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","reduceContainerSize","lastColumnBlockSize","_ColumnBalancer2","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","CDATA_SECTION_NODE","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","isBody","_arr","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","_this$context$rootFon","isRelativeFontSize","unitSize","_unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","parseStyleAttribute","CssCascade.parseStyleAttribute","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","_flowName","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","pageCV","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","connections","nomatch","emptyHead","ValidatingGroup","connect","nodeIndex","_group$match","_group$nomatch","_group$error","clonedNode","group","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","_i4","_i5","_i7","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","_PropertyValidator","idents","units","_ident","NO_IDENTS","ListValidator","_PropertyValidator2","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","_ListValidator","hasCommaListValidator","_ListValidator2","FuncValidator","_ListValidator3","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","_ShorthandSyntaxNode","validators","rvals","ShorthandSyntaxPropertyN","_ShorthandSyntaxPrope","ShorthandSyntaxCompound","_ShorthandSyntaxNode2","index0","newIndex","ShorthandValidator","_len","_key","syntax","setOwner","syntaxNodeForProperty","receiver","_this$values$name","propagateDefaultingValue","SimpleShorthandValidator","_ShorthandValidator","_ShorthandValidator2","InsetsShorthandValidator","_proto15","createSyntaxNode","InsetsSlashShorthandValidator","_ShorthandValidator3","slashIndex","_i8","index1","CommaShorthandValidator","_SimpleShorthandValid","acc","_values$name","FontShorthandValidator","_SimpleShorthandValid2","_proto18","fontVariant","fontStretch","familyList","family","systemFonts","propsExcludedFromAll","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","FONT","TEXT_SPACING","_SimpleShorthandValid3","TextSpacingShorthandValidator","ALL","_SimpleShorthandValid4","AllShorthandValidator","ValidatorSet","prefixes","namedValidators","addReplacement","Css.HexColor","newGroup","vals","subgroup","FOLLOW","_i9","addCounts","primitive","newFunc","initBuiltInValidators","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","deg","grad","rad","turn","ms","Hz","kHz","stdfont","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","_idents","_open","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","_this$defaultValues$p","varCheckVisitor","varFound","origName","rvalue","traitProps","properties","fillDefaults","Face","fontTraitKey","blobURLs","blobs","makeFontTraitKey","traitsEqual","makeAtRule","fontBytes","blobURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromView","viewFamilyFromSrc","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","loadFont","srcFamilySrc","viewFaceParam","TaskUtil.Fetcher","BLOB","findOrLoadFonts","srcFaces","waitFontLoading","fonts","fontFace","unloadedCount","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","_PageBox","PageMasterScope","_Exprs$LexicalScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","_PageBox2","PageMasterInstance","resetScope","PartitionGroup","_PageBox3","PartitionGroupInstance","Partition","_PageBox4","PartitionInstance","toExprAuto","toExprZero","toExprZeroBorder","styleVal","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","Exprs.Param","columnGap","Exprs.Call","initEnabled","toExprBool","Exprs.Eq","minPageWidth","minPageHeight","Exprs.Ge","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","toExprNormal","depends","registerInstance","getActiveRegions","_context$styler","_rootStyle$name","getPropAsNumber","_context$pageAreaHeig","_context$pageAreaWidt","Css.toNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","Vtree.DelayedItem","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","bbox","readWidth","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","childInstance","RootPageBoxInstance","_PageBoxInstance","_PageBoxInstance2","adjustPageLayout","_PageBoxInstance3","_PageBoxInstance4","processPartitionList","listVal","conflicting","qname","term","Exprs.Not","required","toExprIdent","pmEnabledVal","pmEnabled","PageBoxParserHandler","PartitionParserHandler","_PageBoxParserHandler","PartitionGroupParserHandler","_PageBoxParserHandler2","partition","partitionGroup","PageMasterParserHandler","_PageBoxParserHandler3","resolvePageProgression","_style$writingMode","_style$direction","Constants","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkLineLength","CornerMarkPosition","CrossMarkPosition","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","cropOffset","val1","bleedCV","marks","marksCV","cropOffsetCV","evaluatePageSizeAndBleed","evaluated","mark","createPrinterMarkElement","lineWidth","elementType","propertiesAppliedToPartition","MarginBoxPositionAlongVariableDimension","outline","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","START","CENTER","pageMarginBoxes","_PageMaster$PageMaste","PageRuleMaster","bodyPartitionKey","PageRulePartition","pageSize","createPageMarginBoxes","applySpecified","marginBoxesMap","pageMarginBoxNames","PageRuleMasterInstance","_PageMaster$Partition","Css.Int","PageMarginBoxPartition","_PageMaster$Partition2","marginBoxName","ownStyle","ownVal","_prop","PageMarginBoxPartitionInstance","_PageMaster$PageMaste2","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","sizeMarginBoxesAlongVariableDimension","verticalDimensions","isHorizontal","containers","boxInstances","boxInfo","boxParams","boxParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","maxSize","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minSize","evaluatedMinSize","minOuterSizes","outerSize","startEndSum","availableSize","startBoxParam","endBoxParam","centerBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","SingleBoxMarginBoxSizingParam","hasAutoSize_","getSize","fixedSize","PageRulePartitionInstance","_PageMaster$Partition3","pageRulePartition","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","startSide","paddingStart","borderStartWidth","borderEndWidth","paddingEnd","_PageMaster$Partition4","pageMarginBoxPartition","applyVerticalAlign","flexAlign","align","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","outsideName","outside","marginInside","insideName","pageMargin","paddingInside","paddingOutside","borderOutsideWidth","getComputedValues","marginOutside","borderAndPadding","borderInsideWidth","pageMarginValue","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","pageMasterStyle","newPageMaster","_CssCascade$ChainedAc","CheckPageTypeAction","_CssCascade$ChainedAc2","IsFirstPageAction","IsBlankPageAction","_CssCascade$ChainedAc3","IsLeftPageAction","_CssCascade$ChainedAc4","IsRightPageAction","_CssCascade$ChainedAc5","_CssCascade$ChainedAc6","IsRectoPageAction","IsVersoPageAction","_CssCascade$ChainedAc7","IsNthPageAction","_CssCascade$IsNthActi","layoutPositionAtPageStart","blankPageAtStart","_CssCascade$ApplyRule","ApplyPageRuleAction","boxName","targetBox","targetMap","mergeInPageRule","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","marginBoxMap","boxStyle","PageMarginBoxParserHandler","allowScripts","scriptsInBodyNotNearHead","script","srcScriptElem","flags","inHead","getScriptsInOrNearHead","isModule","async","defer","forceDefer","hasScripts","onload","needDefer","deferredScripts","builtinMathJax2","_window$MathJax","_window$MathJax$versi","version","getElementsByTagName","sameScripts","scriptElem","scriptContent","attributes","srcDocument","fontFamilySet","findFontFamilyInStyle","_style$fontFamily","_Object$values","findAllFontFamily","arg","CssCascade.ApplyRuleAction","isArray","_Object$values2","_i3","_Object$values3","_Object$values4","transformURIs","attributeValue","m1","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","childStyle","childDisplay","att","shadowStyler","PseudoElement.PseudoelementStyler","Vtree.ShadowContext","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","_fontSize","_propList","prop1","getLineHeightUnitSize","sname","inheritLangAttribute","transferPolyfilledInheritedProps","numericVal","resolveFormattingContext","createElementView","_this$nodeContext$vie","_this$nodeContext$par","inheritedValues","floatCV","floatReferenceCV","Scripts","_this$nodeContext$par3","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","breakInside","insideNonRootMultiColumn","isInsideNonRootMultiColumn","pageVal","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","overflowWrap","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","_elementStyle$content2","_elementStyle$content","NCX","navParent","hp","needToProcessChildren","contentWindow","navigator","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","hasAutoWidth","attrWidth","hasAutoHeight","attrHeight","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","transformedValue","anchorElem","image","Image","isSVGUrlAttribute","Urls","namespacePrefixMap","attributePrefix","_image","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","marginBreak","breakType","getBreakTypeAt","modifyElemDimensionWithImageResolution","_this$nodeContext$par4","_nc$parent","parentViewNode","paddingBlockStart","borderBlockStartWidth","_this$context","_this$context$current","currentLayoutPosition","_this$context$current2","Layout.AfterIfContinues","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinHeight","numericMinWidth","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","hasChildNodes","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","_this$nodeContext","_this$sourceNode","_this$viewRoot","_propList2","propertiesNotPassedToDOM","isRelativePositioned","fixRubyTextFontSize","_this$nodeContext$par5","_this$nodeContext$par6","defaultLineHeightNum","parentStyle","parentLineHeight","lineHeightNum","_this$nodeContext$par7","_viewNode","_viewNode$style","ancestorLH","userAgent","fontSizeInPx","parentElem","_this$nodeContext2","_this$nodeContext2$pa","_target$style","zoom","minFontSizeInPx","pn","childComputedStyle","nodeContext1","isBeforeBlock","_nodeContext$sourceNo","_CssCascade$getProp","nextElem","blockNestCount","_nc$viewNode","extentBefore","fixClonedBoxDecorationOverflow","textAlign","elem2","createChildAnonymousBlockIfNeeded","adjust","elem1","_this13$viewport$wind","lastElementChild","found","checkForcedLineBreakElem","prevElem","forcedBreakElem","anonymousBlock","isFontRelativeLengthUnit","CssCascade.convertFontRelativeLengthToPx","step1","step2","nodePosition1","nodePosition2","DOMParserSupportedType","DefaultClientLayout","layoutBox","scaleRatio","pixelRatio","devicePixelRatio","scaleRect","subtractOffsets","originRect","viewportLeft","viewportTop","layoutBoxRect","getBoundingClientRect","rects","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","isHeadlessBrowser","webdriver","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","resolveContentType","Predicate","predicate","check","withAttribute","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","defaultFontSize","scaleFactor","heightVal","widthVal","StyleInstance","defaultLang","fontMapper","_Exprs$Context","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font.DocumentFaces","CssPage","matchStartPageSide","CssPage.PageManager","Font","loadScriptsInHead","srcScripts","textContentDiv","needPrepareForWebFonts","_window$document$quer","getAllFontFamilyList","prepareTextContentForWebFonts","savedDollar","classList","_window$ret","loadScript","pageStyle","isRectoStart","isLTR","getStyleForDoc","CssStyler.Styler","Vtree.FlowChunkPosition","evalSupportsSelector","supported","supportsReceiver","SupportsReceiver","StyleParserHandler","sph","CssParser.Parser","cascadeParserHandler","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","consumedOffset","currentPosition","dumpLocation","updateStartSide","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","parentFlowPosition","parentStartOffset","breakOffsetBeforeStart","setFormattingContextToColumn","layoutDeferredPageFloats","pageStartPos","deferredFloatOffset","checkPageFloatForLaterPage","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","Layout.Column","columnY","columnX","dontApplyExclusions","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","CssPage.PageRulePartitionInstance","PageMaster.PageMasterInstance","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","createColumnBalancer","lastColumn","Columns","Vgen.ViewFactory","dontExclude","forwardOrderInLayout","CssPage.PageRuleMasterInstance","textAutospace","textSpacingTrim","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","createCornerMark","cropMarkLineLength","bleedMarkLineLength","svgWidth","maxLineLength","createPrinterMarkSvg","points2","points1","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","createCrossMark","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","bleedBoxPaddingEdge","PageFloats.PageFloatLayoutContext","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","PageMaster.PageMaster","PageMaster.PageMasterParserHandler","CssCascade.PropSetParserHandler","pageHandler","regionCount","regionHandler","_CssParser$DispatchPa","Exprs.LexicalScope","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","uaStylesheetBaseFetcher","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","elemList","title","_elem$getAttribute","rel","_classes","_media","_title","processViewportMeta","source","meta","decode32","bytes","bytesToSHA1Int32","appendCount","encode32","w","bi","bulletClosed","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","behavior","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","_button","showTOC","tocBoxUrl","viewportSize","Vgen.Viewport","OPS.StyleInstance","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","stopPropagation","_OPS$OPSDocStore","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","Net.ResourceStore","parseJSONResource","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","_url$match","manifestObj","reportLoadError","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","OPFDoc","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","prePaginated","OPS","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","_r1$metaTerms$display","_r2$metaTerms$display","_r1$metaTerms$titleTy","_r2$metaTerms$titleTy","i1","i2","getMathJaxHub","supportedMediaTypes","items","spine","itemMap","itemMapByPath","uid","bindings","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","OPFDocumentURLTransformer","path","restoreURL","encoded","unescapeStrFromHex","unescapeCharFromHex","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","refines","scheme","DC","rawItems","rawItem","mapObj","rawItemsByTarget","makeMetadata","entryMap","Base.mapObj","sortMetadata","readMetadata","SHA1","blob","FileReader","fileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","sha1Sum","makeDeobfuscator","assignAutoPages","manifestText","obfuscations","obfuscationKey","bytesToSHA1Hex","sha1","bytesToSHA1Bytes","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","XmlDoc.XMLDocHolder","itemref","_manifestObj$metadata","_manifestObj$metadata2","_doc$querySelectorAll","_manifestObj$metadata3","_item$value","author","_item$name","primaryEntryPath","encodeURI","hrefNoFragment","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","itemCount","_this12$items","getCFI","offsetInItem","cfi","resolveFragment","CFI.Fragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Vgen.DefaultClientLayout","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","Vtree.Page","matrix","cssMatrix","makeObjectView","handlerSrc","typeParam","srcParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","attrs","_attrs","newUrl","loadingContinuations","_this27$spineItems$","epubSpineProperties","pageCounterOffset","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc.TOCView","tocWidth","tocHeight","PageViewMode","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","resized","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","pixelRatioLimit","opfView","cssText","styleElement","findOrCreateStyleElement","VivliostylePolyfillCss","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","userStyleSheet","Epub.EPUBDocStore","authorStyleSheet","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","vp","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","rightWidth","leftWidth","reportPosition","sendLocationNotification","createViewport","vs","Vgen","resolveSpreadView","SPREAD","updateSpreadView","sizeIsGood","_this$opfView","hasNoAutoSizedPages","spreadViewChanged","setPageSize","setPageSizePageRules","AUTO_SPREAD","_this$pageSizes","_this$pageSizes2","convertSize","widthMax","heightPt","heightMax","widthPt","removePageSizePageRules","tocVisible","Epub.OPFView","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","abs","queryZoomFactor","FIT_INSIDE_VIEWPORT","pageDim","RenderingCanceledError","resizeTask","INTERACTIVE","notification","Event","COMPLETE","method","_command$position","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","_cmd","frameInternal","ZoomType","setPrototypeOf","convertViewerOptions","CoreViewer","Navigation","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","setOptions","Base.SimpleEventTarget","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","userAgentRootURL","convertSingleDocumentOptions","resolveNavigation","nav","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","navigateToPosition","_position$pageIndex","_position$offsetInIte","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","opt","toNumberOrNull","VivliostylePrint","htmlDoc","_ref$title","printCallback","_ref$printCallback","iframeWin","hideIframe","_ref$hideIframe","removeIframe","_ref$removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","config"],"mappings":"4EAuDYA,EASAC,ECxCAC,yCDAN,SAAAC,EAAmBC,GACvBC,QAAAA,QAAUD,CACX,CAceE,SAAAA,EAAkBC,GAChC,OAAQA,GACN,IAAK,MACH,OAAOC,QAAeA,gBAACC,IACzB,IAAK,MACH,OAAOD,QAAAA,gBAAgBE,IACzB,QACE,MAAUC,IAAAA,MAAkCJ,4BAAAA,GAEjD,CC4FD,SAASK,EAAqBC,GAC5B,IAAOC,EAAGC,MAAMC,KAAKH,GAChBI,EAAU,KAIf,OAHIH,EAAE,aAANH,QACEM,EAAIH,EAAEI,SAED,CAAEC,MAAOF,EAAGG,SAAUN,EAC9B,CAED,WAAmCD,GACjC,IAAOI,EAAGJ,EAAKM,MACJE,EAAGJ,IAAMA,EAAC,YAAkBA,EAAC,OACpCG,EAAW,GAAGE,OAAOT,EAAI,UAU7B,OATII,IACEG,EAASG,OAAS,IACpBH,EAAWA,EAASE,OAAO,CAAC,QAE9BF,EAAWA,EAASE,OAAO,CAACL,EAAC,aACzBI,IACFD,EAAWA,EAASE,OAAO,CAAC,OAAOA,OAAOD,KAGvCD,CACR,CD7IUf,QAAAA,SAAmB,EASlBG,QAAAA,qBAAAA,EAAZ,SAAYA,GACVA,EAAA,IAAA,MACAA,EAAA,IAAA,KAFF,CAAA,CAAYA,QAAAA,kBAAAA,QAAAA,gBAGX,CAAA,IAoBWR,QAAAA,cAAAA,GAAAA,EAAAA,QAAQA,WAARA,QAAQA,SAGnB,KAFC,KAAA,OACAA,EAAA,MAAA,QAOUC,QAAAA,gBAAAA,GAAAA,EAAAA,qBAAAA,QAAAA,WAIX,CAAA,IAHC,QAAA,UACAA,EAAA,YAAA,cACAA,EAAA,SAAA,WC3CF,SAAYC,GACVA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,OAJF,CAAA,CAAYA,IAAAA,EAKX,CALmB,IA8Ib,ICxIKsB,EDwIOC,EAAG,iBA/HtB,WAGE,SAAoBC,EAAAA,GAAAA,KAAAA,iBAFZC,EAAAA,KAAAA,UAAiE,CAEhC,EAArBC,KAAWF,YAAXA,CAAyB,CAH/C,IAKUG,EAAAA,EAAAA,iBAAAA,EAAAA,aAAA,SAAaC,GAGf,IAAAC,EAEAC,EAEGC,EANHL,KAAKF,YACHE,KAAKF,YAAYQ,OACnBH,EAAAH,KAAKF,aAAYQ,MAASJ,MAAAA,EAAAA,IAE1BE,EAAAJ,KAAKF,aAAYS,IAAOL,MAAAA,EAAAA,IAG1BM,EAAAA,SAAQF,MAARG,MAAAJ,EAAiBH,EAEpB,EAfHQ,EAiBUC,YAAA,SAAYT,WAQhBU,EAPEZ,KAAKF,YACHE,KAAKF,YAAYe,MACdf,EAAAA,KAAAA,aAAYe,aAAQX,IAEpBJ,EAAAA,KAAAA,aAAYS,YAAOL,IAG1BU,EAAAJ,SAAQK,KAAQX,MAAAA,EAAAA,EAEnB,EAEOY,EAAAA,YAAA,SAAYZ,GAEW,IAAAa,EAEpBC,IAHLhB,KAAKF,YACHE,KAAKF,YAAYmB,aACdnB,aAAYmB,KAAjBR,MAAAM,EAAyBb,WAEpBJ,aAAYS,IAAjBE,MAAAO,EAAwBd,IAG1BM,EAAAA,SAAQS,aAAQf,EAEnB,IAEOgB,aAAA,SAAahB,GAGf,IAAAiB,EAEAC,EAEGC,EANHrB,KAAKF,YACHE,KAAKF,YAAYP,OACnB4B,EAAAnB,KAAKF,aAAYP,MAASW,MAAAA,EAAAA,IAE1BkB,EAAApB,KAAKF,aAAYS,IAAOL,MAAAA,EAAAA,MAG1BM,SAAQjB,MAARkB,MAAAY,EAAiBnB,EAEpB,EAnDHQ,EAqDUY,iBAAA,SAAiBC,EAAiBtC,GACxC,IAAMc,EAAYC,KAAKD,UAAUwB,GAC7BxB,GACFA,EAAUyB,QAAQ,SAACC,GACjBA,EAASxC,EACV,EAEJ,EA5DHyB,EAkEEgB,YAAA,SAAYH,EAAiBE,GAC3B,IAAI1B,EAAYC,KAAKD,UAAUwB,GAC1BxB,IACHA,EAAYC,KAAKD,UAAUwB,GAAS,IAEtCxB,EAAU4B,KAAKF,EAChB,EAEDnB,EAAAA,MAAA,WACE,IAAMrB,EAAOD,EAAqB4C,WAClC5B,KAAKC,aAAa4B,EAA0B5C,IAC5Ce,KAAKsB,iBAAiBhD,EAASwD,MAAO7C,EACvC,EA9EHyB,EAgFEG,KAAA,WACE,IAAU5B,EAAGD,EAAqB4C,WAClC5B,KAAKW,YAAYkB,EAA0B5C,IAC3Ce,KAAKsB,iBAAiBhD,EAASyD,KAAM9C,EACtC,EAEDgC,EAAAA,KAAA,WACE,IAAMhC,EAAOD,EAAqB4C,WAClC5B,KAAKc,YAAYe,EAA0B5C,IAC3Ce,KAAKsB,iBAAiBhD,EAAS0D,KAAM/C,EACtC,EA1FHyB,EA4FEnB,MAAA,WACE,MAAaP,EAAqB4C,WAClC5B,KAAKkB,aAAaW,EAA0B5C,IAC5Ce,KAAKsB,iBAAiBhD,EAAS2D,MAAOhD,EACvC,IAhGH,ICTYW,QAAAA,WAAAA,GAAAA,EAAAA,QAAKA,QAALA,QAAKA,MA6GhB,KA7FC,gBAAA,kBAQAA,EAAA,2BAAA,6BAaAA,EAAA,wBAAA,0BASAA,EAAA,yBAAA,2BAOAA,EAAA,2BAAA,6BAQAA,EAAA,cAAA,gBAYAA,EAAA,0BAAA,4BAeAA,EAAA,2BAAA,6BAUAA,EAAA,yBAAA,2BAUAA,EAAA,kBAAA,oBA6CF,IAAMsC,EAAQ,CAAd,EAYgBC,SAAAA,EACdC,EACAC,EACAC,GAEA,GAAK1C,QAAAA,MAAMwC,GAEJ,CACL,IAAgBG,EAAGL,EAAME,GACpBG,IACHA,EAAeL,EAAME,GAAQ,IAE3BE,EACFC,EAAaC,QAAQH,GAErBE,EAAaZ,KAAKU,EAErB,MAXCI,EAAexB,KAAK,IAAAlC,MAAA,iCAA2CqD,EAA3C,MAYvB,CASeM,SAAAA,EAAWN,EAAcC,GACvC,GAAKzC,QAAAA,MAAMwC,GAEJ,CACL,IAAkBG,EAAGL,EAAME,GAC3B,GAAIG,EAAc,CAChB,IAAWI,EAAGJ,EAAaK,QAAQP,GAC/BM,GAAS,GACXJ,EAAaM,OAAOF,EAAO,EAE9B,CACF,MATCF,EAAexB,KAAK,IAAAlC,MAAA,iCAA2CqD,EAA3C,MAUvB,CAMK,SAAAU,EAA0BV,GAE9B,OADqBF,EAAME,IACJ,EACxB,CAKYW,MAAS,CACpBZ,aAAAA,EACAO,WAAAA,GClOWM,eAMX,WAAA,SAAAA,EAA4BC,GAAAA,KAAAA,yBAL5BC,EAAAA,KAAAA,WAA2D,CAAA,EACnDC,KAAAA,oBACRC,EAAAA,KAAAA,yBACAC,EAAAA,KAAAA,uBAE4B,EAAArD,KAAmBiD,oBAAnBA,EAC1BjD,KAAKmD,eAAiBG,EAGtBtD,KAAA,oBAA8BA,KAAKoD,oBAAsBE,EACzDtD,KAAA,kBAA4BA,KAAKqD,kBAAoBC,CACtD,CAZH,IAAA5C,EAAAsC,EAAAO,UAyFA,OAzFA7C,EAoBE8C,yBAAA,SAAyBpB,EAAcqB,GACrCN,EAAeO,KAAK1D,KAAMoC,EAAM,QAASqB,EAC1C,EAtBH/C,EA8BEiD,uBAAA,SAAuBvB,EAAcqB,GACnCN,EAAeO,KAAK1D,KAAMoC,EAAM,MAAOqB,EACxC,EAhCH/C,EAsCEkD,aAAA,WACE,IAAMV,EAAalD,KAAKkD,WACpBW,EAAK,GACTC,OAAOC,KAAKb,GAAY1B,QAAQ,SAACY,GAG/B,IAFA,IAAY4B,EAAGd,EAAWd,GACnB6B,EAAGD,EAAOrE,OACPuE,EAAG,EAAGA,EAAID,EAAGC,IAAK,CAC1B,IAAMC,EAAIH,EAAOE,GACjBL,GAAMzB,EACF6B,EAAI,IACNJ,GAAE,IAAQK,EAAR,KAEJL,GAAoBM,cAAAA,EAAC,MAAnB,UAAsCA,EAAC,IACvCA,gBAAAA,EAAC,IAAUA,EAAC,OAEf,IAAA,CACF,GACD1B,EAAe5B,KAAKgD,EACrB,EAxDHnD,EA6DE0D,QAAA,WACEpE,KAAKmD,eAAiBG,EAGtBtD,KAAA,oBAA8BA,KAAKoD,oBAAsBE,EACzDtD,KAAA,kBAA4BA,KAAKqD,kBAAoBC,CACtD,EAnEH5C,EAwEE2D,OAAA,WACErE,KAAKmD,eAAiBA,EAGtBnD,KAAA,oBAA8BA,KAAKoD,oBACjCA,EACFpD,KAAA,kBAA4BA,KAAKqD,kBAAoBA,CACtD,EA/EH3C,EAoFE4D,UAAA,WACE,OAAOtE,KAAKoD,sBAAwBA,CACrC,EAGHJ,CAAA,CAnFE,GAmFF,SAAAM,IAUA,CAAA,SAASH,EACPf,EACAmC,EACAd,GAEKA,IACHA,EAAYzD,KAAKiD,oBAAoBuB,OAEvC,IAIIL,EAJUjB,EAAGlD,KAAKkD,WAAWd,GAC5Bc,IACHA,EAAalD,KAAKkD,WAAWd,GAAQ,IAIvC,IADA,IACU8B,EADAhB,EAAWvD,OACJ,EAAGuE,GAAK,MACvBC,EAAIjB,EAAWgB,KACLC,EAAEI,IAFcL,IAK1BC,EAAI,KAEDA,GAEHjB,EAAWvB,KADXwC,EAAI,CAAJ,GAGFA,EAAEI,GAAYd,CACf,CASD,SAASL,EAAoBhB,EAAcqB,GACzCzD,KAAKmD,eAAef,EAAM,QAASqB,EACpC,CASD,SAASJ,EAAkBjB,EAAcqB,GACvCzD,KAAKmD,eAAef,EAAM,MAAOqB,EAClC,CACD,IAAMgB,EAA8B,CAAED,IAAKE,KAAKF,KAE3BG,EAAG,IAAI3B,EADA4B,QAAUA,OAAOC,aAEpBJ,GAEzBE,EAASnB,yBAAyB,oBAKrBsB,IAAOA,EAAG,CACrBH,SAAU,CACRvB,oBAAqBuB,EAASvB,oBAC9BC,kBAAmBsB,EAAStB,kBAC5BO,aAAce,EAASf,aACvBQ,QAASO,EAASP,QAClBC,OAAQM,EAASN,68ECjKd,MACL,wjvBAMiBU,EAAG,CAAf,EAQD,SAAAC,EAAuBrG,GAC3B,OAAOsG,KAAKC,MAAMvG,EACnB,CAEewG,SAAAA,EAAcC,GAC5B,MAAUA,EAAIC,MAAM,YACpB,OAAIC,IACO,GAGZF,CAAA,CAaM,MAAcR,OAAOW,SAASC,KACrBC,SAAAA,EAAWjH,GACzBkH,EAAUlH,CACX,CAMM,IA4IKmH,IA5IiBf,OAAOW,SAASC,KAC7BI,SAAAA,EAAmBpH,GACjCqH,EAAkBrH,CACnB,CAOesH,SAAAA,EAAWC,EAAgBL,GACzC,GAAI,UAAUM,KAAKN,GACjB,OAAOK,GAAUL,EAEnB,IAAKA,GAAWK,EAAOV,MAAM,YAC3B,OAAIU,EAAOE,cAAcZ,MAAM,gBACtB,KAELU,EAAOV,MAAM,yBACfU,GACD,KACMA,GAKT,IAAIT,EACJ,GAJII,EAAQL,MAAM,yBAChBK,GAAO,KAGLK,EAAOV,MAAM,SAEf,OADAC,EAAII,EAAQL,MAAM,mBAERC,EAAC,GAAKS,IAIlB,GAAIA,EAAOV,MAAM,OAEf,OADAC,EAAII,EAAQL,MAAM,2BAERC,EAAC,GAAKS,IAQlB,GAJIA,EAAOV,MAAM,eACfU,EAASA,EAAOG,OAAO,IAEzBR,EAhEI,SAAgCN,GACpC,IAAOE,EAAGF,EAAIC,MAAM,aACpB,OAAIC,EACMA,EAAC,GAEJF,CACR,CA0DWe,CAAsBT,GAC5BK,EAAOV,MAAM,MACf,OAAOK,EAAUK,EAEnB,IAAI7B,EAAIwB,EAAQU,YAAY,KAC5B,GAAIlC,EAAI,EACN,OAAO6B,EAET,GAAI7B,EAAIwB,EAAQ/F,OAAS,GACb+F,EAAQU,YAAY,KACtBlC,EAAG,CAET,GAAc,IAAV6B,EACF,OAAOL,EAGTxB,GADAwB,GAAW,KACC/F,OAAS,CACtB,CAEH,IAAOyF,EAAGM,EAAQQ,OAAO,EAAGhC,EAAI,GAAK6B,IACrB,GAOhB,KANAT,EAAIF,EAAIC,MAAM,yBAEZD,EAAME,EAAE,GACRe,EAAYf,EAAE,OAIdpB,EAAIkB,EAAIxC,QAAQ,UACP,IAFE,CAKX,IAAM0D,EAAIlB,EAAIgB,YAAY,IAAKlC,EAAI,GACnC,GAAIoC,GAAK,EACP,MAEFlB,EAAMA,EAAIc,OAAO,EAAGI,GAAKlB,EAAIc,OAAOhC,EAAI,EACzC,CACD,OAAOkB,EAAImB,QAAQ,aAAc,KAAOF,CACzC,CAKK,SAAAG,EAA4BpB,GAChC,IAAAE,EAoCA,OAlCGA,EACC,yEAAyEmB,KACvErB,IAIJA,EAASE,EAAE,kCAAiCA,EAAE,QAAMA,EAAE,GAAK,GAAK,WAC9DA,EAAE,IAGHA,EACC,0EAA0EmB,KACxErB,IAIJA,EAASE,EAAE,GAAR,8DAAwEA,EAAE,IAE5EA,EACC,uEAAuEmB,KACrErB,IAIJA,EAASE,EAAE,GAAkCA,gCAAAA,EAAE,GAAUA,QAAAA,EAAE,IAE1DA,EACC,+EAA+EmB,KAC7ErB,MAIJA,EAASE,EAAE,GAAR,sBAAgCA,EAAE,GAAKA,EAAE,GAC7C,KAEFF,CAAA,CA8DesB,SAAAA,EAASC,GACvB,OAAS,MAALA,MAGKC,UACV,EArDD,SAAYjB,GACVA,EAAA,KAAA,+BACAA,EAAA,GAAA,oCACAA,EAAA,OAAA,qCACAA,EAAA,IAAA,uCACAA,EAAA,MAAA,+BACAA,EAAA,MAAA,+BACAA,EAAA,OAAA,kCACAA,EAAA,IAAA,6BACAA,EAAA,GAAA,mCACAA,EAAA,IAAA,sCAVF,CAAA,CAAYA,IAAAA,EAWX,CAAA,QAsDDkB,eAAA,WAAA,SAAAA,IAAA7G,KACE8G,MAAsB,CAAC,KADzB,CAAA,IAAApG,EAAAmG,EAAAtD,UAsEA,OAtEA7C,EAGEf,OAAA,WACE,OAAYmH,KAAAA,MAAMnH,OAAS,CAC5B,IAEDoH,IAAA,SAAIC,GAEF,IADA,IAAIrE,EAAQ3C,KAAK8G,MAAMnH,OAChBgD,EAAQ,GAAG,CAChB,MAAoBsE,KAAKC,MAAMvE,EAAQ,GAC3BwE,EAAGnH,KAAK8G,MAAMM,GAC1B,GAAID,EAAOE,QAAQL,GAAQ,EAEzB,YADAhH,KAAK8G,MAAMnE,GAASqE,GAGtBhH,KAAK8G,MAAMnE,GAASwE,EACpBxE,EAAQyE,CACT,CACDpH,KAAK8G,MAAM,GAAKE,CACjB,EApBHtG,EAyBE4G,KAAA,WACE,OAAYR,KAAAA,MAAM,EACnB,EAMDS,EAAAA,OAAA,WACE,IAAMC,EAASxH,KAAK8G,MAAM,GACpBW,EAAOzH,KAAK8G,MAAMY,QACX1H,KAAK8G,MAAMnH,OACxB,GAAIgI,EAAO,EAAG,CAEZ,IADA,IAAIhF,EAAQ,IACC,CACX,IAAIiF,EAAqB,EAARjF,EACjB,GAAIiF,GAAcD,EAChB,MAEF,GAAI3H,KAAK8G,MAAMc,GAAYP,QAAQI,GAAQ,EAEvCG,EAAa,EAAID,GACjB3H,KAAK8G,MAAMc,EAAa,GAAGP,QACzBrH,KAAK8G,MAAMc,IACT,GAEJA,cAGFA,EAAa,EAAID,GACjB3H,KAAK8G,MAAMc,EAAa,GAAGP,QAAQI,GAAQ,GAI3C,MAFAG,GAGD,CACD5H,KAAK8G,MAAMnE,GAAS3C,KAAK8G,MAAMc,GAC/BjF,EAAQiF,CACT,CACD5H,KAAK8G,MAAMnE,GAAS8E,CACrB,CACD,OACDD,CAAA,EAGHX,CAAA,CAtEA,GAsE0BgB,EAAG,CAAC,GAAI,WAAY,WAEU,CAAA,EAExC,SAAAC,EACdC,EACAC,GAEA,WAAWC,SAASF,EAASC,EAAM,QACpC,CAEeE,SAAAA,EAAyBF,GACvC,IAAYG,EAAGC,EAAYJ,GAC3B,GAAIG,GAAyB,OAAbA,EAEd,OACDA,EACD,OAAQH,GACN,IAAK,WACL,IAAK,WACL,IAAK,qBACL,IAAK,iBAEH,OADAI,EAAYJ,GAAQ,KACpB,KACF,IAAK,uBAEH,GACEF,EAAyB,WAAY,kBACpCA,EAAyB,GAAI,wBAG9B,OADAM,EAAYJ,GAAQ,CAAC,wBACd,CAAC,wBAId,IAAqBH,IAAeQ,EAAfR,EAAAA,EAAAA,KAAeQ,EAAAC,KAAAC,MAAA,CAAA,MAClCF,EAAA7J,MAAA,GAAIsJ,EAAyBC,EAAQC,GAGnC,OADAI,EAAYJ,GADZG,EAAW,CAACJ,EAASC,GAEdG,CAEV,CAKD,OAFA1F,EAAexB,KAAK,0CAA2C+G,GAC/DI,EAAYJ,GAAQ,KACb,IACR,YAGCQ,EACAR,EACAxJ,GAEA,IAAMiK,QAAaD,SAAAA,EAAsBE,MACzC,GAAKD,EAGL,GAAIT,EAAKW,WAAW,MAClBF,EAAUG,YAAYZ,EAAMxJ,GAAS,SADvC,CAIA,IAAMqK,EAAwBX,EAAyBF,GACvD,GAAKa,EAGL,IAAA,IAA8CC,EAA9CC,EAAAC,EAAuBH,KAAuBC,EAAAC,KAAAR,MAAA,CAAA,IAAAJ,EAAAW,EAAAtK,MAC5C,OAAQ2J,GACN,IAAK,uBAEI,QADC3J,IAEJA,EAAQ,cAGZ,MACF,IAAK,uBAEI,QADCA,GAGJiK,EAAUG,YAAY,cAAe,KAK7CH,EAAUG,YAAYT,EAAU3J,EACjC,CAxBA,CAyBF,YAGCgK,EACAR,EACAiB,GAEA,IACE,MAAsBb,EAAYJ,GAClC,OAAQQ,EAAqBE,MAAMQ,iBACjCC,EAAgBA,EAAc,GAAKnB,EAEzB,CAAZ,MAAOoB,GAAK,CACd,OAAOH,GAAa,EACrB,CAEK,SAAAI,GAA2BC,GAC/B,IAAIC,EAAOD,EAAQE,eAAe7D,EAAG8D,IAAK,QAI1C,OAHKF,GAAQD,EAAQI,cAAgB/D,EAAGgE,QACtCJ,EAAOD,EAAQM,aAAa,SAEvBL,CACR,CAED,oBACEM,WAAAA,SAAAA,IAAAA,KAAAA,KAAiB,EADnB,mBAAA,SAGEC,OAAA,SAAOnL,GAEL,OADAqB,KAAK6J,KAAKlI,KAAKhD,GAEhBqB,IAAA,IAED+J,MAAA,WACE/J,KAAK6J,KAAO,EACb,EAVHG,EAaEpD,SAAA,WACE,MAAY5G,KAAK6J,KAAKI,KAAK,IAE3B,OADAjK,KAAK6J,KAAO,CAAClL,GACNA,CACR,EAjBHuL,CAAA,CACEL,GAmBcM,SAAAA,GAAWxL,GAEzB,MAAYA,KAAAA,EAAIyL,WAAW,GAAGxD,SAAS,IACxC,GAAA,CAEK,YAAyBxE,GAC7B,SAAYmE,QAAQ,+BAAgC4D,GACrD,CAEK,YAAuBxL,GAC3B,OAAUA,EAAC4H,QAAQ,sBAAuB4D,GAC3C,UAEKE,GAAyB1L,GAC7B,OAAUA,EAAC4H,QAAQ,2BAA4B+D,mBAChD,CAEeC,SAAAA,GAASC,GACvB,QAASA,EAAGnF,MACV,6GAEH,UAOeoF,GAAmB9L,EAAaoJ,GAI9C,OAAUpJ,EAAC4H,QAAQ,kBAHnB,SAAoBmE,GAClB,OAPY,SAAgB/L,EAAaoJ,GAE3C,OADAA,EAA2B,iBAAXA,EAAsBA,EAAS,QAC9B,MAAQpJ,EAAIyL,WAAW,IAAIxD,SAAS,IAAIV,OAAO,EACjE,CAIyByE,CAACD,EAAG3C,EAC3B,EAEF,CAEe6C,SAAAA,GAAajM,GAC3B,OAAO8L,GAAmB9L,EAC3B,CA4BekM,SAAAA,GACdC,EACAC,GAIA,IAFA,IAAK9G,EAAG,EACH+G,EAAGF,IACK,CAIX,GAFoB,GAAL7G,GAAW8G,EAAK9G,EAAI,GACpB+G,GAAKF,GAAQC,EAAKC,GAC7B/G,GAAK+G,EACP,OAAO/G,EAET,IAAMgH,EAAKhH,EAAI+G,GAAM,EACjBD,EAAKE,GACPD,EAAIC,EAEJhH,EAAIgH,EAAI,CAEX,CACF,CAKe,YAAc/L,EAAWgM,GACvC,OAAOhM,EAAIgM,CACZ,CAyCe,SAAAC,GACdC,EACAC,GAGA,IADA,IACqBC,IADa,CAAA,EAClCC,EAAAvC,EAAgBoC,KAAKE,EAAAC,KAAAhD,MAAA,CAAA,MACnB+C,EAAA9M,QAAyB6M,EAAI1E,GACzB6E,IAAMC,EAAID,KACZC,EAAID,GAAK7E,EAEZ,CACD,OAAO8E,CACR,UAmBeC,GACdN,EACAC,GAGA,IADA,IACAM,EADSF,EAA2B,CAApC,EACAG,EAAA5C,EAAgBoC,KAAhBO,EAAAC,KAAArD,MAAqB,KAAA5B,EAAAgF,EAAAnN,MACbgN,EAAIH,EAAI1E,GACV6E,IACEC,EAAID,GACNC,EAAID,GAAG7J,KAAKgF,GAEZ8E,EAAID,GAAK,CAAC7E,GAGf,CACD,OACD8E,CAAA,CA0CYI,IAAAA,6CACX9L,UAAgD,CAAA,CADlD,CAGE+L,IAAAA,EAAAA,EAAAA,UAHF,OAGEA,EAAAA,cAAA,SAAcC,GACZ,IAAUlC,EAAG7J,KAAKD,UAAUgM,EAAIC,MAChC,GAAInC,EAAM,CACRkC,EAAIE,OAASjM,KACb+L,EAAIG,cAAgBlM,KACpB,IAAK,IAAIkE,EAAI,EAAGA,EAAI2F,EAAKlK,OAAQuE,IAC/B2F,EAAK3F,GAAG6H,EAEX,CACF,IAEDI,iBAAA,SACEH,EACAvK,EACA2K,GAEA,IAAIA,EAAJ,CAGA,IAAUvC,EAAG7J,KAAKD,UAAUiM,GACxBnC,EACGA,EAAKwC,SAAS5K,IACjBoI,EAAKlI,KAAKF,GAGZzB,KAAKD,UAAUiM,GAAQ,CAACvK,EAPzB,CASF,IAED6K,oBAAA,SACEN,EACAvK,EACA2K,GAEA,IAAIA,EAAJ,CAGA,IAAMvC,EAAO7J,KAAKD,UAAUiM,GAC5B,GAAInC,EAAM,CACR,IAAWlH,EAAGkH,EAAKjH,QAAQnB,GACvBkB,GAAS,GACXkH,EAAKhH,OAAOF,EAAO,EAEtB,CAPA,CAQF,EA/CHkJ,CAAA,IC9pBgBU,SAAAA,GAAMC,GACpB,GAAqB,GAAjBA,EAAKC,SAAe,CACtB,IAAMC,EAASF,EAAiB5C,aAAa,MAC7C,GAAI8C,EACF,OAAOA,CAEV,CACD,OAAO,IACR,CAEK,SAAAvC,GAAqBK,GACzB,MAAWA,IAAAA,CACZ,CAEK,YAAiB7L,GACrB,OAAOA,EAAI4H,QAAQ,kBAAmB4D,GACvC,CAEK,SAAAwC,GAAuBhO,GAC3B,OAAOA,EAAIuH,OAAO,EACnB,CAEe0G,SAAAA,GAASjO,GACvB,OAAKA,EAGEA,EAAI4H,QAAQ,oBAAqBoG,IADvChO,CAEF,CAEekO,SAAAA,GAAYC,GAC1B,IAAYtF,EAAG,GACf,EAAG,CACD,IAAOlC,EAAGwH,EAAOzH,MAAM,gBACjB0H,EAAIH,GAAStH,EAAE,IAErB,KADAwH,EAASA,EAAO5G,OAAOZ,EAAE,GAAG3F,OAAS,MACrB6H,EAAO7H,OACrB,SAEF6H,EAAO7F,KAAKoL,EACb,OAAQD,GACT,OAAOtF,CACR,CAEK,SAAAwF,GAAmBF,GAEvB,IADA,IAAMG,EAAM,CAAA,EACLH,GAAQ,CACb,IAAMxH,EAAIwH,EAAOzH,MAAM,4BACvB,IAAKC,EACH,OAAO2H,EAETA,EAAI3H,EAAE,IAAMuH,GAAYvH,EAAE,IAC1BwH,EAASA,EAAO5G,OAAOZ,EAAE,GAAG3F,OAC7B,CACD,OAAOsN,CACR,CAQD,oBACEC,WAAAA,SAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,UAUF,OAVEA,EAAAA,SAAA,SAASC,GACPA,EAAGrD,OAAO,IACX,EAGDsD,EAAAA,QAAA,SAAQC,GACN,OACD,CAAA,EAGHC,CAAA,CAVEJ,mBAWA,WAAA,SAAAK,EACkB5K,EACA6K,EACAC,GAAuBzN,KAFvB2C,WAEuB,EAAA3C,KADvBwN,QACuB,EAAAxN,KAAvByN,cAFA,EAAAzN,KAAK2C,MAALA,EACA3C,KAAEwN,GAAFA,EACAxN,KAAQyN,SAARA,CACd,CALN,IAQEP,EAAAA,EAAAA,UARF,OAQEA,EAAAA,SAAA,SAASC,GACPA,EAAGrD,OAAO,KACVqD,EAAGrD,OAAO9J,KAAK2C,MAAMiE,aACjB5G,KAAKwN,IAAMxN,KAAKyN,YAClBN,EAAGrD,OAAO,KACN9J,KAAKwN,IACPL,EAAGrD,OAAO9J,KAAKwN,IAEbxN,KAAKyN,WACPN,EAAGrD,OAAO,OACVqD,EAAGrD,OAAO9J,KAAKyN,WAEjBN,EAAGrD,OAAO,KAEb,EAtBHE,EAyBEoD,QAAA,SAAQC,GACN,GAAyB,GAArBA,EAAIb,KAAKC,SACX,MAAU1N,IAAAA,MAAM,qBAElB,IAGA2O,EAHUlF,EAAG6E,EAAIb,KACEmB,EAAGnF,EAAKoF,SACJC,EAAGF,EAAchO,OAExBiI,EAAGX,KAAKC,MAAMlH,KAAK2C,MAAQ,GAAK,EAChD,GAAIiF,EAAa,GAA0B,GAArBiG,EAEpBR,EAAIb,MADJkB,EAAQlF,EAAKsF,aACOtF,MACf,CAEL,GADAkF,EAAQC,EAAc1G,KAAK8G,IAAInG,EAAYiG,EAAoB,IAC9C,EAAb7N,KAAK2C,MAAW,CAClB,IAAMqL,EAAON,EAAMO,YACdD,GAAyB,GAAjBA,EAAKvB,SAGhBiB,EAAQM,EAFRX,EAAIa,OAAQ,CAIf,CACDb,EAAIb,KAAOkB,CACZ,CACD,GAAI1N,KAAKwN,KAAOH,EAAIa,OAASlO,KAAKwN,IAAMjB,GAAMc,EAAIb,OAAQ,CACxD,IAAe2B,EAAG3F,EAAK4F,cAAcC,eAAerO,KAAKwN,IACrDW,EACFd,EAAIb,KAAO2B,EAEX1L,EAAexB,KAAK,qBAAsBjB,KAAKwN,GAElD,CAED,OADAH,EAAII,SAAWzN,KAAKyN,UACb,CACR,EA3DHF,CAAA,CACE,GA6DFe,gBAAA,WACE,SACkBC,EAAAA,EACAC,EACAC,EACAhB,GAHAc,KAAAA,mBACAC,gBAEuB,EAAAxO,KADvByO,eACuB,EAAAzO,KAAvByN,cAAuB,EAHvBzN,KAAMuO,OAANA,EACAvO,KAAUwO,WAAVA,EACAxO,KAASyO,UAATA,EACAzO,KAAQyN,SAARA,CACd,CANN,IAAAiB,EAAAJ,EAAA/K,UAkEA,OAlEAmL,EAQEtB,QAAA,SAAQC,GACN,GAAIrN,KAAKuO,OAAS,IAAMlB,EAAIa,MAAO,CAGjC,IAFA,IAAIK,EAASvO,KAAKuO,OACV/B,EAAGa,EAAIb,OACF,CACX,IAAMC,EAAWD,EAAKC,SACtB,GAAgB,GAAZA,EACF,MAEF,IAAUuB,EAAGxB,EAAKyB,YAClB,GAAI,GAAKxB,GAAYA,GAAY,EAAG,CAClC,IAAMkC,EAAanC,EAAKoC,YAAYjP,OACpC,GAAI4O,GAAUI,EACZ,MAEF,IAAKX,EAAM,CACTO,EAASI,EACT,KACD,CACDJ,GAAUI,CACX,CACD,IAAKX,EAAM,CACTO,EAAS,EACT,KACD,CACD/B,EAAOwB,CACR,CACDX,EAAIb,KAAOA,EACXa,EAAIkB,OAASA,CACd,CAED,OADAlB,EAAII,SAAWzN,KAAKyN,UAErB,CAAA,EAGDP,EAAAA,SAAA,SAASC,GACPA,EAAGrD,OAAO,KACVqD,EAAGrD,OAAO9J,KAAKuO,OAAO3H,aAClB5G,KAAKwO,YAAcxO,KAAKyO,WAAazO,KAAKyN,YAC5CN,EAAGrD,OAAO,MACN9J,KAAKwO,YAAcxO,KAAKyO,aACtBzO,KAAKwO,YACPrB,EAAGrD,OAAO+E,GAAO7O,KAAKwO,aAExBrB,EAAGrD,OAAO,KACN9J,KAAKyO,WACPtB,EAAGrD,OAAO+E,GAAO7O,KAAKyO,aAGtBzO,KAAKyN,WACPN,EAAGrD,OAAO,OACVqD,EAAGrD,OAAO9J,KAAKyN,WAEjBN,EAAGrD,OAAO,KAEb,EAGHwE,CAAA,CAlEA,GAkEAQ,gBAAA,WAAA,SAAAA,IAAA9O,KACE+O,MAAgB,IADlB,CAGEC,IAAAA,EAAAA,EAAAA,UAHF,OAGEA,EAAAA,WAAA,SAAWC,GACT,IAAI3J,EAAI2J,EAAQ5J,MAAM,uBACtB,IAAKC,EACH,MAAUvG,IAAAA,MAAM,iBAKlB,IAHA,MAAYmQ,mBAAmB5J,EAAE,IAC5BpB,EAAG,EACF6K,EAAQ,KACD,CACX,IAEC9B,OAAA,EACD,OAAQtO,EAAIwQ,OAAOjL,IACjB,IAAK,IAKH,GAJAA,MACAoB,EAAI3G,EACDuH,OAAOhC,GACPmB,MAAM,kDAEP,MAAUtG,IAAAA,MAAM,yBAElBmF,GAAKoB,EAAE,GAAG3F,OACV,IAAWgD,EAAGyM,SAAS9J,EAAE,GAAI,IACvBkI,EAAKlI,EAAE,GACb2H,EAAMD,GAAS1H,EAAE,IACjByJ,EAAMpN,KAAK,IAAI4L,GAAU5K,EAAO6K,EAAI6B,EAAcpC,EAAG,KACrD,MAEF,IAAK,IAOH,GANA/I,MACAoB,EAAI3G,EACDuH,OAAOhC,GACPmB,MACC,4FAGF,MAAUtG,IAAAA,MAAM,yBAElBmF,GAAKoB,EAAE,GAAG3F,OACV,IAAM4O,EAASa,SAAS9J,EAAE,GAAI,IAChBkJ,EAAGlJ,EAAE,GACfkJ,IACFA,EAAa5B,GAAS4B,IAExB,IAAaC,EAAGnJ,EAAE,GACdmJ,IACFA,EAAY7B,GAAS6B,IAEvBxB,EAAMD,GAAS1H,EAAE,KACjByJ,EAAMpN,KACJ,OACE4M,EACAC,EACAC,EACAY,EAAcpC,EAAG,KAGrB,MAEF,IAAK,IACH/I,IACA6K,EAAMpN,KAAK,IAAX2L,IACA,MACF,IAAK,IACL,IAAK,IAIL,IAAK,GAEH,YADAtN,KAAK+O,MAAQA,GAEf,QACE,MAAUhQ,IAAAA,MAAM,qBAErB,CACF,EAEDuQ,EAAAA,SAAA,SAASC,GAQP,IAPA,IAAMlC,EAAM,CACVb,KAAM+C,EAAIC,gBACVjB,OAAQ,EACRL,OAAO,EACPT,SAAU,KACVgC,IAAK,MAEEvL,EAAI,EAAGA,EAAIlE,KAAK+O,MAAMpP,OAAQuE,IACrC,IAAKlE,KAAK+O,MAAM7K,GAAGkJ,QAAQC,GAAM,CAC/BA,EAAIoC,IAAM,IAAIX,EACdzB,EAAIoC,IAAIV,MAAQ/O,KAAK+O,MAAMW,MAAMxL,EAAI,GACrC,KACD,CAEH,OAAOmJ,CACR,EAEDsC,EAAAA,KAAA,SAAKC,EAAc1B,GACjB,OAAO0B,EACJrJ,QAAQ,OAAQ,KAChBlB,MACC6I,EACI,gCACA,iCACJ,GACD3H,QAAQ,MAAO,IACfA,QAAQ,MAAO,GACnB,IAKDsJ,oBAAA,SACErD,EACA+B,EACAL,EACAT,GAMA,IAJA,IAAWsB,EAAG,GACV5H,EAASqF,EAAKsD,WACdtB,EAAa,GACbC,EAAY,GACTjC,GAAM,CACX,OAAQA,EAAKC,UACX,KAAK,EACL,OACA,KAAA,EACE,MAAaD,EAAKoC,cACCgB,EAAKjQ,OACpBuO,GACFK,GAAUI,EACLH,IACHA,EAAaoB,KAGXrB,EAASI,IACXJ,EAASI,GAEXT,GAAQ,EACRM,EAAaoB,EAAK1J,OAAO,EAAGqI,GAC5BE,EAAYmB,EAAK1J,OAAOqI,IAE1B/B,EAAOA,EAAKuD,gBACZ,SAEF,OACEvD,EAAOA,EAAKuD,gBACZ,SAEJ,KACD,CAOD,KANIxB,EAAS,GAAKC,GAAcC,KAC9BD,EAAaxO,KAAK2P,KAAKnB,GAAY,GACnCC,EAAYzO,KAAK2P,KAAKlB,GAAW,GACjCM,EAAMpN,KAAK,IAAI2M,GAAWC,EAAQC,EAAYC,EAAWhB,IACzDA,EAAW,MAENtG,GACAA,GAA6B,GAAnBA,EAAOsF,UADT,CAMb,IAFA,IAAMe,EAAKU,EAAQ,KAAO3B,GAAMC,GAC5B7J,EAAQuL,EAAQ,EAAI,EACjB1B,GACgB,GAAjBA,EAAKC,WACP9J,GAAS,GAEX6J,EAAOA,EAAKuD,gBAEdhB,EAAMpN,KAAK,IAAA4L,GAAc5K,EAAO6K,EAAIC,IACpCA,EAAW,KACXjB,EAAOrF,EACPA,EAASA,EAAO2I,WAChB5B,GAAQ,CACT,CACDa,EAAMiB,UACFhQ,KAAK+O,OACPA,EAAMpN,KAAK,IAAX2L,IACAtN,KAAK+O,MAAQA,EAAMrP,OAAOM,KAAK+O,QAE/B/O,KAAK+O,MAAQA,CAEhB,EAEDnI,EAAAA,SAAA,WACE,IAAK5G,KAAK+O,MACR,MAAO,GAET,IAAM5B,EAAK,OACXA,EAAGrD,OAAO,YACV,IAAK,IAAK5F,EAAG,EAAGA,EAAIlE,KAAK+O,MAAMpP,OAAQuE,IACrClE,KAAK+O,MAAM7K,GAAGgJ,SAASC,GAGzB,OADAA,EAAGrD,OAAO,KACHqD,EAAGvG,WAAWL,QAAQ,KAAM,MACpC,EApMHuI,CAAA,CAAA,YCpLMmB,GAA2BC,GAC/B,MAAO,CACLC,WAAYD,EAAKC,WACjBC,WAAYF,EAAKE,WACjBC,OAAQH,EAAKG,OACbC,UAAWJ,EAAKI,UAChBC,YAAaL,EAAKK,YAClBC,WAAYN,EAAKM,WACjBC,UAAWP,EAAKO,UAChBC,WAAYR,EAAKQ,WACjBC,WAAYT,EAAKS,WACjBC,kBAAmB9M,OAAO+M,OAAO,CAAd,EAAkBX,EAAKU,mBAC1CE,iBAAkBZ,EAAKY,iBACnBhN,OAAO+M,OAAO,CAAd,EAAkBX,EAAKY,uBACvBC,EAEP,CAEYC,IAAAA,GAjCJ,CACLb,WAAY,QACZC,WAAY,KACZC,OAAQ,EACRC,WAAW,EACXC,YAAa,GACbC,YAAY,EACZC,WAAW,EACXC,YAAY,EACZC,WAAY,EACZC,kBAAmB,CAAEK,aAAa,EAAMC,OAAO,GAC/CJ,sBAAkBC,MAiCX,CAAA,EAOKI,SAAAA,GACdC,EACAC,EACAC,EACAC,GAEA,MAActK,KAAK8G,KAAKqD,EAAQ,GAAKE,GAAOD,EAAQ,GAAKE,GACzD,MAAA,UAAiBC,EAAaA,QAAAA,SAC/B,CAKeC,SAAAA,GAAU9S,GACxB,MAAW0Q,IAAAA,GAAA,GAAqB1Q,MACjC,UAKK+S,GAAmBtP,GACvB,OAAOiN,GAAA,GAAuBjN,EAC/B,CAEeuP,SAAAA,GACdC,EACAC,GAEA,OAAID,EACQvC,GAAoBuC,OAAYvC,GAAoBwC,GAErDC,GAAgBD,EAC5B,CAEUE,IAAAA,GAAuB,EAKlCC,gBAAA,WAWE,WACS7K,EACA8K,GAUP,QAXO9K,YAC2C,EAAAnH,KAA3CiS,cAZTC,EAAAA,KAAAA,qBACAtE,SAA2B,GAWyB5N,KAVpDmS,UACAC,EAAAA,KAAAA,gBACAC,WAQoD,EAAArS,KAPpDsS,YACAC,EAAAA,KAAAA,OAAiC,CAAA,OACjCC,MAAgC,CAAA,EAChCC,KAAAA,SAA2D,CAIP,EAD3CzS,KAAMmH,OAANA,EACAnH,KAAQiS,SAARA,EAEPjS,KAAKkS,SAAeH,IAAAA,KACpB/R,KAAKmS,KAAO,OAAUnS,KAAM,GAC5BA,KAAKoS,IAAM,OAAUpS,KAAM,GAC3BA,KAAKqS,MAAQ,OAAUrS,MAAM,GAC7BA,KAAKsS,OAAS,OAAUtS,MAAM,GAC1BmH,GACFA,EAAOyG,SAASjM,KAAK3B,OAElBmH,EAAQ,CAEX,IAAMsL,EAAWzS,KAAKyS,SACtBA,EAAQ,MAAYxL,KAAKC,MACzBuL,EAAQ,KAAWxL,KAAKyL,KACxBD,EAAQ,MAAYxL,KAAK0L,MACzBF,EAAQ,KAAWxL,KAAK2L,KACxBH,EAAQ,IAAUxL,KAAK8G,IACvB0E,EAAQ,IAAUxL,KAAK4L,IACvBJ,EAAQ,UAAgBtB,GACxBsB,EAAS,cAAgBhB,GACzBgB,EAAS,YAAcf,GACvBe,EAAQ,OAAa,SAACK,GAAD,cAAcA,CAAd,EACrB9S,KAAK+S,kBAAkB,aAAc,WACnC,OAAO/S,KAAKgT,WACb,GACDhT,KAAK+S,kBAAkB,cAAe,WACpC,YAAYE,YACb,GACDjT,KAAK+S,kBAAkB,mBAAoB,WACzC,OAAO/S,KAAKkQ,KAAKC,UAClB,GACDnQ,KAAK+S,kBAAkB,kBAAmB,WACxC,OAAO/S,KAAKkQ,KAAKO,SAClB,GACDzQ,KAAK+S,kBAAkB,iBAAkB,WACvC,OAAO/S,KAAKkQ,KAAKI,SAClB,GACDtQ,KAAK+S,kBAAkB,cAAe,WACpC,YAAY7C,KAAKG,MAClB,GACDrQ,KAAK+S,kBAAkB,mBAAoB,WACzC,YAAY7C,KAAKE,UAClB,GACDpQ,KAAK+S,kBAAkB,oBAAqB,WAC1C,YAAY7C,KAAKK,YAAcvQ,KAAKkT,QACrC,GACDlT,KAAK+S,kBAAkB,kBAAmB,WACxC,YAAY7C,KAAKM,UAClB,GACDxQ,KAAK+S,kBAAkB,mBAAoB,WACzC,YAAY7C,KAAKQ,UAClB,GAGD1Q,KAAK+S,kBAAkB,YAAa,WAClC,UAAiB/S,KAAKmT,SAAWnT,KAAKmT,SAAW,GAClD,GACDnT,KAAK+S,kBAAkB,YAAa,WAClC,UAAiB/S,KAAKoT,SAAWpT,KAAKoT,SAAW,GAClD,EACF,CACF,CA3EH,2BA6EEL,kBAAA,SAAkB3Q,EAAcC,GAC9BrC,KAAKuS,OAAOnQ,GAAQ,IAAAiR,GAAWrT,KAAMqC,EAAID,EAC1C,EAEDkR,EAAAA,WAAA,SAAWC,EAAuBC,GAChCxT,KAAKuS,OAAOgB,GAAiBC,CAC9B,EAEDC,EAAAA,WAAA,SAAWF,EAAuBC,GAChCxT,KAAKwS,MAAMe,GAAiBC,CAC7B,IAEDE,cAAA,SAAcH,EAAuBlR,GACnCrC,KAAKyS,SAASc,GAAiBlR,CAChC,IA3FH,GA6GM,YAAuCsR,GAC3C,OAAA,MAAQA,OAAR,EAAQA,EAAM1N,eACZ,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,OAAA,EACF,QACE,OAAO,EAEZ,CAyBY2N,IAAAA,GAA8C,CACzDC,GAAI,EACJC,GAAI,GACJC,GAAI,EAAI,EACRC,GAAI,GACJC,GAAI,GAAK,KACTC,GAAI,GAAK,KACTC,EAAG,GAAK,KAAO,GACfC,GAAI,GACJC,IAAK,GACLC,GAAI,EACJC,GAAI,GACJC,IAAK,GAELC,KAAM,EACNC,IAAK,EAAI,GACTC,KAAM,KAAO,IAMT,YAA6BhB,GACjC,OAAQA,GACN,IAAK,IACH,OAAQiB,IAAI3M,SAAS,YAAa,MACpC,IAAK,KACH,OAAQ2M,IAAI3M,SAAS,cAAe,OACtC,IAAK,MACL,IAAK,MACH,OAAO,EACT,QACE,SAEL,CASY4M,IAAAA,2BAkBX,SACkBC,EAAAA,EACAC,EACAC,EAChB9B,GAAgBlT,KAHA8U,eACAC,EAAAA,KAAAA,0BACAC,oBACA,EAAAhV,KArBRiV,gBAAiC,KAC3CjC,KAAAA,sBACUkC,iBAAkC,KAC5CjC,KAAAA,gBACAkC,EAAAA,KAAAA,4BACAC,aAA8B,KAC9BC,KAAAA,uBAAyC,KAevBrV,KAdlBkT,cAckB,EAAAlT,KAblBsV,eAAgC,UAChCpF,UAYkB,EAAAlQ,KAXlBuV,OAA0C,CAAA,EAC1CC,KAAAA,cAA+B,KAUbxV,KATlByV,eAAgC,UAChCC,aAA+B,KAQb1V,KAPlBmT,SAA0B,UAC1BC,SAA0B,KAGRpT,KAAS8U,UAATA,EACA9U,KAAa+U,cAAbA,EACA/U,KAAcgV,eAAdA,EAGhBhV,KAAKgT,UAAY,WACf,OAAIhT,KAAKiV,qBACKA,qBAEA/E,KAAKQ,WACbzJ,KAAKC,MAAM6N,EAAgB,GAAK/U,KAAKkQ,KAAKS,WAC1CoE,CAEP,EACD/U,KAAKiT,WAAa,WAChB,OAAIjT,KAAKkV,sBACKA,iBAGbF,CACF,EACDhV,KAAKmV,gBAAkBjC,EACvBlT,KAAKkT,SAAW,WACd,OAAIlT,KAAKoV,aACApV,KAAKoV,aAELlC,CAEV,EACDlT,KAAKkQ,KAAOc,EACb,CAjDH,IAAAhH,EAAA6K,EAAAtR,UAAA,OAAAyG,EAmDU2L,gBAAA,SAAgBC,GACtB,IAAIlL,EAAI1K,KAAKuV,OAAOK,EAAM1D,UAK1B,OAJKxH,IAEH1K,KAAKuV,OAAOK,EAAM1D,UADlBxH,EAAI,CAAA,IAIP,EA1DHV,EA4DE6L,WAAA,SAAWD,GACT5V,KAAKuV,OAAOK,EAAM1D,UAAY,CAA9B,EACA,IAAK,IAAK1G,EAAG,EAAGA,EAAIoK,EAAMhI,SAASjO,OAAQ6L,IACzCxL,KAAK6V,WAAWD,EAAMhI,SAASpC,GAElC,EAEDsK,EAAAA,cAAA,SAAcnC,EAAcoC,GAC1B,GAAIC,GAA6BrC,GAAO,CACtC,IAASsC,EAAGjW,KAAKgT,YAAc,IACtBkD,EAAGlW,KAAKiT,aAAe,IACxBkD,EAAyB,MAAtBnW,KAAKwV,cAAwBxV,KAAKwV,cAAgB,IAAMS,EAC3DG,EAA0B,MAAvBpW,KAAKyV,eAAyBzV,KAAKyV,eAAiB,IAAMS,EAErE,OAAQvC,GACN,IAAK,KACH,SACF,IAAK,KACH,SACF,IAAK,KACH,OAAY+B,KAAAA,aAAeU,EAAKD,EAClC,IAAK,KACH,YAAYT,aAAeS,EAAKC,EAClC,IAAK,OACH,SAAYA,EAAKD,EAAKC,EACxB,IAAK,OACH,OAASD,EAAGC,EAAKD,EAAKC,EACxB,IAAK,MACH,OAAOH,EACT,IAAK,MACH,OAAOC,EACT,IAAK,MACH,YAAYR,aAAeQ,EAAMD,EACnC,IAAK,MACH,YAAYP,aAAeO,EAAMC,EACnC,IAAK,QACH,SAAaA,EAAMD,EAAMC,EAC3B,IAAK,QACH,OAAUD,EAAGC,EAAMD,EAAMC,EAE9B,CACD,MAAY,MAARvC,GAAwB,OAARA,EACXoC,EAAS/V,KAAKmV,gBAAkBnV,KAAKkT,WAElC,MAARS,EAEiBC,GAAA,IACdmC,EAAS/V,KAAKmV,gBAAkBnV,KAAKkT,YACxCU,GAAgB,GAGR,MAARD,GAAwB,OAARA,EAEX3T,KAAKsV,eAGS1B,GAACD,EACzB,IAED0C,SAAA,SAAST,EAAqBrC,GAC5B,EAAG,CACD,IAAOC,EAAGoC,EAAMrD,OAAOgB,GACvB,GAAIC,EACF,SAEF,GAAIoC,EAAM3D,WACRuB,EAAMoC,EAAM3D,SAASvO,KAAK1D,KAAMuT,GAAe,IAE7C,OACDC,EAEHoC,EAAQA,EAAMzO,MACf,OAAQyO,GACT,UAAM7W,MAAA,SAAmBwU,EAC1B,iBAAA,EAKD+C,EAAAA,SAAA,SACEV,EACArC,EACAgD,EACAC,GAEA,EAAG,CACD,MAAWZ,EAAMpD,MAAMe,GACvB,GAAIkD,EACF,SAEF,GAAIb,EAAM3D,WACRwE,EAAOb,EAAM3D,SAASvO,KAAK1D,KAAMuT,GAAe,IAE9C,SAGJ,IAAQlR,EAAGuT,EAAMnD,SAASc,GAC1B,GAAIlR,EAAI,CACN,GAAImU,EACF,SAAarE,KAGf,IADA,IAAMlT,EAAOE,MAAMoX,EAAO5W,QACjBuE,EAAI,EAAGA,EAAIqS,EAAO5W,OAAQuE,IACjCjF,EAAKiF,GAAKqS,EAAOrS,GAAGwS,SAAS1W,MAE/B,OAAW2W,IAAAA,GAAMf,EAAOvT,EAAG5B,MAAMT,KAAMf,GACxC,CACD2W,EAAQA,EAAMzO,MACf,OAAQyO,GACT,MAAU7W,IAAAA,mBAAmBwU,EAAvB,iBACP,EA1KHvJ,EA4KE4M,cAAA,SAAcxU,EAAcyU,GAC1B,IAAaC,EAAY,QAAT1U,KAAoBpC,KAAKkQ,KAAKU,kBAAkBxO,GAChE,OAAUyU,GAAIC,EAAUA,CACzB,IAEDC,cAAA,SAAcC,EAAiBxY,GAC7B,IAAIuJ,EAAS,GACNzC,EAAG0R,EAAQ3R,MAAM,oBACpBC,IACFyC,EAASzC,EAAE,GACX0R,EAAU1R,EAAE,IAEd,IAAO2R,EAAkB,OACG,KAC5B,OAAQD,GACN,IAAK,QACL,IAAK,SACL,IAAK,eACL,IAAK,gBACL,IAAK,QACCxY,IACFyY,EAAMzY,EAAMkY,SAAS1W,OAI3B,OAAQgX,GACN,IAAK,QACHE,EAASlX,KAAKgT,YACd,MACF,IAAK,SACHkE,EAASlX,KAAKiT,aACd,MACF,IAAK,eACHiE,EAAStS,OAAOuS,OAAOC,WACvB,MACF,IAAK,gBACHF,EAAStS,OAAOuS,OAAOE,YACvB,MACF,IAAK,QACHH,EAAStS,OAAOuS,OAAOG,WAG3B,GAAc,MAAVJ,GAAyB,MAAPD,EACpB,OAAQlP,GACN,IAAK,MACH,UAAiBkP,EACnB,IAAK,MACH,UAAiBA,EACnB,QACE,OAAaC,GAAID,OAEhB,GAAc,MAAVC,GAA2B,MAAT1Y,EAC3B,OAAkB,IAAX0Y,EAET,OACD,CAAA,IAEDK,iBAAA,SAAiBnV,EAAc5D,EAAegZ,GAC5C,OACD,CAAA,IAEDC,SAAA,SAAS7B,EAAqBvK,GAC5B,IAAMX,EAAIkL,GAAS5V,KAAKuV,OAAOK,EAAM1D,UACrC,OAAQxH,EAAGA,EAAEW,QAAO0F,CACrB,EAED2G,EAAAA,SAAA,SAAS9B,EAAqBvK,EAAamI,GACzCxT,KAAK2V,gBAAgBC,GAAOvK,GAAOmI,CACpC,EAhPHqB,CAAA,IAwPA8C,gBAAA,WAGE,WAAmB/B,QAAAA,WAAmB,EAAA5V,KAFtCqL,SAEsC,EAAnBrL,KAAK4V,MAALA,EACjB5V,KAAK4V,MAAQA,EACb5V,KAAKqL,QAAU0G,IAChB,CANH,IASEnL,EAAAA,EAAAA,UAkEF,OAlEEA,EAAAA,SAAA,WACE,IAAMgR,EAAM,IAAIvI,GAEhB,OADArP,KAAKkN,SAAS0K,EAAK,KACRhR,UACZ,EAbH8H,EAeExB,SAAA,SAAS0K,EAAwBC,GAC/B,MAAU9Y,IAAAA,MAAM,aACjB,EAjBH2P,EAmBYoJ,aAAA,SAAaC,GACrB,MAAM,UAAU,aACjB,EArBHrJ,EAuBEsJ,OAAA,SAAOD,EAAkBxB,GACvB,OACDvW,IAAA,IAEDiY,WAAA,SACEC,EACAH,EACAI,GAEA,OAAYD,IAAKlY,IAClB,EAjCH0O,EAmCE0J,YAAA,SACEF,EACAH,EACAI,GAEA,MAAeA,EAAgBnY,KAAKqL,KACpC,GAAc,MAAVgN,EACF,OAAIA,IAAWC,IAIhBD,EACCF,EAAgBnY,KAAKqL,KAAOiN,GAC5B,IAAM9Q,EAASxH,KAAKiY,WAAWC,EAAOH,EAASI,GAE/C,OADAA,EAAgBnY,KAAKqL,KAAO7D,EAE7BA,CACF,EApDHkH,EAsDE6J,OAAA,SAAOL,EAAYH,GACjB,YAAYK,YAAYF,EAAOH,EAAS,CAAjC,EACR,EAEDrB,EAAAA,SAAA,SAASqB,GACP,IAAUvQ,EAAGuQ,EAAQN,SAASzX,KAAK4V,MAAO5V,KAAKqL,KAC/C,YAAqB,IAAV7D,IAGXA,EAASxH,KAAK8X,aAAaC,GACvB/X,KAAK4V,OACPmC,EAAQL,SAAS1X,KAAK4V,MAAO5V,KAAKqL,IAAK7D,KAG1C,EAEDgR,EAAAA,YAAA,WACE,OACD,CAAA,EAGHb,CAAA,CA3EA,mBA4EE,SAAAc,GAAA,SAAAC,EAAY9C,EAA4BpC,GACtC,IAAAmF,EAD8C,OAC9CA,EAAAF,EAAA/U,KAAA1D,KAAM4V,IADwC5V,MAARwT,SAAA,EAAAmF,EAAGnF,IAAHA,EAEvCmF,CAAA,CAFDC,EAAAF,EAAAD,GADF,IAKYI,EAAAA,EAAAA,UALgBlB,OAKhBkB,EAAAA,MAAA,WACR,MAAU9Z,IAAAA,MAAM,aACjB,EAPH+Z,EASEC,WAAA,SAAWvF,GACT,MAAUzU,IAAAA,MAAM,aACjB,EAXH+Z,EAaWhB,aAAA,SAAaC,GACpB,IAAMvE,EAAMxT,KAAKwT,IAAIkD,SAASqB,GAC9B,OAAO/X,KAAK+Y,WAAWvF,EACxB,EAhBHsF,EAkBWb,WAAA,SACPC,EACAH,EACAI,GAEA,WACYnY,MAAQA,KAAKwT,IAAI4E,YAAYF,EAAOH,EAASI,EAE1D,EA1BHW,EA4BW5L,SAAA,SAAS0K,EAAwBC,GACpC,GAAKA,GACPD,EAAI9N,OAAO,KAEb8N,EAAI9N,OAAO9J,KAAK6Y,SAChB7Y,KAAKwT,IAAItG,SAAS0K,EAAK,IACnB,GAAKC,GACPD,EAAI9N,OAAO,IAEd,IAEQkO,OAAA,SAAOD,EAAkBxB,GAChC,IAAM/C,EAAMxT,KAAKwT,IAAIwE,OAAOD,EAASxB,GACrC,OAAI/C,IAAQxT,KAAKwT,SAGP,SAAUwF,YAAoBhZ,KAAK4V,MAAOpC,EAErD,EA9CyBmE,CAAAA,CAC1B,CAD0BA,IAiDfsB,4BACX,SAAYrD,EAAAA,EAA4BsD,EAAiBC,SAAQ,OAC/DC,EAAMxD,EAAAA,KAAAA,KAAAA,UADgCsD,aAAiBC,SAAQ,EAAzBC,EAAGF,IAAHA,EAAiBE,EAAGD,IAAHA,EAAQC,CAEhE,QAHH,IAAAC,EAAAJ,EAAA1V,UAAA,OAAA8V,EAKEC,YAAA,WACE,MAAM,UAAU,aACjB,IAEDT,MAAA,WACE,UAAM9Z,MAAU,aACjB,EAEDwa,EAAAA,UAAA,SAAUL,EAAaC,GACrB,UAAMpa,MAAU,aACjB,IAEQ+Y,aAAA,SAAaC,GACpB,IAAMmB,EAAMlZ,KAAKkZ,IAAIxC,SAASqB,GACxBoB,EAAMnZ,KAAKmZ,IAAIzC,SAASqB,GAC9B,OAAO/X,KAAKuZ,UAAUL,EAAKC,EAC5B,EArBHE,EAuBWpB,WAAA,SACPC,EACAH,EACAI,GAEA,WACYnY,MACVA,KAAKkZ,IAAId,YAAYF,EAAOH,EAASI,IACrCnY,KAAKmZ,IAAIf,YAAYF,EAAOH,EAASI,EAExC,IAEQjL,SAAA,SAAS0K,EAAwBC,GACxC,IAAM2B,EAAexZ,KAAKsZ,cACtBE,GAAgB3B,GAClBD,EAAI9N,OAAO,KAEb9J,KAAKkZ,IAAIhM,SAAS0K,EAAK4B,GACvB5B,EAAI9N,OAAO9J,KAAK6Y,SAChB7Y,KAAKmZ,IAAIjM,SAAS0K,EAAK4B,GACnBA,GAAgB3B,GAClBD,EAAI9N,OAAO,IAEd,EAEQkO,EAAAA,OAAA,SAAOD,EAAkBxB,GAChC,MAAYvW,KAAKkZ,IAAIlB,OAAOD,EAASxB,GAC/B4C,EAAMnZ,KAAKmZ,IAAInB,OAAOD,EAASxB,GACrC,OAAI2C,IAAQlZ,KAAKkZ,KAAOC,IAAQnZ,KAAKmZ,IAC5BnZ,KAEC,IAAKA,KAAKgZ,YAAoBhZ,KAAK4V,MAAOsD,EAAKC,EAE1D,EAxDHF,CAAA,EAA2BtB,IA2D3B8B,gBAAA,SAAAC,GACE,WAAY9D,EAAqBsD,EAAUC,GAAQ,mBAC3CvD,EAAOsD,EAAKC,IACnBnZ,IAAA,QAHH4Y,EAAAa,EAAAC,GAKWJ,EAAAA,UAAAA,YAAA,WACP,OACD,CAAA,IAPH,CAA6BL,IAUhBU,4BACX,SAAY/D,EAAAA,EAAqBsD,EAAUC,GAAQ,OAC3CvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,IAD+BnZ,IAElD,eAEQsZ,EAAAA,UAAAA,YAAA,WACP,OACD,CAAA,KAP6BL,IAUhCW,gBAAA,SAAAC,GACE,SAAYjE,EAAAA,EAAqBsD,EAAUC,GAAQ,mBAC3CvD,EAAOsD,EAAKC,IAD+BnZ,IAElD,CAH2BiZ,OAA9BL,EAAAgB,EAAAC,GAKWP,EAAAA,UAAAA,YAAA,WACP,OAAO,CACR,EAP2BL,CAAAA,CAA9B,CAA8BA,IAUjBa,4BACX,SAAYlE,EAAAA,EAAqBsD,EAAUC,UACnCvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,QACnB,CAHH,cAAAW,EAAAvW,UAKW+V,YAAA,WACP,OAAO,CACR,EAPHQ,CAAA,EAAoCb,oBAWlC,SAAAc,GAAA,SAAAC,EAAYpE,EAAqBpC,GAAQ,mBACjCoC,EAAOpC,IAD0BxT,IAExC,CAFD4Y,EAAAoB,EAAAD,GADF,IAKWlB,EAAAA,EAAAA,iBAAAA,EAAAA,MAAA,WACP,MAAO,GACR,IAEQE,WAAA,SAAWvF,GAClB,OAAQA,CACT,IAVD,CADuBkF,IAczBuB,gBAAA,SAAAC,GACE,SAAYtE,EAAAA,EAAqBpC,UACzBoC,EAAAA,KAAAA,KAAAA,EAAOpC,IACdxT,IAAA,CAHH,OAAA4Y,EAAAqB,EAAAC,eAKWrB,MAAA,WACP,MAAO,MACR,EAPHoB,CAAA,CAAA,CAA8BD,IAU9BG,gBAAA,SAAAC,GACE,WAAYxE,EAAqBpC,GAAQ,OACjCoC,EAAAA,KAAAA,KAAAA,EAAOpC,QACd,CAHHoF,EAAAuB,EAAAC,GAAA,IAAAC,EAAAF,EAAA5W,UAAA,OAAA8W,EAKWxB,MAAA,WACP,MAAO,GACR,EAPHwB,EASWtB,WAAA,SAAWvF,GAClB,OAAQA,CACT,EAXH2G,CAAA,CAAA,CAA4BzB,oBAe1B,SAAA4B,GAAA,SAAAC,EAAY3E,EAAqBsD,EAAUC,UACnCvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,QACnB,CAFDP,EAAA2B,EAAAD,GADF,IAAAE,EAAAD,EAAAhX,iBAAAiX,EAKW3B,MAAA,WACP,MAAO,IACR,EAPH2B,EASW1C,aAAA,SAAaC,GACpB,OAAYmB,KAAAA,IAAIxC,SAASqB,IAAY/X,KAAKmZ,IAAIzC,SAASqB,EACxD,IAVD,CADuB0B,IAczBgB,gBAAA,SAAAC,GACE,WAAY9E,EAAqBsD,EAAUC,GAAQ,mBAC3CvD,EAAOsD,EAAKC,IAD+BnZ,IAElD,CAH2Bua,OAA9B3B,EAAA6B,EAAAC,GAKW7B,EAAAA,UAAAA,MAAA,WACP,MAAO,OACR,EAP2B0B,CAAAA,CAA9B,CAA8BA,IAUjBI,4BACX,SAAY/E,EAAAA,EAAqBsD,EAAUC,GAAQ,mBAC3CvD,EAAOsD,EAAKC,IACnBnZ,IAAA,QAHH,IAKW6Y,EAAAA,EAAAA,UALaY,OAKbZ,EAAAA,MAAA,WACP,MAAO,IACR,IAEQf,aAAA,SAAaC,GACpB,YAAYmB,IAAIxC,SAASqB,IAAY/X,KAAKmZ,IAAIzC,SAASqB,EACxD,EAXqB0B,CAAAA,EAAAA,oBAetB,SAAAmB,GAAA,SAAAC,EAAYjF,EAAqBsD,EAAUC,GACzC,OAAAyB,EAAAlX,KAAA1D,KAAM4V,EAAOsD,EAAKC,QACnB,CAHH,OACEP,EAAAiC,EAAAD,GADFC,EAAAtX,UAKWsV,MAAA,WACP,MAAO,IACR,EAPHgC,CAAA,CACE,CADyBF,IAU3BG,gBAAA,SAAAC,GACE,WAAYnF,EAAqBsD,EAAUC,GACzC,OAAA4B,EAAArX,KAAA1D,KAAM4V,EAAOsD,EAAKC,QACnB,CAHH,OAAAP,EAAAkC,EAAAC,GAAAD,EAAAvX,UAKWsV,MAAA,WACP,MAAO,MACR,EAPHiC,CAAA,CAAA,CAA6BH,oBAW3B,SAAAK,GAAA,SAAAC,EAAYrF,EAAqBsD,EAAUC,GACzC,OAAA6B,EAAAtX,KAAA1D,KAAM4V,EAAOsD,EAAKC,IACnBnZ,IAAA,CAFD4Y,EAAAqC,EAAAD,GADF,2BAKWnC,MAAA,WACP,MAAO,GACR,IAEQU,UAAA,SAAUL,EAAaC,GAC9B,OAAOD,EAAMC,CACd,IAVD,CADsBQ,IAcxBuB,gBAAA,SAAAC,GACE,SAAYvF,EAAAA,EAAqBsD,EAAUC,GAAQ,mBAC3CvD,EAAOsD,EAAKC,IAD+BnZ,IAElD,CAHH4Y,EAAAsC,EAAAC,GAAA,IAKWtC,EAAAA,EAAAA,iBAAAA,EAAAA,MAAA,WACP,MAAO,IACR,IAEQU,UAAA,SAAUL,EAAaC,GAC9B,OAAOD,GAAOC,CACf,IAXH,CAAwBQ,IAcxByB,gBAAA,SAAAC,GACE,SAAYzF,EAAAA,EAAqBsD,EAAUC,GAAQ,mBAC3CvD,EAAOsD,EAAKC,IAD+BnZ,IAElD,CAHH4Y,EAAAwC,EAAAC,GAAA,IAKWxC,EAAAA,EAAAA,UALac,OAKbd,EAAAA,MAAA,WACP,MAAO,GACR,EAEQU,EAAAA,UAAA,SAAUL,EAAaC,GAC9B,SAAaA,CACd,EAXqBQ,CAAAA,CAAxB,CAAwBA,IAcX2B,gBACX,SAAAC,GAAA,SAAAD,EAAY1F,EAAqBsD,EAAUC,UACnCvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,QACnB,CAFDP,EAAA0C,EAAAC,GADF,IAAAC,EAAAF,EAAA/X,UAAwBoW,OAAxB6B,EAKW3C,MAAA,WACP,MAAO,IACR,EAEQU,EAAAA,UAAA,SAAUL,EAAaC,GAC9B,UAAcA,CACf,EAXqBQ,CAAAA,CACtB,CADsBA,IAcX8B,gBACX,SAAAC,GAAA,SAAAD,EAAY7F,EAAqBsD,EAAUC,UACnCvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,QACnB,CAFDP,EAAA6C,EAAAC,GADF,IAAAC,EAAAF,EAAAlY,UAAwBoW,OAAxBgC,EAKW9C,MAAA,WACP,MAAO,IACR,EAEQU,EAAAA,UAAA,SAAUL,EAAaC,GAC9B,UAAcA,CACf,EAXqBQ,CAAAA,CACtB,CADsBA,IAcXiC,gBACX,SAAAC,GAAA,SAAAD,EAAYhG,EAAqBsD,EAAUC,UACnCvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,QACnB,CAFDP,EAAAgD,EAAAC,GADF,IAAAC,EAAAF,EAAArY,UAAwBoW,OAAxBmC,EAKWjD,MAAA,WACP,MAAO,IACR,EAEQU,EAAAA,UAAA,SAAUL,EAAaC,GAC9B,UAAcA,CACf,EAXqBQ,CAAAA,CACtB,CADsBA,IAcXoC,gBACX,SAAAC,GAAA,SAAAD,EAAYnG,EAAqBsD,EAAUC,UACnCvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,QACnB,CAFDP,EAAAmD,EAAAC,GADF,IAAAC,EAAAF,EAAAxY,UAAA,OAAA0Y,EAKWpD,MAAA,WACP,MAAO,GACR,EAPHoD,EASW1C,UAAA,SAAUL,EAAaC,GAC9B,OAAmBD,EAAGC,CACvB,EAXH4C,CAAA,CACE,CADuBnC,IAczBsC,gBAAA,SAAAC,GACE,WAAYvG,EAAqBsD,EAAUC,GACzC,OAAAgD,EAAAzY,KAAA1D,KAAM4V,EAAOsD,EAAKC,IACnBnZ,IAAA,CAHH4Y,EAAAsD,EAAAC,GAAA,kBAAA,SAKWtD,MAAA,WACP,MAAO,KACR,EAPHuD,EASW7C,UAAA,SAAUL,EAAaC,GAC9B,OAAmBD,EAAIC,CACxB,EAXH+C,CAAA,CAAA,CAA8BtC,IAc9ByC,gBAAA,SAAAC,GACE,WAAY1G,EAAqBsD,EAAUC,GACzC,OAAAmD,EAAA5Y,KAAA1D,KAAM4V,EAAOsD,EAAKC,IACnBnZ,IAAA,CAHH4Y,EAAAyD,EAAAC,GAAA,2BAKWzD,MAAA,WACP,MAAO,GACR,IAEQU,UAAA,SAAUL,EAAaC,GAC9B,OAAQD,EAAeC,CACxB,IAXH,CAA8BW,IAcjByC,4BACX,SAAY3G,EAAAA,EAAqBsD,EAAUC,GAAQ,OAC3CvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,IAD+BnZ,IAElD,QAHH,IAKW6Y,EAAAA,EAAAA,iBAAAA,EAAAA,MAAA,WACP,MAAO,GACR,IAEQU,UAAA,SAAUL,EAAaC,GAC9B,OAAQD,EAAeC,CACxB,KAXyBW,IAcf0C,4BACX,SAAY5G,EAAAA,EAAqBsD,EAAUC,GAAQ,OAC3CvD,EAAAA,KAAAA,KAAAA,EAAOsD,EAAKC,IAD+BnZ,IAElD,QAHH,IAKW6Y,EAAAA,EAAAA,UALiBiB,OAKjBjB,EAAAA,MAAA,WACP,MAAO,GACR,EAEQU,EAAAA,UAAA,SAAUL,EAAaC,GAC9B,SAAuBA,CACxB,EAXyBW,CAAAA,EAAAA,oBAoB1B,SAAA2C,GAAA,SAAAC,EAAY9G,EAA4B+G,EAAahJ,GACnD,IAAAiJ,EAAAC,EAD+D,OAC/DA,EAAAJ,EAAA/Y,KAAA1D,KAAM4V,IADyD5V,MAAzB2c,SAFxChJ,EAAAA,EAAAA,YAEwCkJ,EAAGF,IAAHA,EAEtCE,EAAKlJ,KAA8B,OAAnCiJ,EAAYjJ,MAAAA,OAAAA,EAAAA,EAAM1N,eAAiB2W,EAAA,GACpCC,CAAA,CAHDjE,EAAA8D,EAAAD,GAHF,kBAA6B9E,SAQlBzK,SAAA,SAAS0K,EAAwBC,GACxCD,EAAI9N,OAAO9J,KAAK2c,IAAI/V,YACpBgR,EAAI9N,OAAOuF,GAAoBrP,KAAK2T,MACrC,EAXHmJ,EAaWhF,aAAA,SAAaC,GACpB,OAAO/X,KAAK2c,IAAM5E,EAAQjC,cAAc9V,KAAK2T,MAAM,EACpD,EAf0BgE,CAAAA,CAG3B,CAH2BA,IAsBhBoF,4BACX,SAAYnH,EAAAA,EAA4BrC,GACtC,IAAAyJ,EAD2D,OAC3DA,EAAAC,EAAAvZ,KAAA1D,KAAM4V,IADqD5V,MAArBuT,mBAAA,EAAAyJ,EAAazJ,cAAbA,EAEvCyJ,CAAA,QAHH,kBAA2BrF,SAKhBzK,SAAA,SAAS0K,EAAwBC,GACxCD,EAAI9N,OAAO9J,KAAKuT,cACjB,EAEQuE,EAAAA,aAAA,SAAaC,GACpB,SAAe1B,SAASrW,KAAK4V,MAAO5V,KAAKuT,eAAemD,SAASqB,EAClE,EAXHmF,EAaWjF,WAAA,SACPC,EACAH,EACAI,GAEA,WACYnY,MACV+X,EACG1B,SAASrW,KAAK4V,MAAO5V,KAAKuT,eAC1B6E,YAAYF,EAAOH,EAASI,EAElC,EAxBwBR,CAAAA,EAAAA,IA8BdwF,4BACX,SAAYvH,EAAAA,EAA4BiB,EAAqBzU,GAAY,IAAAgb,EAAA,OACvEA,cAAMxH,IAAN5V,MADsC6W,SAAiC,EAAAuG,EAAZhb,UAAY,EAAjCgb,EAAGvG,IAAHA,EAAqBuG,EAAIhb,KAAJA,EAAYgb,CAExE,QAHH,IAKWlQ,EAAAA,EAAAA,UALoByK,OAKpBzK,EAAAA,SAAA,SAAS0K,EAAwBC,GACpC7X,KAAK6W,KACPe,EAAI9N,OAAO,QAEb8N,EAAI9N,OAAOuF,GAAoBrP,KAAKoC,MACrC,EAVHib,EAYWvF,aAAA,SAAaC,GACpB,OAAOA,EAAQnB,cAAc5W,KAAKoC,KAAMpC,KAAK6W,IAC9C,EAdHwG,EAgBW7E,YAAA,WACP,OAAO,CACR,EAlB4Bb,CAAAA,EAAAA,IA4BlBtE,4BACX,SACEuC,EAAAA,EACOvT,EACA1D,GAAW,IAAA2e,EAAA,OAElBA,EAAM1H,EAAAA,KAAAA,KAAAA,UAHCvT,YACA1D,SAAW,EADX2e,EAAEjb,GAAFA,EACAib,EAAG3e,IAAHA,EAAW2e,CAGnB,QAPH,IASWpQ,EAAAA,EAAAA,UATiByK,OASjBzK,EAAAA,SAAA,SAAS0K,EAAwBC,GACxCD,EAAI9N,OAAO9J,KAAKrB,IACjB,EAXH4e,EAaWzF,aAAA,SAAaC,GACpB,OAAO/X,KAAKqC,GAAGqB,KAAKqU,EACrB,EAfyBJ,CAAAA,EAAAA,IA0D5B6F,gBAAA,SAAAC,GACE,WACE7H,EACOrC,EACAgD,GAAa,IAAAmH,EAAA,OAEpBA,cAAM9H,IAAN5V,MAHOuT,mBACa,EAAAmK,EAAbnH,YAAa,EADbmH,EAAanK,cAAbA,EACAmK,EAAMnH,OAANA,EAAamH,CAGrB,CAPH9E,EAAA4E,EAAAC,GAAA,IASWvQ,EAAAA,EAAAA,UATX,OASWA,EAAAA,SAAA,SAAS0K,EAAwBC,GACxCD,EAAI9N,OAAO9J,KAAKuT,wBAlDWqE,EAAwBxM,GACrDwM,EAAI9N,OAAO,KACX,IAAK,IAAI5F,EAAI,EAAGA,EAAIkH,EAAIzL,OAAQuE,IAC1BA,GACF0T,EAAI9N,OAAO,KAEbsB,EAAIlH,GAAGgJ,SAAS0K,EAAK,GAEvBA,EAAI9N,OAAO,IACZ,CA0CG6T,CAAe/F,EAAK5X,KAAKuW,OAC1B,IAEQuB,aAAA,SAAaC,GAOpB,OANaA,EAAQzB,SACnBtW,KAAK4V,MACL5V,KAAKuT,cACLvT,KAAKuW,QACL,GAEUyB,OAAOD,EAAS/X,KAAKuW,QAAQG,SAASqB,EACnD,EAtBH6F,EAwBW3F,WAAA,SACPC,EACAH,EACAI,GAEA,GAAID,IAAUlY,KACZ,SAEF,IAAK,IAAIkE,EAAI,EAAGA,EAAIlE,KAAKuW,OAAO5W,OAAQuE,IACtC,GAAIlE,KAAKuW,OAAOrS,GAAGkU,YAAYF,EAAOH,EAASI,GAC7C,SAWJ,OARaJ,EAAQzB,SACnBtW,KAAK4V,MACL5V,KAAKuT,cACLvT,KAAKuW,QACL,GAIU6B,YAAYF,EAAOH,EAASI,EACzC,EAEQH,EAAAA,OAAA,SAAOD,EAAkBxB,GAChC,IAAMsH,WA7ER9F,EACA3M,EACAmL,GAGA,IADA,IAAYuH,EAAU1S,EACblH,EAAI,EAAGA,EAAIkH,EAAIzL,OAAQuE,IAAK,CACnC,MAAUkH,EAAIlH,GAAG8T,OAAOD,EAASxB,GACjC,GAAInL,IAAQ0S,EACVA,EAAS5Z,GAAK6I,OACT,GAAIA,IAAM3B,EAAIlH,GAAI,CACvB4Z,EAAW3e,MAAMiM,EAAIzL,QACrB,IAAK,MAAQ,EAAG2G,EAAIpC,EAAGoC,IACrBwX,EAASxX,GAAK8E,EAAI9E,GAEpBwX,EAAS5Z,GAAK6I,CACf,CACF,CACD,OACD+Q,CAAA,CA2D0BC,CAAehG,EAAS/X,KAAKuW,OAAQA,GAC5D,OAAIsH,IAAmB7d,KAAKuW,YAGjBiH,IAAAA,EAAKxd,KAAK4V,MAAO5V,KAAKuT,cAAesK,EACjD,EAtDHL,CAAA,CAAA,CAA0B7F,oBA0DxB,SAAAqG,GAAA,SAAAC,EACErI,EACOsI,EACAC,EACAC,GAAY,IAAAC,EAAA,OAEnBA,cAAMzI,IAAN5V,MAJOke,UAEY,EAAAG,EADZF,YACY,EAAAE,EAAZD,aAFA,EAAAC,EAAIH,KAAJA,EACAG,EAAMF,OAANA,EACAE,EAAOD,QAAPA,GAGR,CAPDxF,EAAAqF,EAAAD,GADF,IAAAM,EAAAL,EAAA1a,UAA0BoU,OAA1B2G,EAUWpR,SAAA,SAAS0K,EAAwBC,GACpCA,EAAW,GACbD,EAAI9N,OAAO,KAEb9J,KAAKke,KAAKhR,SAAS0K,EAAK,GACxBA,EAAI9N,OAAO,KACX9J,KAAKme,OAAOjR,SAAS0K,EAAK,GAC1BA,EAAI9N,OAAO,KACX9J,KAAKoe,QAAQlR,SAAS0K,EAAK,GACvBC,EAAW,GACbD,EAAI9N,OAAO,IAEd,EAtBHwU,EAwBWxG,aAAA,SAAaC,GACpB,OAAI/X,KAAKke,KAAKxH,SAASqB,GACToG,KAAAA,OAAOzH,SAASqB,GAEhBqG,KAAAA,QAAQ1H,SAASqB,EAEhC,EA9BHuG,EAgCWrG,WAAA,SACPC,EACAH,EACAI,GAEA,WACYnY,MACVA,KAAKke,KAAK9F,YAAYF,EAAOH,EAASI,IACtCnY,KAAKme,OAAO/F,YAAYF,EAAOH,EAASI,IACxCnY,KAAKoe,QAAQhG,YAAYF,EAAOH,EAASI,EAE5C,IAEQH,OAAA,SAAOD,EAAkBxB,GAChC,IAAM2H,EAAOle,KAAKke,KAAKlG,OAAOD,EAASxB,GAC3B4H,EAAGne,KAAKme,OAAOnG,OAAOD,EAASxB,GAC9B6H,EAAGpe,KAAKoe,QAAQpG,OAAOD,EAASxB,GAC7C,OACE2H,IAASle,KAAKke,MACdC,IAAWne,KAAKme,QAChBC,IAAYpe,KAAKoe,aAIT,MAASpe,KAAK4V,MAAOsI,EAAMC,EAAQC,EAE9C,EA1DuBzG,CAAAA,CACxB,CADwBA,IA6DbhB,gBACX,SAAA4H,GAAA,SAAA5H,EAAYf,EAA4BpC,GACtC,IAAAgL,EADiD,OACjDA,EAAAD,EAAA7a,KAAA1D,KAAM4V,IAD2C5V,MAAXwT,SAAW,EAAXgL,EAAGhL,IAAHA,EAAWgL,CAElD,CAFD5F,EAAAjC,EAAA4H,GADF,IAKWrR,EAAAA,EAAAA,UALX,OAKWA,EAAAA,SAAA,SAAS0K,EAAwBC,GACxC,mBAAoBrE,KAClB,IAAK,SACL,IAAK,UACHoE,EAAI9N,OAAO9J,KAAKwT,IAAI5M,YACpB,MACF,IAAK,SACHgR,EAAI9N,OAAO,KACX8N,EAAI9N,OAAOuF,GAAkBrP,KAAKwT,MAClCoE,EAAI9N,OAAO,KACX,MACF,QACE,UAAM/K,MAAU,sBAErB,EAnBH0f,EAqBW3G,aAAA,SAAaC,GACpB,OAAO/X,KAAKwT,GACb,EAvBHmD,CAAA,CACE,CADyBgB,IA0B3B+G,gBAAA,SAAAC,GACE,WAAY/I,EAA4BxT,EAAwB5D,GAAU,IAAAogB,EAAA,OACxEA,cAAMhJ,IAAN5V,MADsCoC,UAAkC,EAAAwc,EAAVpgB,WAAxB,EAAAogB,EAAIxc,KAAJA,EAAwBwc,EAAKpgB,MAALA,EAE/DogB,CAAA,CAHHhG,EAAA8F,EAAAC,GAAA,IAKWzR,EAAAA,EAAAA,iBAAAA,EAAAA,SAAA,SAAS0K,EAAwBC,GACxCD,EAAI9N,OAAO,KACX8N,EAAI9N,OAAOuF,GAAkBrP,KAAKoC,KAAKA,OACvCwV,EAAI9N,OAAO,KACX9J,KAAKxB,MAAM0O,SAAS0K,EAAK,GACzBA,EAAI9N,OAAO,IACZ,EAEQgO,EAAAA,aAAA,SAAaC,GACpB,OAAcA,EAAChB,cAAc/W,KAAKoC,KAAKA,KAAMpC,KAAKxB,MACnD,IAEQyZ,WAAA,SACPC,EACAH,EACAI,GAEA,OACOD,IAAKlY,MAAQA,KAAKxB,MAAM4Z,YAAYF,EAAOH,EAASI,EAE5D,EAEQH,EAAAA,OAAA,SAAOD,EAAkBxB,GAChC,IAAM/X,EAAQwB,KAAKxB,MAAMwZ,OAAOD,EAASxB,GACzC,OAAI/X,IAAUwB,KAAKxB,MACVwB,KAEC,MAAcA,KAAK4V,MAAO5V,KAAKoC,KAAM5D,EAEhD,IAlCH,CAA+BmZ,IAqC/BkH,gBAAA,SAAAC,GACE,SACElJ,EAAAA,EACOxT,EACA5D,EACAgZ,GAEP,IAAAuH,EAFsB,OAEtBA,EAAAD,EAAApb,KAAA1D,KAAM4V,IAAN5V,MAJOoC,UAEe,EAAA2c,EADfvgB,WACAgZ,EAAAA,EAAAA,cAFAuH,EAAI3c,KAAJA,EACA2c,EAAKvgB,MAALA,EACAugB,EAAMvH,OAANA,GAGR,CARHoB,EAAAiG,EAAAC,GAAA,IAAAE,EAAAH,EAAAtb,iBAAAyb,EAUW9R,SAAA,SAAS0K,EAAwBC,GACpC7X,KAAKwX,QACPI,EAAI9N,OAAO9J,KAAKoC,MAElBwV,EAAI9N,OAAO,MACN9J,KAAKwX,QAAUxX,KAAKoC,OACvBwV,EAAI9N,OAAO9J,KAAKoC,MAChBwV,EAAI9N,OAAO,MAEb8N,EAAI9N,OAAO9J,KAAKxB,OAChBoZ,EAAI9N,OAAO,IACZ,IAEQgO,aAAA,SAAaC,GACpB,OAAOA,EAAQR,iBAAiBvX,KAAKoC,KAAMpC,KAAKxB,MAAOwB,KAAKwX,OAC7D,IAzBH,CAAkCG,IA4BlCsH,gBAAA,SAAAC,GACE,WAAYtJ,EAA4BjT,GAAa,IAAAwc,EAAA,OACnDA,cAAMvJ,IAAN5V,MADsC2C,WAAa,EAAbwc,EAAKxc,MAALA,GAEvC,CAHHiW,EAAAqG,EAAAC,GAAA,IAAAE,EAAAH,EAAA1b,UAA2BoU,OAA3ByH,EAKWlS,SAAA,SAAS0K,EAAwBC,GACxCD,EAAI9N,OAAO,KACX8N,EAAI9N,OAAO9J,KAAK2C,MAAMiE,WACvB,IAEQoR,OAAA,SAAOD,EAAkBxB,GAChC,IAAM5P,EAAI4P,EAAOvW,KAAK2C,OACtB,IAAKgE,EACH,MAAM,IAAA5H,MAAA,sBAAgCiB,KAAK2C,OAE7C,OAAOgE,CACR,EAhBwBgR,CAAAA,CAA3B,CAA2BA,gBAmBP/B,EAAqByJ,EAASC,GAChD,OACED,IAAOzJ,EAAMtD,QACb+M,IAAOzJ,EAAMzD,MACbmN,GAAM1J,EAAMtD,QACZgN,GAAM1J,EAAMzD,OAECG,OAEX+M,IAAOzJ,EAAMvD,OAASgN,IAAOzJ,EAAMxD,MAGnCkN,IAAO1J,EAAMvD,OAASiN,IAAO1J,EAAMxD,MAG5BmI,IAAAA,GAAI3E,EAAOyJ,EAAIC,EAC3B,CAEevY,SAAAA,GAAI6O,EAAqByJ,EAASC,GAChD,OAAID,IAAOzJ,EAAMzD,KACRmN,EAELA,IAAO1J,EAAMzD,KACRkN,EAEF,IAAAtD,GAAQnG,EAAOyJ,EAAIC,EAC3B,aAEmB1J,EAAqByJ,EAASC,GAChD,OAAID,IAAOzJ,EAAMzD,KACR,OAAWyD,EAAO0J,GAEvBA,IAAO1J,EAAMzD,WAGV+J,GAAatG,EAAOyJ,EAAIC,EAChC,aAEmB1J,EAAqByJ,EAASC,GAChD,OAAID,IAAOzJ,EAAMzD,MAAQmN,IAAO1J,EAAMzD,KAC7ByD,EAAMzD,KAEXkN,IAAOzJ,EAAMxD,IAEhBkN,EACGA,IAAO1J,EAAMxD,IAEhBiN,EACUhD,IAAAA,GAASzG,EAAOyJ,EAAIC,EAChC,CAEeC,SAAAA,GAAI3J,EAAqByJ,EAASC,GAChD,OAAID,IAAOzJ,EAAMzD,OACFA,KAEXmN,IAAO1J,EAAMxD,IACRiN,EAEF,OAAWzJ,EAAOyJ,EAAIC,EAC9B,KCx6CDE,gBAAA,WAAA,SAAAA,IAAA,CAAA,IAAA9e,EAAA8e,EAAAjc,iBAAA7C,EACE+e,YAAA,SAAYlN,GACV,IAAK,MAAQ,EAAGrO,EAAIqO,EAAO5S,OAAQuE,IACjCqO,EAAOrO,GAAGwb,MAAM1f,MAElB,WACD,EANHU,EAQEif,WAAA,SAAWC,GACT,OAAO,IACR,EAEDC,EAAAA,WAAA,SAAWC,GACT,OACD,IAAA,IAEDC,SAAA,SAASphB,GACP,OAAO,IACR,EAEDqhB,EAAAA,WAAA,SAAWC,GACT,OACD,IAAA,IAEDC,aAAA,SAAaC,GACX,OAAO,IACR,EA1BHzf,EA4BE0f,SAAA,SAASzD,GACP,OACD,IAAA,EAED0D,EAAAA,SAAA,SAAS1D,GACP,YAAYyD,SAASzD,EACtB,EAED2D,EAAAA,cAAA,SAAcC,GACZ,OACD,IAAA,IAEDC,SAAA,SAASpb,GACP,OAAO,IACR,EA1CH1E,EA4CE+f,YAAA,SAAYC,GACV,OACD,IAAA,EAEDC,EAAAA,eAAA,SAAe9W,GAEb,OADA7J,KAAKyf,YAAY5V,EAAK0I,QAEvB,IAAA,IAEDqO,eAAA,SAAe/W,GAEb,OADA7J,KAAKyf,YAAY5V,EAAK0I,QAEvB,IAAA,EAEDsO,EAAAA,UAAA,SAAUC,GAER,OADA9gB,KAAKyf,YAAYqB,EAAKvO,QACf,IACR,EAEDwO,EAAAA,UAAA,SAAUC,GACR,OACD,IAAA,IAjEH,GAoEaC,4BAGX,SAAAA,IAAA,IAAAtI,SACEA,EADFuI,EAAAxd,KAAA1D,OAAAA,MAFAT,OAAiB,GAIhB,QALH,IAAAyK,EAAAiX,EAAA1d,UAAA,OAAAyG,EAOWyV,YAAA,SAAYlN,GAEnB,IADA,IAAInH,EAAa,KACRlH,EAAI,EAAGA,EAAIqO,EAAO5S,OAAQuE,IAAK,CACtC,MAAeqO,EAAOrO,GAChBgK,EAAQiT,EAAOzB,MAAM1f,MAC3B,GAAIA,KAAKT,MACP,MAAO,GAET,GAAI6L,EACFA,EAAIlH,GAAKgK,OACAiT,GAAAA,IAAWjT,EAAO,CAC3B9C,EAAM,IAAAjM,MAAUoT,EAAO5S,QACvB,IAAK,IAAI6L,EAAI,EAAGA,EAAItH,EAAGsH,IACrBJ,EAAII,GAAK+G,EAAO/G,GAElBJ,EAAIlH,GAAKgK,CACV,CACF,CACD,OAAO9C,GAAOmH,CACf,IAEQoN,WAAA,SAAWC,GAClB,OAAOA,CACR,EA9BH5V,EAgCW+V,SAAA,SAASphB,GAChB,OACDA,CAAA,EAEQqhB,EAAAA,WAAA,SAAWC,GAClB,QACD,EAtCHjW,EAwCW6V,WAAA,SAAWC,GAClB,OAAOA,CACR,EAEQI,EAAAA,aAAA,SAAaC,GACpB,OACDA,CAAA,IAEQC,SAAA,SAASzD,GAChB,QACD,EAlDH3S,EAoDWqW,SAAA,SAAS1D,GAChB,OAAOA,CACR,EAEQ2D,EAAAA,cAAA,SAAcC,GACrB,OACDA,CAAA,IAEQC,SAAA,SAASpb,GAChB,OAAOA,CACR,EAEQqb,EAAAA,YAAA,SAAYC,GACnB,OACDA,CAAA,IAEQC,eAAA,SAAe9W,GACtB,IAAM0I,EAASvS,KAAKyf,YAAY5V,EAAK0I,QACrC,OAAIvS,KAAKT,MACAqgB,GAELrN,IAAW1I,EAAK0I,OACX1I,EAEF,OAAc0I,EACtB,IAEQqO,eAAA,SAAe/W,GACtB,IAAM0I,EAASvS,KAAKyf,YAAY5V,EAAK0I,QACrC,OAAIvS,KAAKT,MACAqgB,GAELrN,IAAW1I,EAAK0I,OAEnB1I,EACUuX,IAAAA,GAAU7O,EACtB,EAxFHvI,EA0FW6W,UAAA,SAAUC,GACjB,IAAYvO,EAAGvS,KAAKyf,YAAYqB,EAAKvO,QACrC,OAAIvS,KAAKT,MAERqgB,GACGrN,IAAWuO,EAAKvO,OAEnBuO,EACUO,IAAAA,GAAKP,EAAK1e,KAAMmQ,EAC5B,IAEQwO,UAAA,SAAUC,GACjB,QACD,EAvGHC,CAAA,EAAmCzB,oBA4GjC5Y,WAAAA,SAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,UAFF,OAEEA,EAAAA,SAAA,WACE,IAAMgR,EAAM,IAAIvI,GAEhB,OADArP,KAAKkN,SAAS0K,GAAK,GACZA,EAAIhR,UACZ,EANH8H,EAQE4S,YAAA,WACE,IAAM1J,EAAM,IAAIvI,GAEhB,OADArP,KAAKkN,SAAS0K,GAAK,GACTA,EAAChR,UACZ,IAED2a,OAAA,SAAO3L,EAA2BnG,GAChC,OACD,IAAA,IAEDvC,SAAA,SAAS0K,EAAwBhR,GAC/BgR,EAAI9N,OAAO,UACZ,EApBH4E,EAsBE8S,OAAA,WACE,QACD,EAxBH9S,EA0BE+S,UAAA,WACE,QACD,EA5BH/S,EA8BEgT,MAAA,WACE,OAAO,CACR,EAEDC,EAAAA,QAAA,WACE,OACD,CAAA,IAEDC,YAAA,WACE,OACD,CAAA,IAEDlC,MAAA,SAAMmC,GACJ,WACD,EA5CHlK,CAAA,CAEE/Q,GA6CFkb,gBAAA,SAAArJ,GAUE,aACE,OAAAA,EAAA/U,KAAA1D,OACDA,IAAA,CAZH4Y,EAAAkJ,EAAArJ,GAAA,kBAAA,SAcW8I,OAAA,SAAO3L,EAA2BnG,GACzC,OAAO,OAAgBmG,EAAO,GAC/B,EAEQ1I,EAAAA,SAAA,SAAS0K,EAAwBhR,KAlB5CkS,EAoBW4G,MAAA,SAAMmC,GACb,OAAOA,EAAQlC,WAAW3f,KAC3B,EAnBM+hB,EAAAD,EAAA,KAAA,CAAA,CAAAzW,IAAA,WAAA2W,IAAA,WAIL,OAHKhiB,KAAK4f,QACR5f,KAAK4f,MAAQ,IAAIkC,GAEZ9hB,KAAK4f,KACb,KARHkC,CAAA,CAAA,CAA2BnK,IAAdmK,GACIlC,aAwBV,OAAqBkC,GAAMG,SAErBC,4BAUX,SAAAA,IAAA,qBAECliB,IAAA,QAZH,IAcWuhB,EAAAA,EAAAA,UAdgB5J,OAchB4J,EAAAA,OAAA,SAAO3L,EAA2BnG,GACzC,OAAO,IAAS0S,GAAOvM,EAAO,IAC/B,EAEQ1I,EAAAA,SAAA,SAAS0K,EAAwBhR,GACxCgR,EAAI9N,OAAO,IACZ,EAEQ4V,EAAAA,MAAA,SAAMmC,GACb,OAAcA,EAAChC,WAAW7f,KAC3B,EAxBH+hB,EAAAG,EAAA,KAAA,CAAA,CAAA7W,IAAA,WAAA2W,IAGS,WAIL,OAHKhiB,KAAK8f,QACR9f,KAAK8f,MAAQ,OAEHA,KAAAA,KACb,KARwBnI,CAAAA,EAAAA,IAAduK,GACIpC,WA0BjB,EAAaA,IAAAA,GAAeoC,GAAMD,yBAGhC,SAAAxF,GAAA,SAAA2F,EAAmBzjB,SAAW,OAC5Bya,EAD4BqD,EAAA/Y,KAAA1D,OAAAA,MAAXrB,SAAA,EAAAya,EAAGza,IAAHA,EAAWya,CAE7B,CAFDR,EAAAwJ,EAAA3F,GADF,IAKW8E,EAAAA,EAAAA,UALX,OAKWA,EAAAA,OAAA,SAAO3L,EAA2BnG,GACzC,WAAgB0S,GAAOvM,EAAO5V,KAAKrB,IACpC,IAEQuO,SAAA,SAAS0K,EAAwBhR,GACpCA,GACFgR,EAAI9N,OAAO,KACX8N,EAAI9N,OAAOuF,GAAkBrP,KAAKrB,MAClCiZ,EAAI9N,OAAO,MAEX8N,EAAI9N,OAAO9J,KAAKrB,IAEnB,EAEQ+gB,EAAAA,MAAA,SAAMmC,GACb,OAAcA,EAAC9B,SAAS/f,KACzB,EArBHoiB,CAAA,CACE,CADuBzK,OAwBmB,CAA5C,EAEa0K,4BACX,SAAmBjgB,EAAAA,GAAY,IAAAya,EAE7B,IADAA,sBADiBza,YAAAya,EAAIza,KAAJA,EAEbkgB,GAAUlgB,GACZ,UAAMrD,MAAU,kBAHW,OAK7BujB,GAAUlgB,GAAVmgB,EAAA1F,IACD,QAPH,IAAA2F,EAAAH,EAAA9e,iBAAAif,EASWjB,OAAA,SAAO3L,EAA2BnG,GACzC,WAAgB0S,GAAOvM,EAAO5V,KAAKoC,KACpC,IAEQ8K,SAAA,SAAS0K,EAAwBhR,GAEtCgR,EAAI9N,OADFlD,EACSyI,GAAoBrP,KAAKoC,MAEzBpC,KAAKoC,KAEnB,EAnBHogB,EAqBW9C,MAAA,SAAMmC,GACb,OAAcA,EAAC7B,WAAWhgB,KAC3B,IAEQ2hB,QAAA,WACP,OACD,CAAA,KA3BwBhK,IA8BX8K,SAAAA,GAAQrgB,GACtB,IAAIkD,EAAIgd,GAAUlgB,GAIlB,OAHKkD,IACHA,EAAI,OAAUlD,IAGjBkD,CAAA,KAEDoX,gBAAA,SAAAgG,GAGE,WAAmB/F,EAAahJ,GAAY,IAAAiJ,EAAAI,EAAA,OAC1CA,EAD0C0F,EAAAhf,KAAA1D,OAAAA,MAAzB2c,SAFnBhJ,EAAAA,EAAAA,YAEmBqJ,EAAGL,IAAHA,EAEjBK,EAAKrJ,KAA8B,SAAnC,MAAYA,OAAZ,EAAYA,EAAM1N,eAAiB2W,EAAA,GAFOI,CAG3C,CANHpE,EAAA8D,EAAAgG,GAAA,IAQWnB,EAAAA,EAAAA,UARkB5J,OAQlB4J,EAAAA,OAAA,SAAO3L,EAA2BnG,GACzC,OAAgB,GAAZzP,KAAK2c,IACK/G,EAACzD,KAEX1C,GAAoB,KAAbzP,KAAK2T,KACE,KAAZ3T,KAAK2c,IACAlN,EAEF,IAASkT,GACd/M,EACAnG,EACA,IAAS0S,GAAOvM,EAAO5V,KAAK2c,IAAM,MAG/B,OAAkB/G,EAAO5V,KAAK2c,IAAK3c,KAAK2T,KAChD,EAvBHiP,EAyBW1V,SAAA,SAAS0K,EAAwBhR,GACxCgR,EAAI9N,OAAO9J,KAAK2c,IAAI/V,YACpBgR,EAAI9N,OAAO9J,KAAK2T,KACjB,EAEQ+L,EAAAA,MAAA,SAAMmC,GACb,OAAcA,EAAC3B,aAAalgB,KAC7B,EAhCH4iB,EAkCWnB,UAAA,WACP,OAAO,CACR,EApC0B9J,CAAAA,CAA7B,CAA6BA,oBAwC3B,SAAAkL,GAAA,SAAAC,EAAmBnG,GAAW,IAAAS,EAAA,OAC5BA,sBADiBT,SAAA,EAAAS,EAAGT,IAAHA,EAElBS,CAAA,CAFDxE,EAAAkK,EAAAD,GADF,kBAAyBlL,SAKd4J,OAAA,SAAO3L,EAA2BnG,GACzC,OAAgB,GAAZzP,KAAK2c,MACMxK,KAEC,GAAZnS,KAAK2c,IACK/G,EAACxD,QAEC+P,GAAOvM,EAAO5V,KAAK2c,IACpC,IAEQzP,SAAA,SAAS0K,EAAwBhR,GACxCgR,EAAI9N,OAAO9J,KAAK2c,IAAI/V,WACrB,IAEQ8Y,MAAA,SAAMmC,GACb,SAAezB,SAASpgB,KACzB,EAEQ0hB,EAAAA,MAAA,WACP,OAAO,CACR,EAzBsB/J,CAAAA,CACvB,CADuBA,IA4BZoL,gBACX,SAAAC,GAAA,SAAAD,EAAYpG,GAAW,mBACfA,QACP,CAHsBmG,OACvBlK,EAAAmK,EAAAC,GADFD,EAAAxf,UAKWmc,MAAA,SAAMmC,GACb,OAAOA,EAAQxB,SAASrgB,KACzB,EAPsB8iB,CAAAA,CACvB,CADuBA,IAUZG,4BACX,SAAmBC,EAAAA,GAAW,IAAA5F,EAAA,OAC5BA,sBADiB4F,WAAA5F,EAAG4F,IAAHA,EAElB5F,CAAA,QAHH,kBAA8B3F,SAKnBzK,SAAA,SAAS0K,EAAwBhR,GACxCgR,EAAI9N,OAAO,KACX8N,EAAI9N,OAAO9J,KAAKkjB,IACjB,IAEQxD,MAAA,SAAMmC,GACb,OAAOA,EAAQvB,cAActgB,KAC9B,EAZ2B2X,CAAAA,EAAAA,IAejBwL,gBACX,SAAAnF,GAAA,SAAAmF,EAAmB/d,GAAW,IAAAsY,EAAA,OAC5BA,sBADiBtY,WAAAsY,EAAGtY,IAAHA,EAElBsY,CAAA,CAFD9E,EAAAuK,EAAAnF,GADF,kBAAyBrG,SAKdzK,SAAA,SAAS0K,EAAwBhR,GACxCgR,EAAI9N,OAAO,SACX8N,EAAI9N,OAAOuF,GAAkBrP,KAAKoF,MAClCwS,EAAI9N,OAAO,KACZ,EAEQ4V,EAAAA,MAAA,SAAMmC,GACb,SAAerB,SAASxgB,KACzB,EAbsB2X,CAAAA,CACvB,CADuBA,oBAiBvB,SAAA4G,GAAA,SAAA6E,EAAmBC,GAAkB,IAAAhF,EAAA,OACnCA,sBADiBgF,gBAAA,EAAAhF,EAAUgF,WAAVA,EAElBhF,CAAA,CAFDzF,EAAAwK,EAAA7E,GADF,kBAAA,SAKWrR,SAAA,SAAS0K,EAAwBhR,GACxCgR,EAAI9N,OAAO9J,KAAKqjB,WACjB,EAEQ3D,EAAAA,MAAA,SAAMmC,GACb,OAAcA,EAACpB,YAAYzgB,KAC5B,EAXHojB,CAAA,CACE,CAD0BzL,IAcZ2L,SAAAA,GACd1L,EACArF,EACAgR,EACA3c,GAEA,MAAe2L,EAAO5S,OACtB,GAAIA,EAAS,EAAG,CAAA,IAAA6jB,EACd,SAAAjR,EAAO,KAAPiR,EAAWtW,SAAS0K,EAAKhR,GACzB,IAAK,MAAQ,EAAG1C,EAAIvE,EAAQuE,IAAK,OAC/B0T,EAAI9N,OAAOyZ,GACArW,OAAXuW,EAAAlR,EAAOrO,KAAIgJ,EAAAA,SAAS0K,EAAKhR,EAC1B,CACF,CACF,CAED,oBACE,SAAA+X,GAAA,SAAA+E,EAAmBnR,GAAa,IAAAiM,EAAA,OAC9BA,EAD8BG,EAAAjb,KAAA1D,OAAAA,MAAbuS,YAAA,EAAAiM,EAAMjM,OAANA,EAElBiM,CAAA,CAFD5F,EAAA8K,EAAA/E,GADF,IAKWzR,EAAAA,EAAAA,UALX,OAKWA,EAAAA,SAAA,SAAS0K,EAAwBhR,GACxC0c,GAAW1L,EAAK5X,KAAKuS,OAAQ,IAAK3L,EACnC,EAPH+c,EASWjE,MAAA,SAAMmC,GACb,OAAcA,EAAClB,eAAe3gB,KAC/B,IAEQ4hB,YAAA,WACP,QACD,EAfH8B,CAAA,CACE,CAD6B/L,IAkB/ByJ,gBAAA,SAAAtC,GACE,WAAmBvM,SAAa,OAC9BqM,EAD8BE,EAAApb,KAAA1D,OAAAA,MAAbuS,YAAa,EAAbqM,EAAMrM,OAANA,EAAaqM,CAE/B,CAHHhG,EAAAwI,EAAAtC,GAAA,IAKW5R,EAAAA,EAAAA,UALX,OAKWA,EAAAA,SAAA,SAAS0K,EAAwBhR,GACxC0c,GAAW1L,EAAK5X,KAAKuS,OAAQ,IAAK3L,EACnC,IAEQ8Y,MAAA,SAAMmC,GACb,SAAejB,eAAe5gB,KAC/B,EAXHohB,CAAA,CAAA,CAA+BzJ,oBAe7B,SAAAuH,GAAA,SAAAmC,EAAmBjf,EAAqBmQ,GACtC,IAAAwM,EADmD,OACnDA,EAAAG,EAAAxb,KAAA1D,OAAAA,MADiBoC,UAAkC,EAAA2c,EAAbxM,YAArB,EAAAwM,EAAI3c,KAAJA,EAAqB2c,EAAMxM,OAANA,EAEvCwM,CAAA,CAFDnG,EAAAyI,EAAAnC,GADF,kBAA0BvH,SAKfzK,SAAA,SAAS0K,EAAwBhR,GACxCgR,EAAI9N,OAAOuF,GAAoBrP,KAAKoC,OACpCwV,EAAI9N,OAAO,KACXwZ,GAAW1L,EAAK5X,KAAKuS,OAAQ,IAAK3L,GAClCgR,EAAI9N,OAAO,IACZ,EAVH8Z,EAYWlE,MAAA,SAAMmC,GACb,OAAOA,EAAQhB,UAAU7gB,KAC1B,EAduB2X,CAAAA,CACxB,CADwBA,IAiBbkM,4BACX,SAAmB7C,EAAAA,GACjB,IAAA7B,EADgC,OAChCA,EAAA2E,EAAApgB,KAAA1D,OAAAA,MADiBghB,UAAe,EAAf7B,EAAI6B,KAAJA,EAAe7B,CAEjC,QAHH,IAAA4E,EAAAF,EAAAtgB,UAAA,OAAAwgB,EAKWxC,OAAA,WACP,OAAOvhB,KAAKghB,IACb,EAPH+C,EASW7W,SAAA,SAAS0K,EAAwBhR,GAEtC5G,KAAKghB,gBAAgBgD,IACrBhkB,KAAKghB,mBAELhhB,KAAKghB,KAAK9T,SAAS0K,EAAK,IAExBA,EAAI9N,OAAO,gBACX9J,KAAKghB,KAAK9T,SAAS0K,EAAK,GACxBA,EAAI9N,OAAO,KAEd,EApBHia,EAsBWrE,MAAA,SAAMmC,GACb,OAAcA,EAACd,UAAU/gB,KAC1B,EAxBH+jB,EA0BWvC,OAAA,WACP,QACD,EA5BHqC,CAAA,EAA0BlM,oBAmCxB,SAAAsM,GAAA,SAAAC,EAAmBtU,SAAY,OAC7BuU,EAD6BF,EAAAvgB,KAAA1D,OAAAA,MAAZ4P,UAAA,EAAAuU,EAAIvU,KAAJA,EAAYuU,CAE9B,CAHH,OACEvL,EAAAsL,EAAAD,GAIS/W,EAAAA,UAAAA,SAAA,SAAS0K,EAAwBhR,GACxCgR,EAAI9N,OAAO9J,KAAK4P,MAAQ,IACzB,EAPHsU,CAAA,CACE,CAD4BvM,IAUdyM,SAAAA,GAAS5Q,EAAUuE,GACjC,GAAIvE,EAAK,CACP,GAAIA,EAAIiO,YAAa,CACnB,IAAMtB,EAAU3M,EAChB,OAAcuE,EAACjC,cAAcqK,EAAQxM,MAAM,GAASwM,EAAQxD,GAC7D,CACD,GAAInJ,EAAIkO,QACN,SAAoB/E,GAEvB,CACD,OACD,CAAA,CAKe0H,SAAAA,GAAmB7Q,EAAUuE,GAC3C,OAAO,OAAYqM,GAAS5Q,EAAKuE,GAAU,KAC5C,CAEM,OAAwC,CAC7CuM,SAAU7B,GAAQ,YAClB8B,IAAK9B,GAAQ,OACb+B,OAAQ/B,GAAQ,UAChBgC,SAAUhC,GAAQ,YAClBiC,KAAMjC,GAAQ,QACdkC,MAAOlC,GAAQ,SACfmC,QAASnC,GAAQ,WACjBoC,YAAapC,GAAQ,eACrBqC,MAAOrC,GAAQ,SACfsC,UAAWtC,GAAQ,aACnBuC,YAAavC,GAAQ,eACrBwC,KAAMxC,GAAQ,QACdyC,OAAQzC,GAAQ,UAChB0C,WAAY1C,GAAQ,cACpB2C,UAAW3C,GAAQ,aACnB4C,WAAY5C,GAAQ,cACpB6C,KAAM7C,GAAQ,QACd8C,KAAM9C,GAAQ,QACd+C,MAAO/C,GAAQ,SACfgD,OAAQhD,GAAQ,UAChBiD,QAASjD,GAAQ,WACjBkD,UAAWlD,GAAQ,aACnBnQ,OAAQmQ,GAAQ,SAChBmD,MAAOnD,GAAQ,SACfoD,KAAMpD,GAAQ,QACdqD,UAAWrD,GAAQ,aACnBsD,SAAUtD,GAAQ,YAClBuD,OAAQvD,GAAQ,UAChBwD,KAAMxD,GAAQ,QACdyD,OAAQzD,GAAQ,UAChB0D,OAAQ1D,GAAQ,UAChB2D,cAAe3D,GAAQ,iBACvB4D,QAAS5D,GAAQ,WACjB6D,QAAS7D,GAAQ,WACjB8D,OAAQ9D,GAAQ,UAChB+D,aAAc/D,GAAQ,gBACtBgE,WAAYhE,GAAQ,cACpBiE,aAAcjE,GAAQ,gBACtBkE,KAAMlE,GAAQ,QACdmE,UAAWnE,GAAQ,aACnBoE,KAAMpE,GAAQ,QACdqE,KAAMrE,GAAQ,QACdsE,UAAWtE,GAAQ,aACnBuE,IAAKvE,GAAQ,OACbwE,OAAQxE,GAAQ,UAChByE,KAAMzE,GAAQ,QACd0E,OAAQ1E,GAAQ,UAChB2E,cAAe3E,GAAQ,iBACvB4E,cAAe5E,GAAQ,iBACvB6E,KAAM7E,GAAQ,QACd8E,SAAU9E,GAAQ,YAClB+E,OAAQ/E,GAAQ,UAChBgF,MAAOhF,GAAQ,SACfiF,KAAMjF,GAAQ,QACdjR,MAAOiR,GAAQ,SACfkF,WAAYlF,GAAQ,cACpBmF,OAAQnF,GAAQ,UAChBoF,QAASpF,GAAQ,UACjBqF,IAAKrF,GAAQ,OACbsF,MAAOtF,GAAQ,SACfuF,cAAevF,GAAQ,iBACvBwF,WAAYxF,GAAQ,cACpByF,mBAAoBzF,GAAQ,sBAC5B0F,mBAAoB1F,GAAQ,sBAC5B2F,UAAW3F,GAAQ,aACnB4F,IAAK5F,GAAQ,OACb6F,YAAa7F,GAAQ,eACrB8F,MAAO9F,GAAQ,SACf+F,YAAa/F,GAAQ,eACrBgG,YAAahG,GAAQ,eACrBiG,QAASjG,GAAQ,WACjBpQ,MAAOoQ,GAAQ,SAGJkG,GAA0B,IAAIjM,GAAQ,IAAK,QAEtB,OAAY,IAAK,OAE5BkM,GAAY,IAAAlM,GAAY,IAAK,OAEvCmM,GAAuB,IAAInM,GAAQ,EAAG,SAEjB,OAAW,cAEhCoM,GAAkB,CAC7B,YAAa,EACb,cAAe,EACfvI,MAAO,GAGH,YAA4B/hB,GAChC,OACOA,IAAKyhB,GAAMoG,SAChB7nB,IAAUyhB,GAAMqG,SAChB9nB,IAAUyhB,GAAMuH,QAChBhpB,IAAUyhB,GAAMsI,KAEnB,CAKeQ,SAAAA,GAAkBC,EAAeC,GAG/C,OAFWH,GAAgBE,IAAUE,OAAOC,YACjCL,GAAgBG,IAAUC,OAAOC,UAE7C,CAEK,SAAAC,GAA2BhnB,GAC/B,aAAOA,OAAAA,EAAAA,EAAMzC,QAAS,GAAKyC,EAAKuG,WAAW,KAC5C,CChsBY0gB,IAAAA,GACX,SACSC,EACAC,EACAC,EACAC,QAHAH,QAGU,EAAAtpB,KAFVupB,QAEU,EAAAvpB,KADVwpB,QACU,EAAAxpB,KAAVypB,QAHA,EAAAzpB,KAAEspB,GAAFA,EACAtpB,KAAEupB,GAAFA,EACAvpB,KAAEwpB,GAAFA,EACAxpB,KAAEypB,GAAFA,CACL,EAGOC,GACX,SAAmB5W,EAAkB6W,GAAlB7W,KAAAA,cAAkB6W,OAAS,EAA3B3pB,KAAC8S,EAADA,EAAkB9S,KAAC2pB,EAADA,CAAa,EAGpDC,GACE,SACS/C,EACAwB,EACAZ,EACAvC,GAAcllB,KAHd6mB,UACAwB,EAAAA,KAAAA,SACAZ,EAAAA,KAAAA,WACAvC,EAAAA,KAAAA,cAHAllB,KAAI6mB,KAAJA,EACA7mB,KAAGqoB,IAAHA,EACAroB,KAAKynB,MAALA,EACAznB,KAAMklB,OAANA,CACL,EAGN2E,GACE,SACSC,EACAhf,EACAif,EACAC,GAHAF,KAAAA,SACAhf,EAAAA,KAAAA,UACAif,EAAAA,KAAAA,oBACAC,aAAe,EAHfhqB,KAAG8pB,IAAHA,EACA9pB,KAAI8K,KAAJA,EACA9K,KAAO+pB,QAAPA,EACA/pB,KAAOgqB,QAAPA,CACL,EAONC,GAOE,SACSV,EACAE,EACAH,EACAE,GAHAD,KAAAA,QACAE,EAAAA,KAAAA,eACAH,QACU,EAAAtpB,KAAVwpB,QAAU,EAAAxpB,KATnB6mB,KAAuB,KAGvBY,KAAAA,MAAwB,KAGfznB,KAAEupB,GAAFA,EACAvpB,KAAEypB,GAAFA,EACAzpB,KAAEspB,GAAFA,EACAtpB,KAAEwpB,GAAFA,CACL,EAGUU,SAAAA,GAAeC,EAAaC,GAC1C,SAAUN,IAAIH,EAAIS,EAAGN,IAAIH,GAAKQ,EAAGL,IAAIhX,EAAIsX,EAAGN,IAAIhX,CACjD,CAEYuX,IAAAA,2BACX,SAAmBC,EAAAA,GAAAA,KAAAA,YAAA,EAAAtqB,KAAMsqB,OAANA,CAAmB,CADxC,IAAA5pB,EAAA2pB,EAAA9mB,iBAAA7C,EASE6pB,YAAA,SAAYnf,EAAgBoC,GAI1B,IAHA,IAAY8c,EAAGtqB,KAAKsqB,OACR3qB,EAAG2qB,EAAO3qB,OACd6qB,EAAGF,EAAO3qB,EAAS,GAClBuE,EAAI,EAAGA,EAAIvE,EAAQuE,IAAK,CAC/B,IACcwG,EADRjD,EAAO6iB,EAAOpmB,GAGlBwG,EADE8f,EAAKb,EAAIliB,EAAKkiB,EACZ,IAAIE,GAAQW,EAAM/iB,EAAM,EAAG+F,GAE3B,IAAIqc,GAAQpiB,EAAM+iB,GAAO,EAAGhd,GAElCpC,EAAIzJ,KAAK+I,GACT8f,EAAO/iB,CACR,CACF,EAEDgjB,EAAAA,WAAA,SAAWC,EAAiBC,GAE1B,IADA,IACAtiB,EADYiiB,EAAG,GACfhiB,EAAAU,EAAgBhJ,KAAKsqB,UAArBjiB,EAAAC,KAAAC,MAA6B,CAAlBwE,IAAAA,EACTud,EAAAA,MAAAA,EAAO3oB,KAAK,IAAI+nB,GAAM3c,EAAE+F,EAAI4X,EAAS3d,EAAE4c,EAAIgB,GAC5C,CACD,OAAWN,IAAAA,EAAMC,EAClB,OAGG,SAAAM,GACJC,EACAC,EACAC,EACAC,GAIA,IAFA,MACwB,GACf9mB,EAAI,EAAGA,EAFF,GAEaA,IAAK,CAC9B,IAAMhF,EAAS,EAAJgF,EAAQ+C,KAAKgkB,GAHZ,GAIZX,EAAO3oB,KAAK,IAAA+nB,GAAUmB,EAAKE,EAAK9jB,KAAKikB,IAAIhsB,GAAI4rB,EAAKE,EAAK/jB,KAAKkkB,IAAIjsB,IACjE,CACD,OAAWmrB,IAAAA,GAAMC,EAClB,CAEec,SAAAA,GACd9B,EACAC,EACAC,EACAC,GAEA,OAAWY,IAAAA,GAAM,CACf,IAAAX,GAAUJ,EAAIC,GACd,IAAIG,GAAMF,EAAID,GACd,OAAUC,EAAIC,GACd,IAAAC,GAAUJ,EAAIG,IAEjB,CAWD,OACE,SACS3W,EACAiX,EACAC,EACAqB,GAHAvY,KAAAA,OACAiX,EAAAA,KAAAA,aACAC,EAAAA,KAAAA,oBACAqB,eAAiB,EAHjBrrB,KAAC8S,EAADA,EACA9S,KAAO+pB,QAAPA,EACA/pB,KAAOgqB,QAAPA,EACAhqB,KAASqrB,UAATA,CACL,EAGU,YAAW3gB,EAAYif,GACrC,IAAO7W,EACLpI,EAAEof,IAAIhX,GAAMpI,EAAEI,KAAKgI,EAAIpI,EAAEof,IAAIhX,IAAM6W,EAAIjf,EAAEof,IAAIH,IAAOjf,EAAEI,KAAK6e,EAAIjf,EAAEof,IAAIH,GACvE,GAAI2B,MAAMxY,GACR,MAAU/T,IAAAA,MAAM,oBAElB,OAAO+T,CACR,CAEK,SAAAyY,GACJC,EACA9gB,EACA6e,EACAE,GAEA,IAAAH,EACImC,MAGA/gB,EAAEI,KAAK6e,EAAIJ,GACb9mB,EAAexB,KAAK,mCAElByJ,EAAEof,IAAIH,GAAKJ,GAEbD,EAAKoC,GAAWhhB,EAAG6e,GACnBkC,EAAK/gB,EAAEqf,UAEPT,EAAK5e,EAAEof,IAAIhX,EACX2Y,EAAK,GAEH/gB,EAAEI,KAAK6e,GAAKF,GAEdD,EAAKkC,GAAWhhB,EAAG+e,GACnBkC,EAAKjhB,EAAEqf,UAEPP,EAAK9e,EAAEI,KAAKgI,EACZ6Y,EAAK,GAEHrC,EAAKE,GACPgC,EAAc7pB,KAAK,OAAqB2nB,EAAImC,EAAI/gB,EAAEsf,SAAU,IAC5DwB,EAAc7pB,KAAK,IAAIiqB,GAAiBpC,EAAImC,EAAIjhB,EAAEsf,QAAS,MAE3DwB,EAAc7pB,KAAK,OAAqB6nB,EAAImC,EAAIjhB,EAAEsf,SAAU,IAC5DwB,EAAc7pB,KAAK,IAAIiqB,GAAiBtC,EAAImC,EAAI/gB,EAAEsf,QAAS,IAE9D,CAEe6B,SAAAA,GACdL,EACAM,EACAC,GAEA,IAGI7nB,EAHE8nB,EAAaF,EAAeC,EAC5BE,EAAsB9sB,MAAM6sB,KACN7sB,MAAM6sB,GAElC,IAAK9nB,EAAI,EAAGA,GAAK8nB,EAAY9nB,IAC3B+nB,EAAU/nB,GAAK,EACfgoB,EAAUhoB,GAAK,EAKjB,IAHA,IAAMioB,EAAoB,GACtBC,GAAkB,EAChBC,EAAoBb,EAAc7rB,SAC3B,EAAG6L,EAAI6gB,EAAmB7gB,IAAK,CAC1C,IAAkB8gB,EAAGd,EAAchgB,GACnCygB,EAAUK,EAAatC,UAAYsC,EAAavC,QAChDmC,EAAUI,EAAatC,UAAYsC,EAAajB,UAChD,IAAIkB,GAAc,EAClB,IAAKroB,EAAI,EAAGA,EAAI4nB,EAAc5nB,IAC5B,GAAI+nB,EAAU/nB,KAAOgoB,EAAUhoB,GAAI,CACjCqoB,GAAc,EACd,KACD,CAEH,GAAIA,EACF,IAAKroB,EAAI4nB,EAAc5nB,GAAK8nB,EAAY9nB,IACtC,GAAI+nB,EAAU/nB,IAAMgoB,EAAUhoB,GAAI,CAChCqoB,GAAc,EACd,KACD,CAGDH,GAAUG,IACZJ,EAAQxqB,KAAK2qB,EAAaxZ,GAC1BsZ,EAASG,EAEZ,CACD,QACD,UAYerlB,GAAMP,EAAWgN,GAC/B,OAAOA,EAAO1M,KAAKC,MAAMP,EAAIgN,GAAQA,EAAOhN,CAC7C,CASe6lB,SAAAA,GAAUC,GACxB,OAAO,OAASA,EAAIlD,IAAKkD,EAAIjD,GAAIiD,EAAIhD,IAAKgD,EAAInD,GAC/C,CAKeoD,SAAAA,GAAYD,GAC1B,OAAO,IAAApD,IAAUoD,EAAIhD,GAAIgD,EAAInD,IAAKmD,EAAIlD,GAAIkD,EAAIjD,GAC/C,CAEemD,SAAAA,GAAYC,GAC1B,OAAWvC,IAAAA,GAAMuC,EAAMtC,OAAO7e,IAAI,SAACohB,GAAUC,OAnB/BA,SAAYD,GAC1B,OAAWnD,IAAAA,GAAMmD,EAAMlD,GAAIkD,EAAM/Z,EAClC,CAiB8Cga,CAAYD,EAAvB,GACnC,UA6JeE,GAAUN,EAAWO,GAMnC,IALA,IAAKxhB,EAAGwhB,EAAMrtB,OAAS,EAIXstB,EAAG,IAAAhD,GAASwC,EAAIhD,GAAIgD,EAAIhD,GAAIgD,EAAInD,GAAImD,EAAIjD,IAC7Che,GAAK,GAAG,CACb,MAAiByhB,IACjBA,EAAWD,EAAMxhB,IAENie,GAAKwD,EAAS1D,GAAK,GAC3B0D,EAAS3D,IAAM4D,EAAS5D,IAAM2D,EAASzD,IAAM0D,EAAS1D,MAEvD0D,EAAS3D,GAAK0D,EAAS1D,GACvByD,EAAMnqB,OAAO2I,EAAG,GAChByhB,EAAWC,GAEb1hB,GACD,CACF,CAKe2hB,SAAAA,GAASH,EAAerD,GAGtC,IAFA,MAAU,EACF7e,EAAGkiB,EAAMrtB,OACVmqB,EAAMhf,GAAM,CACjB,IAASsiB,EAAGnmB,KAAKC,OAAO4iB,EAAMhf,GAAQ,GAClC6e,GAAKqD,EAAMI,GAAK3D,GAClBK,EAAMsD,EAAM,EAEZtiB,EAAOsiB,CAEV,CACD,OACDtD,CAAA,CAQe,YACdkD,EACAK,GAEA,IAAKL,EAAMrtB,OACT,OAAO0tB,EAET,IACIC,EACAppB,EAFOqpB,EAAGF,EAAK9D,GAGnB,IAAKrlB,EAAI,EAAGA,EAAI8oB,EAAMrtB,WACpB2tB,EAAON,EAAM9oB,IAENulB,GAAK4D,EAAK9D,IACf+D,EAAKhE,GAAK,IAAO+D,EAAK/D,IACtBgE,EAAK9D,GAAK,IAAO6D,EAAK7D,IALItlB,IAS1BqpB,EAAUtmB,KAAK4L,IAAI0a,EAASD,EAAK7D,IAIrC,IADA,IAAc+D,EAAGD,EACVrpB,EAAI8oB,EAAMrtB,WACf2tB,EAAON,EAAM9oB,IAENqlB,IAAM8D,EAAK5D,IAChB6D,EAAKhE,GAAK,GAAM+D,EAAK/D,IACrBgE,EAAK9D,GAAK,GAAM6D,EAAK7D,IALAtlB,IASrBspB,EAAaF,EAAK7D,GAQtB,OAJE+D,EADEtpB,IAAM8oB,EAAMrtB,OACD0tB,EAAK5D,GAELxiB,KAAK8G,IAAIyf,EAAYH,EAAK5D,MAEvB8D,OAGLlE,IAAAA,GAAKgE,EAAK/D,GAAIiE,EAASF,EAAK7D,GAAIgE,EAE9C,CAQe,YACdR,EACAK,GAEA,IAAKL,EAAMrtB,OACT,OAAO0tB,EAET,IACIC,EACAppB,EAFAspB,EAAaH,EAAK5D,GAGtB,IAAKvlB,EAAI8oB,EAAMrtB,OAAS,EAAGuE,GAAK,IAC9BopB,EAAON,EAAM9oB,KACTA,IAAM8oB,EAAMrtB,OAAS,GAAK2tB,EAAK7D,GAAK4D,EAAK5D,QAG3C6D,EAAK/D,GAAK8D,EAAK5D,IACf6D,EAAKhE,GAAK,IAAO+D,EAAK/D,IACtBgE,EAAK9D,GAAK,IAAO6D,EAAK7D,IAPStlB,IAW/BspB,EAAavmB,KAAK8G,IAAIyf,EAAYF,EAAK/D,IAI3C,IADA,IAAWgE,EAAGtmB,KAAK8G,IAAIyf,EAAYF,EAAK7D,IACjCvlB,GAAK,MACVopB,EAAON,EAAM9oB,IAENulB,IAAM4D,EAAK9D,IAChB+D,EAAKhE,GAAK,GAAM+D,EAAK/D,IACrBgE,EAAK9D,GAAK,GAAM6D,EAAK7D,IALVtlB,IASXqpB,EAAUD,EAAK/D,GAInB,OAAIiE,IADJD,EAAUtmB,KAAK4L,IAAI0a,EAASF,EAAK9D,UAIxB,IAAAF,GAASgE,EAAK/D,GAAIiE,EAASF,EAAK7D,GAAIgE,EAE9C,CCviBD,IAAAC,gBAAA,SAAAC,GAGE,SAAAD,IAAA,IAAA9U,EAAA,OACEA,EADF+U,EAAAhqB,KAAA1D,OAAAA,MAFA2tB,QAAsC,GAEtChV,CAEC,CALHC,EAAA6U,EAAAC,GAAA,IAAAhtB,EAAA+sB,EAAAlqB,UAAA,OAAA7C,EAOWsf,WAAA,SAAWC,GAElB,OADAjgB,KAAK2tB,QAAQ1N,EAAM7d,OAAQ,EAE5B6d,CAAA,EAEQU,EAAAA,eAAA,SAAe9W,GAEtB,OADA7J,KAAKyf,YAAY5V,EAAK0I,QACf1I,CACR,EAfH4jB,CAAA,CAAA,CAAgCG,IA+BhCC,gBAAA,SAAAC,GACE,SAAmBtvB,EAAAA,GAAa,IAAA4a,EAAA,OAC9BA,EAD8B0U,EAAApqB,KAAA1D,OAAAA,MAAbxB,WAAa,EAAb4a,EAAK5a,MAALA,EAAa4a,CAE/B,CAH6BwU,OAAhChV,EAAAiV,EAAAC,GAAAD,EAAAtqB,UAKW8c,SAAA,SAAS1D,GAEhB,OADA3c,KAAKxB,MAAQme,EAAIA,IAElBA,CAAA,EAR6BiR,CAAAA,CAAhC,CAAgCA,IAWhBG,SAAAA,GAAMva,EAAcwa,GAClC,GAAIxa,EAAK,CACP,IAAMqO,EAAU,IAAAgM,GAAeG,GAC/B,IAEE,OADAxa,EAAIkM,MAAMmC,GACIA,EAACrjB,KAGhB,CAFC,MAAO4K,GACP3G,EAAexB,KAAKmI,EAAK,UAC1B,CACF,CACD,OAAO4kB,CACR,CAED,IAAAC,gBAAA,SAAAC,GAKE,SAAAD,IAAA,IAAApR,EAAA,OACEA,EADFqR,EAAAxqB,KAAA1D,OAAAA,MAJAmuB,SAAmB,EAInBtR,EAHAuR,OAAwB,GAGxBvR,EAFAza,KAAsB,KAEtBya,CAEC,CAPHjE,EAAAqV,EAAAC,GAAA,IAAAxf,EAAAuf,EAAA1qB,UAAkCqqB,OAAlClf,EASWwR,aAAA,SAAaC,GAIpB,OAHIngB,KAAKmuB,SACPnuB,KAAKouB,OAAOzsB,KAAKwe,GAEZ,IACR,EAdHzR,EAgBW0R,SAAA,SAASzD,GAIhB,OAHI3c,KAAKmuB,SAAsB,GAAXxR,EAAIA,KACtB3c,KAAKouB,OAAOzsB,KAAK,IAAIisB,GAAY,EAAG,OAGvC,IAAA,EAEQjN,EAAAA,eAAA,SAAe9W,GAEtB,OADA7J,KAAKyf,YAAY5V,EAAK0I,QACf,IACR,EA1BH7D,EA4BWmS,UAAA,SAAUC,GAOjB,OANK9gB,KAAKmuB,UACRnuB,KAAKmuB,SAAU,EACfnuB,KAAKyf,YAAYqB,EAAKvO,QACtBvS,KAAKmuB,SAAU,EACfnuB,KAAKoC,KAAO0e,EAAK1e,KAAK6D,eAGzB,IAAA,EAEDooB,EAAAA,SAAA,SACEvb,EACA6W,EACA2E,EACAC,EACAxW,GAEA,IAAAiF,EAAAhd,KAAA,GAAIA,KAAKouB,OAAOzuB,OAAS,EAAG,CAC1B,IAAM6uB,EAAoB,GAY1B,OAXAxuB,KAAKouB,OAAO5sB,QAAQ,SAACitB,EAAOvqB,GAC1B,GAAkB,KAAduqB,EAAM9a,KAAa,CACrB,IAAOlE,EAAGvL,EAAI,GAAK,EAAIoqB,EAAQC,EACtB,GAALrqB,GAAuB,UAAb8Y,EAAK5a,OACjBqN,EAAMxI,KAAK2L,MAAM0b,EAAQA,EAAQC,EAASA,GAAU,IAEtDC,EAAQ7sB,KAAM8sB,EAAM9R,IAAMlN,EAAO,IAClC,MACC+e,EAAQ7sB,KAAK8sB,EAAM9R,IAAM5E,EAAQjC,cAAc2Y,EAAM9a,MAAM,GAE9D,GACO3T,KAAKoC,MACX,IAAK,UACH,GAAIosB,EAAQ7uB,OAAS,GAAK,EAAG,CAE3B,IADA,IAAM2qB,EAA+B,GAC5B9e,EAAI,EAAGA,EAAIgjB,EAAQ7uB,OAAQ6L,GAAK,EACvC8e,EAAO3oB,KACL,IAAgB+sB,GAAO5b,EAAI0b,EAAQhjB,GAAIme,EAAI6E,EAAQhjB,EAAI,KAG3D,OAAO,IAAgBmjB,GAAOrE,EAC/B,CACD,MACF,IAAK,YACH,GAAsB,GAAlBkE,EAAQ7uB,OACV,OAAmBivB,GACjB9b,EAAI0b,EAAQ,GACZ7E,EAAI6E,EAAQ,GACZ1b,EAAI0b,EAAQ,GAAKA,EAAQ,GACzB7E,EAAI6E,EAAQ,GAAKA,EAAQ,IAG7B,MACF,IAAK,UACH,GAAsB,GAAlBA,EAAQ7uB,OACV,OAAmBkvB,GACjB/b,EAAI0b,EAAQ,GACZ7E,EAAI6E,EAAQ,GACZA,EAAQ,GACRA,EAAQ,IAGZ,MACF,IAAK,SACH,GAAsB,GAAlBA,EAAQ7uB,OACV,OAAOmvB,GACLhc,EAAI0b,EAAQ,GACZ7E,EAAI6E,EAAQ,GACZA,EAAQ,GACRA,EAAQ,IAKjB,CACD,OACD,IAAA,EAvG+BZ,CAAAA,CAAlC,CAAkCA,IA0GlBmB,SAAAA,GACdvb,EACAV,EACA6W,EACA2E,EACAC,EACAxW,GAEA,GAAIvE,EAAK,CACP,IAAMqO,EAAU,IAAhBoM,GACA,IAEE,OADAza,EAAIkM,MAAMmC,GACHA,EAAQwM,SAASvb,EAAG6W,EAAG2E,EAAOC,EAAQxW,EAG9C,CAFC,MAAO3O,GACP3G,EAAexB,KAAKmI,EAAK,WAC1B,CACF,CACD,OAAmBwlB,GAAc9b,EAAG6W,EAAG7W,EAAIwb,EAAO3E,EAAI4E,EACvD,CAED,IAAAS,gBAAA,SAAAC,GAIE,SAA4BC,EAAAA,GAAc,IAAA9R,EAAA,OACxCA,EADwC6R,EAAAvrB,KAAA1D,OAAAA,MAAdkvB,WAAc,EAAA9R,EAH1C+R,SAAsC,CAAA,EAGI/R,EAF1Chb,KAAsB,KAEMgb,EAAK8R,MAALA,EAAc9R,CAEzC,CANHxE,EAAAoW,EAAAC,GAAA,IAAAnW,EAAAkW,EAAAzrB,UAAqCqqB,OAArC9U,EAQWkH,WAAA,SAAWC,GAOlB,OANAjgB,KAAKoC,KAAO6d,EAAMrZ,WAEhB5G,KAAKmvB,SAASnvB,KAAKoC,MADjBpC,KAAKkvB,MACoB,GAEClvB,KAAKmvB,SAASnvB,KAAKoC,OAAS,GAAK,EAExD6d,CACR,EAhBHnH,EAkBWuH,SAAA,SAAS1D,GAIhB,OAHI3c,KAAKoC,OACPpC,KAAKmvB,SAASnvB,KAAKoC,OAASua,EAAIA,KAAO3c,KAAKkvB,MAAQ,EAAI,IAEnDvS,CACR,EAvBH7D,EAyBW6H,eAAA,SAAe9W,GAEtB,OADA7J,KAAKyf,YAAY5V,EAAK0I,QAEvB1I,CAAA,EA5BkC+jB,CAAAA,CAArC,CAAqCA,IA+BrBwB,SAAAA,GACd5b,EACA0b,GAEA,IAAMrN,EAAU,IAAAmN,GAAoBE,GACpC,IACE1b,EAAIkM,MAAMmC,EAGX,CAFC,MAAOzY,GACP3G,EAAexB,KAAKmI,EAAK,cAC1B,CACD,OAAcyY,EAACsN,QAChB,CAEYE,IAAAA,gBACX,SAAAC,GAAA,SAAAD,EACSE,EACAC,GAEP,IAAAlS,EAF+C,OAE/CA,EAAAgS,EAAA5rB,KAAA1D,OAAAA,MAHOuvB,aACAC,EAAAA,EAAAA,iBADA,EAAAlS,EAAOiS,QAAPA,EACAjS,EAAWkS,YAAXA,EAAwClS,CAGhD,CANsCsQ,OACvChV,EAAAyW,EAAAC,GADFD,EAAA9rB,UAQWid,SAAA,SAASpb,GAChB,OAAO,IAAOqqB,GAAKzvB,KAAKwvB,YAAYE,aAAatqB,EAAIA,IAAKpF,KAAKuvB,SAChE,EAVsC3B,CAAAA,CACvC,CADuCA,IC7NzC,SAAS+B,GACPR,GAEA,IAAM3nB,EAAS,CAAf,EAIA,OAHA1D,OAAOC,KAAKorB,GAAU3tB,QAAQ,SAACY,GAC7BoF,EAAOpF,GAAQjD,MAAMC,KAAK+vB,EAAS/sB,GACpC,GACMoF,CACR,CASYooB,ICEbC,GDFaD,2BAKX,SAA4BE,EAAAA,EAAyBC,QAAzBD,cAA0C,EAAA9vB,KAAjB+vB,cAJrDC,EAAAA,KAAAA,aAAyC,KAI6BhwB,KAHtEiwB,YAAsB,EACtBC,KAAAA,WAAqB,EAEOlwB,KAAQ8vB,SAARA,EAAyB9vB,KAAQ+vB,SAARA,CAAqB,CAL5E,IAOEI,EAAAA,EAAAA,iBAAAA,EAAAA,OAAA,SAAOjY,GACL,OAAIlY,OAASkY,KAGRA,GAIE4X,KAAAA,WAAa5X,EAAM4X,UACxB9vB,KAAK+vB,WAAa7X,EAAM6X,UACxB/vB,KAAKiwB,aAAe/X,EAAM+X,YAC1BjwB,KAAKkwB,YAAchY,EAAMgY,SAE5B,EAKDE,EAAAA,WAAA,WACE,OAAYL,KAAAA,QACb,EAKDM,EAAAA,QAAA,WACErwB,KAAK+vB,UAAW,CACjB,EAlCHrvB,EAuCE4vB,UAAA,WACEtwB,KAAK+vB,UAAW,CACjB,OAGGQ,2BACJ,SACkBC,EAAAA,EACA9qB,GAAe1F,KADfwwB,kBACA9qB,EAAAA,KAAAA,eADA1F,KAAYwwB,aAAZA,EACAxwB,KAAO0F,QAAPA,CACd,4BAGJ+qB,aAAA,SAAajjB,EAAY2hB,GACvB3hB,EAAKxN,KAAKwwB,aAAaE,uBAAuBC,kBAC5CnjB,EACAxN,KAAK0F,SAEP1F,KAAKwwB,aAAaI,aAAapjB,GAAM2hB,CACtC,IAED0B,uBAAA,WACE,OAAO7wB,KAAKwwB,aAAaK,wBAC1B,uBAcD,WAAA,SAAAC,EACkBN,EACA9qB,EACAoP,EACAic,GAA6B/wB,KAH7BwwB,kBACA9qB,EAAAA,KAAAA,oBACAoP,eAC6B,EAAA9U,KAA7B+wB,eAPlBC,EAAAA,KAAAA,OAAkC,KAOahxB,KAN/CixB,kBAAuC,CAMQ,EAH7BjxB,KAAYwwB,aAAZA,EACAxwB,KAAO0F,QAAPA,EACA1F,KAAS8U,UAATA,EACA9U,KAAS+wB,UAATA,CACd,4BAEJG,UAAA,SAAUF,GACRhxB,KAAKgxB,OAASA,CACf,IAEOG,YAAA,SAAY/rB,GAClB,IAAOE,EAAGF,EAAIC,MAAM,gBACpB,OAAOC,EAAIA,EAAE,GAAK,IACnB,EAEO8rB,EAAAA,iBAAA,SAAiBhsB,GACvB,MAAoBpF,KAAKwwB,aAAaE,uBAAuBhB,aAC3DrgB,EAAgBjK,EAAKpF,KAAK0F,SAC1B1F,KAAK0F,SAKP,MAHgC,MAA5B2rB,EAAcliB,OAAO,KACvBkiB,EAAgBA,EAAcC,UAAU,KAG3C,IAGDC,kBAAA,SACEnvB,EACAovB,GAEA,IAAA7Y,EAAA3Y,KAKMghB,EAAO,IAAIgD,GACfhkB,KAAK+wB,UACL,kBAAYS,EAPW,WACvB,IAAYjf,EAAGoG,EAAK6X,aAAaiB,oBAAoBrvB,GACrD,OAAamQ,GAAIA,EAAO5S,OAAS4S,EAAOA,EAAO5S,OAAS,GAAK,IAC9D,CAIc+xB,GAAb,EACgBtvB,gBAAAA,GAQlB,OADApC,KAAKwwB,aAAamB,wBAAwBvvB,EAJtB,SAACgJ,GACnB,SAAcA,EAAI,GACnB,EAE4D4V,GACtDA,CACR,EAGD4Q,EAAAA,mBAAA,SACExvB,EACAovB,gBAMa,OACXxxB,KAAK+wB,UACL,kBAAYS,IALAhB,aAAaiB,oBAAoBrvB,IAAS,GAKtD,EACiBA,iBAAAA,GAGnB,OADApC,KAAKwwB,aAAamB,wBAAwBvvB,EAAMovB,EAAQxQ,GACjDA,CACR,EAgBO6Q,EAAAA,kBAAA,SACNrkB,EACA6jB,EACAS,GAEA,IAAkBC,EAAG/xB,KAAKwwB,aAAaI,aAAaS,GAKpD,OAJKU,GAAkBD,GAAkBtkB,IACvCxN,KAAKgxB,OAAOgB,sBAAsBxkB,GAClCukB,EAAiB/xB,KAAKwwB,aAAaI,aAAaS,IAE7BU,GAAI,IAC1B,IAQOE,sBAAA,SACNZ,GAEA,OAAIrxB,KAAKwwB,aAAa0B,YAAYC,aAAad,GACjCb,KAAAA,aAAaiB,yBAEbjB,aAAa4B,iBAAiBf,IAAkB,IAE/D,EAGDgB,EAAAA,oBAAA,SACEjtB,EACAhD,EACAovB,GAAqC,IAAA3U,EAAA7c,KAE7BwN,EAAGxN,KAAKmxB,YAAY/rB,GACTisB,EAAGrxB,KAAKoxB,iBAAiBhsB,KAI7BpF,KAAK6xB,kBAAkBrkB,EAAI6jB,GAAe,GACzD,GAAIlC,GAAYA,EAAS/sB,GAAO,CAG9B,IAAoBkwB,EAAGnD,EAAS/sB,GAChC,WAAgB+f,GACdniB,KAAK8U,UACL0c,EAAOc,EAAeA,EAAe3yB,OAAS,IAAM,MAEvD,CACD,OAAO,OACLK,KAAK+wB,UACL,WAKE,GAFA5B,EAAWtS,EAAKgV,kBAAkBrkB,EAAI6jB,GAAe,GAEvC,CACZ,GAAIlC,EAAS/sB,GAAO,CAGlB,IAAoBmwB,EAAGpD,EAAS/sB,GAChC,OAAOovB,EAAOc,EAAeA,EAAe3yB,OAAS,IAAM,KAC5D,CACC,IAAkBqwB,EAAGnT,EAAKoV,sBAAsBZ,GAChD,GAAIrB,EAAc,CAGhB,GADAnT,EAAK2T,aAAagC,iBAAiBnB,GAC/BrB,EAAa5tB,GAAO,CACtB,MAA2B4tB,EAAa5tB,GACxC,OAAOovB,EACLiB,EAAmBA,EAAmB9yB,OAAS,IAAM,KAExD,CAEC,OAAa6xB,EAAC,EAEjB,CAMC,OAJA3U,EAAK2T,aAAakC,2BAChBrB,GACA,GAEK,IAGZ,CAKC,OADAxU,EAAK2T,aAAakC,2BAA2BrB,GAAe,GACrD,IAEV,oBACiBjvB,EA5Cb,OA4CwBgD,EAEhC,IAGDutB,qBAAA,SACEvtB,EACAhD,EACAovB,GAEA,IAAAxU,EAAAhd,OAAWA,KAAKmxB,YAAY/rB,KACNpF,KAAKoxB,iBAAiBhsB,GAC5C,OAAO,OACLpF,KAAK+wB,UACL,WACE,IAAkBf,EAAGhT,EAAKiV,sBAAsBZ,GAEhD,GAAKrB,EAIE,CACLhT,EAAKwT,aAAagC,iBAAiBnB,GACnC,IAAMoB,EAAqBzC,EAAa5tB,IAAS,KACzB4a,EAAK6U,kBAC3BrkB,EACA6jB,GACA,GAGF,SAAcoB,EAAmB/yB,OADHkzB,EAAgBxwB,IAAS,IAExD,CAXC,OADA4a,EAAKwT,aAAakC,2BAA2BrB,GAAe,GACrD,IAYV,EApBI,mBAqBcjvB,EAAWgD,OAAAA,EAEjC,IAMDytB,kBAAA,SAAkBzwB,EAAc0wB,GAC9B,IAAA1V,EAAApd,KAAA,WAAgB+yB,GACd/yB,KAAK+wB,UACL,WACE,IAAMiC,EAAe5V,EAAK6T,kBAAkB7uB,GAC5C,IAAK4wB,EACH,MAAO,GA4BT,IA1BA,IAAMC,EAAUnvB,OAAOC,KAAKivB,GACzBvnB,IAAI,SAACvM,GAAMkQ,OAAAA,SAASlQ,EAAG,GAAnB,GACJg0B,KAAK7jB,MAEY+N,EAAKoT,aAAa0B,cACdA,EAAYiB,YAChCjB,EAAY3jB,OAAS,EACrB2jB,EAAY3jB,OACI6kB,EAAGlB,EAAYiB,YAC/BE,EACApsB,KAAK4L,UAAL5L,KAAI,CACFosB,GACGl0B,OAAAA,MAAMC,KACP8yB,EAAYoB,UAAUC,iBAAtB,uBAGA9nB,IAAI,SAACpM,UACG+P,SAAC/P,EAAEuK,aN/UQ,oBM+UgC,GAD/C,QAKO,KACA,KACD,KACO,EAEf1F,EAAG,EAAGA,EAAI+uB,EAAQtzB,OAAQuE,IAAK,CACvC,IAAYqK,EAAG0kB,EAAQ/uB,KACJA,EAAI,EAAI+uB,EAAQ/uB,EAAI,IAAM,EACvCsvB,EAAatvB,EAAI+uB,EAAQtzB,OAAS,EAAIszB,EAAQ/uB,EAAI,IAAM,EAC9D,GAAIqK,EAAS6kB,EACX,MAEF,GAAI7kB,GAAU8kB,EAAiB,CAK7B,GAJII,EAAc,IAChBA,EAAcllB,EACdmlB,GAAqB,GAEnBC,EAAc,EAChB,GAAIplB,IAAW8kB,EACbM,EAAcplB,MACT,CACDqlB,EAAaH,IACfE,EAAcC,GAGhB,MAAwB1B,EAAYoB,UAAUO,cACxCxkB,sBAA6Bd,EADnC,MAGA,GAAKulB,EAKE,CACL,IAA4BC,EAC1B7B,EAAYoB,UAAUO,cAAtB,sBACmCR,EAFrC,MAYA,GARKU,IAGHA,EACE7B,EAAYoB,UAAUO,yCAItBE,EAEF,IACE,MAAcA,EACdzqB,EACAA,EAAUA,EAAQ0qB,kBAElB,GAAI1qB,IAAYwqB,EAAiB,CAC/BH,EAAcplB,EACd,KACD,CAGN,MA7BKolB,EAAc,IAChBA,EAAcplB,EA6BnB,CAEH0lB,EAAa1lB,CACd,MAAUilB,EAAaJ,GAAkBI,EAAa,KACrDC,EAAcE,EAAcM,EAAaP,EAAoBnlB,EAEhE,CAYD,OATEykB,EACE,CACEkB,MAAOT,EACPU,MAAOR,EACPS,KAAMH,EACN,eAAgBP,GAChBZ,KACC,EAGR,kBACeA,EA5GX,IA4G+B1wB,EAEvC,IAMDiyB,eAAA,SACEjyB,EACAkf,EACAgT,IAGEt0B,KAAKixB,kBAAkB7uB,KAAUpC,KAAKixB,kBAAkB7uB,GAAQ,CAAA,IAC3DkyB,EAAgBC,sBAAwBjT,CAChD,IAvVD,GA0VFkT,gBAAA,WAoBE,WACkB9D,QAAAA,4BAAmD,EAAA1wB,KApBrE4wB,aAA4D,QAC5DwB,iBAAgE,CAAA,EAChEX,KAAAA,oBAAgD,CAkBqB,EAAAzxB,KAjBrEy0B,qBAAiD,CAAA,OACjDC,yBAAuD,GACvDC,KAAAA,gBAEI,CAaiE,EAAA30B,KAZrEkyB,YAA0B,UAC1B0C,2BAAuD,GAWc50B,KAVrE60B,kBAA8C,GAC9CC,KAAAA,uBAAqD,GASgB90B,KARrE+0B,qBAAoE,CAQC,OAPrEC,mBAAkE,CAAA,EAC1DC,KAAAA,kBAGF,GAGYj1B,KAAsB0wB,uBAAtBA,EAEhB1wB,KAAKyxB,oBAAL,KAAmC,CAAC,EACrC,CAxBH,IAAA3Y,EAAA0b,EAAAjxB,UAAA,OAAAuV,EA0BEoc,sBAAA,SAAsBxvB,GACpB,OAAW6qB,IAAAA,GAAgBvwB,KAAM0F,EAClC,IAEDyvB,sBAAA,SACEzvB,EACAoP,EACAic,GAEA,WAAOD,GAAoB9wB,KAAM0F,EAASoP,EAAWic,EACtD,IAEDqE,eAAA,SAAe9N,GACbtnB,KAAKkyB,YAAc5K,CACpB,IAEO+N,kBAAA,SAAkBC,EAAqB92B,GACzCwB,KAAKyxB,oBAAoB6D,GAC3Bt1B,KAAKyxB,oBAAoB6D,GAAa3zB,KAAKnD,GAE3CwB,KAAKyxB,oBAAoB6D,GAAe,CAAC92B,EAE5C,EAhDHsa,EAqDEyc,oBAAA,SAAoBC,GAClB,IAAcrG,EAAGnvB,KAAKyxB,oBAAL,KACZtC,GAAaA,EAASxvB,OAGzBwvB,EAASA,EAASxvB,OAAS,GAAK61B,EAFhCx1B,KAAKyxB,oBAAL,KAAmC,CAAC+D,EAIvC,EA5DH1c,EAmEE2c,mBAAA,SACEC,EACA3d,GAIA,IAAA4d,EADA31B,KAAKy0B,qBAAuB9E,GAAmB3vB,KAAKyxB,qBAEpD,MAAMvC,EAAQwG,EAAkB,iBAChC,GAAIxG,EAAO,CACT,IAAM0G,EAAW1G,EAAMxY,SAASqB,GAC5B6d,IACFD,EAAWE,GAAmBD,GAAU,GAE3C,CACD,GAAID,EACF,IAAK,SAA0BA,EAC7B31B,KAAKq1B,kBAAkBS,EAAkBH,EAASG,IAItD,MAAkBJ,EAChB,qBAEF,GAAIK,EAAW,CACb,MAAqBA,EAAUrf,SAASqB,GACpCie,IACFC,EAAeJ,GAAmBG,GAAc,GAEnD,CAYD,IAAK,IAALE,KARID,EACI,SAAFA,IACFA,EAAY,KAAW,IAGzBA,EAAe,CAAf,GACY,KAAW,IAEwB,CAC1Cj2B,KAAKyxB,oBAAoByE,IAC5Bl2B,KAAKq1B,kBAAkBa,EAAsB,GAE/C,IAAMC,EAAgBn2B,KAAKyxB,oBAAoByE,GAC/CC,EAAcA,EAAcx2B,OAAS,IACnCs2B,EAAaC,EAChB,CACF,EAMDE,EAAAA,iBAAA,SAAiBjH,GACfnvB,KAAK00B,yBAAyB/yB,KAAK3B,KAAKyxB,qBACxCzxB,KAAKyxB,oBAAsB9B,GAAmBR,EAC/C,EA5HHrW,EAiIEud,gBAAA,WACEr2B,KAAKyxB,oBAAsBzxB,KAAK00B,yBAAyBhtB,KAC1D,EAKD8qB,EAAAA,iBAAA,SAAiBhlB,GACf,MAAuBxN,KAAK+0B,qBAAqBvnB,KAC9BxN,KAAKg1B,mBAAmBxnB,GACtC8oB,IACHA,EAAet2B,KAAKg1B,mBAAmBxnB,GAAM,IAG/C,IADA,IAAI+oB,GAAS,EACJryB,EAAI,EAAGA,EAAIlE,KAAK60B,kBAAkBl1B,QAAU,CACnD,MAAYK,KAAK60B,kBAAkB3wB,GACnC,GAAIuL,EAAIqgB,WAAatiB,EAAI,CAGvB,GAFAiC,EAAI4gB,UACJrwB,KAAK60B,kBAAkBhyB,OAAOqB,EAAG,GAC7BsyB,EAAgB,CAClB,MAAUA,EAAe5zB,QAAQ6M,GAC7BnJ,GAAK,GACPkwB,EAAe3zB,OAAOyD,EAAG,EAE5B,CACDgwB,EAAa30B,KAAK8N,GAClB8mB,GAAS,CACV,MACCryB,GAEH,CACIqyB,GACHv2B,KAAK0yB,2BAA2BllB,GAAI,EAEvC,IAMDklB,2BAAA,SAA2BllB,EAAYuiB,GACrC,IAAK/vB,KAAK40B,2BAA2B6B,KAAK,SAAChnB,UAAWA,EAACqgB,WAAatiB,CAA1B,GAA+B,CACvE,IAASiC,EAAG,IAAAmgB,GAA2BpiB,EAAIuiB,GAC3C/vB,KAAK40B,2BAA2BjzB,KAAK8N,EACtC,CACF,EA9KHqJ,EAsLE4d,WAAA,SAAWzG,EAAoBC,GAC7B,IAAA5S,EAAAtd,OAAY8D,OAAOC,KAAK/D,KAAKkyB,YAAYC,cACzC,GAAIwE,EAAIh3B,OAAS,EAAG,CAClB,MAA4BgwB,GAAmB3vB,KAAKyxB,qBACpDkF,EAAIn1B,QAAQ,SAACgM,GACX8P,EAAK8U,iBAAiB5kB,GAAMikB,EAC5B,IAAkBmF,EAAGtZ,EAAKqX,gBAAgBnnB,GAC1C,GAAIopB,GAAgBA,EAAa1G,UAAYA,EAAW,CACtD,IAAMoG,EAAehZ,EAAK0X,mBAAmBxnB,GAC7C,GAAI8oB,EAAc,CAChB,IAII7mB,EAJc+mB,EAAGlZ,EAAKyX,qBAAqBvnB,GAK/C,IAJKgpB,IACHA,EAAiBlZ,EAAKyX,qBAAqBvnB,GAAM,IAG3CiC,EAAM6mB,EAAah3B,SACzBmQ,EAAI6gB,YACJkG,EAAe70B,KAAK8N,EAEvB,CACF,CACD6N,EAAKqX,gBAAgBnnB,GAAM,CAAEyiB,WAAAA,EAAYC,UAAAA,EAC1C,EACF,CAGD,IAFA,IACIzgB,EADEonB,EAAmB72B,KAAKy0B,qBAEtBhlB,EAAMzP,KAAK40B,2BAA2Bt1B,SAAU,CACtDmQ,EAAIugB,aAAe6G,EACnBpnB,EAAIwgB,WAAaA,EACjBxgB,EAAIygB,UAAYA,EAChB,IAAI9kB,SACAqE,EAAI2gB,cACNhlB,EAAMpL,KAAKg1B,mBAAmBvlB,EAAIqgB,aAEhC1kB,EAAMpL,KAAKg1B,mBAAmBvlB,EAAIqgB,UAAY,KAGhD1kB,EAAMpL,KAAK+0B,qBAAqBtlB,EAAIqgB,aAElC1kB,EAAMpL,KAAK+0B,qBAAqBtlB,EAAIqgB,UAAY,IAGhD1kB,EAAI0rB,MAAM,SAACxxB,GAAD,OAAQmK,EAAI0gB,OAAO7qB,EAAnB,IACZ8F,EAAIzJ,KAAK8N,EAEZ,CACDzP,KAAKkyB,YAAc,IACpB,IAKD6E,wBAAA,SAAwBzP,cAMlB0P,EAAiC,GACzBlzB,OAAOC,KAAKujB,EAAK6K,cACzB3wB,QAAQ,SAACgM,GACX,IAAMypB,EAASvZ,EAAKqX,qBAAqBvnB,GACrCypB,IACFD,EAAOA,EAAKt3B,OAAOu3B,GAEtB,GACDD,EAAK9D,KACH,SAACgE,EAAIC,GAAOD,OAAAA,EAAGjH,WAAakH,EAAGlH,YAAciH,EAAGhH,UAAYiH,EAAGjH,SAA/D,GAEF,IAAY1oB,EAKN,KAMF,KAkBJ,OAjBAwvB,EAAKx1B,QAAQ,SAACiO,GAET2nB,GACDA,EAAEnH,aAAexgB,EAAIwgB,YACrBmH,EAAElH,YAAczgB,EAAIygB,UAUpBkH,EAAEJ,KAAKr1B,KAAK8N,GAFZjI,EAAO7F,KANPy1B,EAAI,CACFnH,WAAYxgB,EAAIwgB,WAChBC,UAAWzgB,EAAIygB,UACfF,aAAcvgB,EAAIugB,aAClBgH,KAAM,CAACvnB,IAMZ,IAEF,EAzRHqJ,EA+REue,sBAAA,SAAsBL,GACpBh3B,KAAK80B,uBAAuBnzB,KAAK3B,KAAK60B,mBACtC70B,KAAK60B,kBAAoBmC,CAC1B,EAKDM,EAAAA,qBAAA,WACEt3B,KAAK60B,kBAAoB70B,KAAK80B,uBAAuBptB,KACtD,IAEDiqB,wBAAA,SACEvvB,EACAovB,EACAxQ,GAEa,UAAT5e,GACFpC,KAAKi1B,kBAAkBtzB,KAAK,CAAEqf,KAAAA,EAAMwQ,OAAAA,GAEvC,IAEDX,uBAAA,WACE,YAAY0G,oBAAoBC,KAAKx3B,KACtC,EAvTH8Y,EAyTUye,oBAAA,SACNvW,EACAxN,EACAikB,GAEA,GAAIzW,iBAEY,cADHA,EACJriB,IAAqB,CAC1B,IAAU6N,EAAGirB,EAASC,gBAAgBroB,EAAQ1F,MAAO,QAIrD,OAHA6C,EAAKoC,YAAc4E,EACnBhH,EAAKmrB,aAAa,kBAAmB3W,EAAK3V,KAC1CmB,EAAKmrB,aAAa,wBAAyBnkB,GACpChH,CACR,CAIH,GADcxM,KAAKi1B,kBAAkB2C,UAAU,SAACR,UAAOA,EAACpW,OAASA,CAAlB,IAA2B,EAC/D,CACT,MAAayW,EAASC,gBAAgBroB,EAAQ1F,MAAO,QAGrD,OAFA6C,EAAKoC,YAAc4E,EACnBhH,EAAKmrB,aAAaE,GAAoB7W,EAAK3V,KAE5CysB,CAAA,CACC,WAEH,IAEDC,eAAA,SAAeC,GAGb,iBAFMC,EAAQD,EAASE,KAAK3E,iBAAqBsE,IAAAA,GAAjD,KACWM,EAAGn4B,KAAKyxB,oBAAL,KAAiC,GAFX2G,EAAA,WAAA,MAIlC/vB,EAAA7J,QAAYgO,EAAK5C,aAAaiuB,IACvB3zB,EAAGma,EAAK4W,kBAAkB2C,UAAU,SAACR,GAAD,SAASpW,KAAK3V,MAAQA,CAAtB,GAE3CmB,EAAKoC,YAAcyP,EAAK4W,kBAAkB/wB,GAAGstB,OAAO,CAAC2G,GAPnB,EAGjBF,EAAAA,EAAAA,kBAKlBG,GACF,EAEDC,EAAAA,uBAAA,SAAuBnI,GACrB,WAAOoI,GAAqBt4B,KAAMkwB,EACnC,EAjWHsE,CAAA,CAAA,GAoW+BqD,GAAG,iDAGhC,WAAA,SAAAS,EACkB9H,EACAN,GADAM,KAAAA,yBACAN,eAAiB,EADjBlwB,KAAYwwB,aAAZA,EACAxwB,KAASkwB,UAATA,CACd,QAGJqI,EAAAA,UAAAA,YAAA,SAAYC,GACV,IAAKA,GAAeA,EAAYtqB,MAC9B,SAEF,IAAcuqB,EAAGD,EAAYC,SAC7B,IAAKA,GAAkC,IAAtBA,EAAShsB,SACxB,OAAO,EAET,IAAMe,EACHirB,EAAqB7uB,aAAa,wBAClC6uB,EAAqB7uB,aAAa,OAClC6uB,EAAqB7uB,aAAa,QACrC,IAAK4D,EACH,OACD,EACD,IACGxN,KAAKwwB,aAAawE,mBAAmBxnB,KACrCxN,KAAKwwB,aAAauE,qBAAqBvnB,GAExC,OACD,EACD,IAAe0iB,EAAGlwB,KAAKwwB,aAAamE,gBAAgBnnB,GACpD,OAAK0iB,GAGElwB,KAAKkwB,WAAaA,EAAUA,SACpC,IAhCD,GCnyBcwI,SAAAA,GAAkB/5B,GAEhC,IADAA,EAAMA,EAAIuH,OAAO,IACTb,MAAM,sBACZ,OACD1G,EACD,IAAMg6B,EAAOvpB,SAASzQ,EAAK,IAC3B,OAAI2sB,MAAMqN,GACD,GAEI,IAATA,GAAeA,GAAQ,OAAUA,GAAQ,OAAWA,EAAO,QACtD,IAEFC,OAAOC,cAAcF,EAC7B,CAEK,SAAAG,GAAsBn6B,GAC1B,OAAOA,EAAI4H,QACT,4DACAmyB,GAEH,EAKD,SAAY7I,GACVA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,OAAA,IAAA,SAGAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KAGAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,KAAA,IAAA,MAxDF,CAAA,CAAYA,KAAAA,GAyDX,CAzDoB,IA2DrB,IA+GYkJ,GA/GZC,gBAAA,WAOE,SAAAA,IAAAh5B,KANAgM,UAMA,EAAAhM,KALAi5B,iBAA2B,EAC3Btc,KAAAA,IAAc,EACd/M,KAAAA,KAAe,GACfspB,KAAAA,SAAmB,EAGjBl5B,KAAKgM,KAAO6jB,GAAUsJ,GACvB,CAsGH,OA/GAH,EAAAz1B,UAWEqD,SAAA,WACE,OAAQ5G,KAAKgM,MACX,KAAK6jB,GAAUuJ,MACb,MAAO,IACT,KAAcvJ,GAACwJ,MACb,MAAO,IACT,KAAcxJ,GAACyJ,MACb,MAAO,IACT,KAAKzJ,GAAU0J,MACb,MAAO,IACT,KAAK1J,GAAU2J,MACb,MAAO,IACT,KAAc3J,GAAC4J,MACb,MAAO,IACT,KAAc5J,GAAC6J,MACb,MAAO,IACT,KAAK7J,GAAU8J,QACb,MAAO,IACT,KAAK9J,GAAU+J,MACb,MAAO,IACT,KAAc/J,GAACgK,MACb,MAAO,IACT,KAAchK,GAACiK,QACb,MAAO,IACT,QAAeC,MACb,MAAO,IACT,KAAKlK,GAAUmK,KACb,MAAO,IACT,KAAKnK,GAAUoK,MACb,MAAO,IACT,KAAcpK,GAACqK,QACb,MAAO,KACT,KAAcrK,GAACsK,QACb,MAAO,KACT,KAAKtK,GAAUuK,KACb,MAAO,IACT,KAAKvK,GAAUwK,OACb,MAAO,IACT,KAAcxK,GAACyK,IACb,MAAO,IACT,KAAczK,GAAC0K,IACb,MAAO,IACT,KAAK1K,GAAU2K,MACb,MAAO,IACT,KAAK3K,GAAU4K,KACb,MAAO,IACT,KAAc5K,GAAC6K,GACb,MAAO,IACT,KAAc7K,GAAC8K,GACb,MAAO,IACT,KAAK9K,GAAU+K,GACb,MAAO,IACT,KAAK/K,GAAUgL,QACb,MAAO,KACT,KAAchL,GAACiL,UACb,MAAO,KACT,KAAcjL,GAACkL,OACb,MAAO,KACT,QAAeC,OACb,MAAO,KACT,KAAKnL,GAAUoL,SACb,MAAO,KACT,KAAKpL,GAAUqL,QACb,MAAO,KACT,KAAcrL,GAACsL,MACb,MAAO,KACT,KAActL,GAACuL,MACb,MAAO,KACT,KAAKvL,GAAUwL,MACb,MAAO,KACT,KAAKxL,GAAUyL,QACb,MAAO,KACT,KAAczL,GAAC0L,IACb,MAAO,UACT,KAAc1L,GAAC2L,IACb,MAAO,SACT,KAAK3L,GAAU4L,QACb,OAAY9e,KAAAA,IAAI/V,WAAa5G,KAAK4P,KACpC,KAAcigB,GAAC6L,IACf,KAAK7L,GAAU8L,IACb,OAAYhf,KAAAA,IAAI/V,WAClB,KAAcipB,GAAC+L,GACb,MAAO,IAAM57B,KAAK4P,KACpB,KAAcigB,GAACgM,KACb,MAAO,IAAM77B,KAAK4P,KACpB,KAAKigB,GAAUiM,KACb,OAAYlsB,KAAAA,KAAO,IACrB,KAAcigB,GAACkM,MACb,MAAO,IAAM/7B,KAAK4P,KACpB,KAAKigB,GAAUsJ,IACb,MAAO,UACT,QACE,YAAYvpB,KAEjB,EAMHopB,CAAA,CA/GA,GAuMgB,SAAAgD,GAAYhO,EAAaiO,GACvC,IACI/3B,EADEhF,EAAcC,MAAM,KAE1B,IAAK+E,EAAI,EAAGA,EAAI,IAAKA,IACnBhF,EAAEgF,GAAK8pB,EAGT,IADA9uB,EAAC,IAAQ8uB,GAAO+K,GAAOmD,IAAMnD,GAAOmD,IAAMnD,GAAOoD,QAC5Cj4B,EAAI,EAAGA,EAAI+3B,EAAKt8B,OAAQuE,GAAK,EAChChF,EAAE+8B,EAAK/3B,IAAM+3B,EAAK/3B,EAAI,GAExB,OACDhF,CAAA,EAnGD,SAAY65B,GACVA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UAGAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UAGAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,KArFF,CAAA,CAAYA,KAAAA,GAsFX,CAtFiB,IAwGLqD,IAAAA,GAA0B,CACrCrD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOsD,MACPtD,GAAOsD,MACPtD,GAAOoD,QACPpD,GAAOsD,MACPtD,GAAOsD,MACPtD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOsD,MACPtD,GAAOqB,KACPrB,GAAOuD,KACPvD,GAAO8C,KACP9C,GAAOsB,OACPtB,GAAOe,QACPf,GAAOwD,IACPxD,GAAOyD,KACPzD,GAAOK,MACPL,GAAOM,MACPN,GAAO0B,KACP1B,GAAOiB,KACPjB,GAAOW,MACPX,GAAOkB,MACPlB,GAAO0D,IACP1D,GAAOc,MACPd,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAO4C,IACP5C,GAAOa,MACPb,GAAOY,QACPZ,GAAO4B,GACP5B,GAAO6B,GACP7B,GAAO2B,GACP3B,GAAOgB,MACPhB,GAAO6C,GACP7C,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAOS,MACPT,GAAO4D,OACP5D,GAAOU,MACPV,GAAOuB,IACPvB,GAAO2D,MACP3D,GAAOoD,QACPpD,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAO2D,MACP3D,GAAOO,MACPP,GAAOwB,IACPxB,GAAOQ,MACPR,GAAOyB,MACPzB,GAAOoD,SAGTC,GAAa,IAAQrD,GAAOI,IAKfyD,IAAAA,GAAyB,CACpC7D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO+C,KACP/C,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO+D,KACP/D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO8D,QACP9D,GAAOgE,QACPhE,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO+D,KACP/D,GAAO8D,QACP9D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO+D,KACP/D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,QACP9D,GAAO8D,SAGTD,GAAY,IAAQ7D,GAAO8D,QAKdG,IAAAA,GAA8B,CACzCjE,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOkE,QACPlE,GAAOmE,MACPnE,GAAOoD,QACPpD,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOmE,MACPnE,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOoD,QACPpD,GAAOoE,OACPpE,GAAOoD,QACPpD,GAAOoD,QACPpD,GAAOkE,QACPlE,GAAOoD,QACPpD,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE,QACPlE,GAAOkE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EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAI4B1E,GAAG,CACjC2E,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGO3+C,GAAG,CACnB4+C,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRx9C,KAAM,IAmEwB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"}